/**
 * @author liuchang
 */

/*
 *addSubAccount，存储子账户信息的二维数组；
 */
var subAccount = new Array();
/*
 * 存储临时的二级分类
 */
var tempCategory2 = new Array();
/*
 *currentTbAccountType，当前的用户类型
 */
var currentTbAccountType=-1;
/*
 * 1,收入；0，支出；2，转账；
 */
var currentBillType= -1;
/*
 * 当前资产状况
 */
var myAllBalance=0

/*
 * 当前的父账户id
 */

var currentAid=-1;

/*
 * 当前的子账户id
 */

var currentSid=-1;

/*
 * 页面确认按钮提交状态值
 * false 未提交
 * true 正在提交，避免重复提交，提交事件结束后将其赋值为false；
 */

var submitStatus=false;

//payee 临时存储支付对象
var tempPayee = new Array();

/*
 * 金融机构分类
 */
var classBank = 0;
var classFinance = 1;
var classPay = 2;

/*
 * 当前编辑状态
 */
var currentEditType="add";
var currentBankEditType="add";
var currentPayeeEditType="add";

/* 当前窗口大小 */
var curClientHeight = 0;
var curClientWidth = 0;

/*
 * 最后处理的id
 * -1：未处理，0，删除，>0，添加或修改的ID
 */

var editNewPayeeId = -1; //支付对象

var curNewPayeeId = -1;  //编辑状态时之前用户的选择

var editNewBankId = -1;	//金融机构

var curNewBankId = -1;  //编辑状态时之前用户的选择

var isDeleteSubAccount = false; //是否编辑了


//获取账单账户
var getCreditAccount=-1

/*
 * 
 */
var deleteTips =[
	"删除账户将同时删除与该账户关联的所有收入、支出及转账记录，且不可恢复！是否确认删除？",
	"确认删除这笔记录吗？",
	"确认删除该记录？"
]
/*
 * 用于记账校验处理时赋值
 */
var transFormId=[""];

/*
 * 编辑账户是的全局变量，默认值为add，为添加；edit为编辑
 */
var accountHandleType = "add";


//全局变量
currentBankId = "";

/*
 * 启动时执行
 */
$( function() {
	$(document).unbind("keypress").keypress (function(event) {
		if (event.keyCode == 13) {
			event.preventDefault();
		}
	});

	//对于有限定长度的字段执行keyup事件
	$(".iLimitLength").unbind("keyup").keyup(function (event) {
		if ($(this).val().length > 30) {
			$(this).val($(this).val().substring(0, 30));
		}
	});
		
	//渲染上方的三个按钮
	$("#bank_tabs_title li").each( function (index) {
		$(this).unbind();
		$(this).click( function () {
			//清除所有验证信息
			$("#dRight .dValidation").empty();
			if ($(this).hasClass("click")) {
				closeTrans();
			} else {
				$("#dRightDetail").show();
				$("#dRightTableTrans tr.transSelected").removeClass("transSelected");
				if (index == 0) {
					currentBillType= 1;
					editTransaction("add", 1, 0);
				} else if (index == 1) {
					currentBillType= 0;
					editTransaction("add", 0, 0);
				} else {
					currentBillType= 2;
					editTransaction("add", 2, 0);
				}
			}
		});
	});

	//显示顶层标签
	$("#headtabs").tabs({
		selected: 0
	});

	//定制卷滚条
	//mCustomScrollbars();

	//适应IE6
	$('#addMyBank').bgiframe();                                                                                                                   

	//取出所有支持的帐户类型
	getAccountTypeList();

	//渲染左侧账户列表
	createAccountTree();

	//生成12个月账单列表
    createBillMonth();
    
    //打开支出框
	$("#bank_tabs_title li:nth-child(2)").click();

	//渲染右侧账本详情
	renderTransView();

	//给新建账户对话框添加圆角外框
	//将此部分后置到生成showAdd方法，根据currentEditType判断底部按钮的状态
	$('.addBox').each( function(index) {
		$(this).wrap('<div id="' + this.id + 'boxBg" class="boxBg" style="display:none;" />');
		$(this).before('<div class="boxBg1"></div><div class="boxBg2"></div><div class="boxBg3"></div><div class="boxBg4"></div>');
		boxAfter = '<div class="boxBg6"></div><div class="boxBg7"></div>';
		boxAfter += '<div class="boxBg8"><ul class="oplist">';
		boxAfter += '<li><span id="' + this.id + '_del_btn" class="del_btn"></span></li>';
		if ((this.id == "main") || (this.id == "getCreditCardBillList")) {
			boxAfter += '<li><span class="yes_btn"></span></li>';
			boxAfter += '<li><span class="cancel_btn"></span></li>';
		} else {
			boxAfter += '<li><span class="yes_btn"></span></li>';
		}
		boxAfter += '</ul></div>';
		boxAfter += '<div class="boxBg9"></div><div class="boxClose" onclick="cancelAdd(\'' + this.id + '\');"></div>';
		$(this).after(boxAfter);
		$(this).boxwidth($(this).width());
	});
	//调整屏幕尺寸
	curClientHeight = 0;
	curClientWidth = 0;
	$(window).resize();

	//validate生成对应的标签
	$.metadata.setType("attr", "validate");

});
/** 调整外框宽度以显示周边圆角
 */
jQuery.fn.boxwidth = function (boxContentWidth) {
	this.siblings(".boxBg2").width(boxContentWidth - 2);
	this.width(boxContentWidth);
	this.siblings(".boxBg8").width(boxContentWidth);
	this.parent().width(boxContentWidth + 36);
	return this;
}
/** 调整外框高度以显示周边圆角
 */
jQuery.fn.boxheight = function (boxContentHeight) {
	this.siblings(".boxBg4").height(boxContentHeight);
	this.height(boxContentHeight);
	this.siblings(".boxBg6").height(boxContentHeight);
	this.parent().height(boxContentHeight+84);
	return this;
}
/** 使某图层居于屏幕正中
 */
jQuery.fn.center = function () {
	this.css("position","absolute");
	this.css("top", ( $(window).height() - this.height() ) / 2+$(window).scrollTop() + "px");
	this.css("left", ( $(window).width() - this.width() ) / 2+$(window).scrollLeft() + "px");
	return this;
}

/** 屏幕大小改变时执行
 */
$(window).resize( function() {
	if (((curClientHeight != document.body.clientHeight) && (curClientHeight != document.body.clientHeight - 30)) || (curClientWidth != $(window).width())) {
		curClientHeight = document.body.clientHeight;
		curClientWidth = document.body.clientWidth;
		if ($("#main").parent().attr("tagName") != "BODY") {
			$("#main").parent().center();
		}
		if ($("#addMyPayee").parent().attr("tagName") != "FORM") {
			$("#addMyPayee").parent().center();
		}
		if ($("#getCreditCardBillList").parent().attr("tagName") != "FORM") {
			$("#getCreditCardBillList").parent().center();
		}
		if ($("#addMyBank").parent().attr("tagName") != "FORM") {
			$("#addMyBank").parent().center();
		}
	
		$("#dLeftAccount").height($(window).height() - $("#dLeftHeader").height() - 1);
		$("#dLeftDragger").height($("#dLeftAccount").height());
		RRHeight = $(window).height() - $("#ui-headtabs").height() - $("#dRightButtons").height() - 80;
		dRDHidden = false;
		if($('#dRightDetail').is(':visible')) {
			RRHeight = RRHeight - $("#dRightDetail").height();
		} else {
			dRDHidden = true;
		}
		$("#dRightRecords").height(RRHeight);
		$("#dRightRecords #dRRDetail").height(RRHeight - 30);
		$("#dRightDragger").height($("#dRRDetail").height() - 2);
		
		$("#dRight").children().hide();
		$("#dLeft").width($(window).width() * 0.22);
		if ($("#dLeft").width() <= 165) {
			$("#dLeft").width(165);
			$("body").width(750);
			$("#dRight").width(584);
		} else {
			$("body").width($(window).width());
			$("#dRight").width($(window).width() * 0.78 - 10);
		}
		$("#dRightRecords").width($("#dRight").width() - 10);
		$("#dRight").children().show();
		if (dRDHidden) {
			$('#dRightDetail').hide();
		}
	
		//调整列表表格宽度
		$(".dRRBCenter").each(function (index) {
			$(this).width($(this).parent().parent().width() - 18);
		});
		/*$(".container").each(function (index) {
			$(this).width($(this).parent().width() - 12);
		});*/
	
		//左侧账户列表名字宽度
		$(".sMAName").width($("#accountList").width() - 135);
		$(".sMAName").each(function(i) {
			maxLen = Math.floor(($(".sMAName").width() - 1) / 13);
			var finalFullName = $(this).attr("fullname").replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
			if ($(this).attr("fullname").length > maxLen) {
				$(this).html(finalFullName.substring(0, maxLen - 1) + "…");
			} else {
				$(this).html(finalFullName);
			}
		});
		
		//上部交易区宽度
		$("#dRDBack4").width($("#dRightDetail").width() - 52 - $("#dRDBack2").width());
	
		//中间桔色条的宽度
		$("#accountBack2").width($("#dRight").width() - 34);
		
		//添加空行
		$("#dRightTableTrans").append(generateEmptyLines("#dRightTableTrans", 7, "clickTransaction(\"add\", 0, 0)"));
	
		setTransTDWidth();
	}
});

/** 交易区关闭
 */
function closeTrans() {
	$("#bank_tabs_title li").removeClass("click");
	$("#dRightDetail").hide();

	RRHeight = $(window).height() - $("#ui-headtabs").height() - $("#dRightButtons").height() - 80;
	$("#dRightRecords").height(RRHeight);
	$("#dRightRecords #dRRDetail").height(RRHeight - 30);
	$("#dRightDragger").height($("#dRRDetail").height() - 2);
	//添加空行
	$("#dRightTableTrans").append(generateEmptyLines("#dRightTableTrans", 7, "clickTransaction(\"add\", 0, 0)"));
	setTransTDWidth();
} 

/** 设定右侧交易区表格列宽
 */
function setTransTDWidth() {
	nTDWidth = $("#dRTHeader").width() * 0.13;
	$("#dRightRecords #dRTHeader td:nth-child(1)").width(nTDWidth);
	$("#dRightRecords #dRTHeader td:nth-child(2)").width(nTDWidth);
	$("#dRightRecords #dRTHeader td:nth-child(3)").width(nTDWidth);
	$("#dRightRecords #dRTHeader td:nth-child(4)").width(nTDWidth);
	$("#dRightRecords #dRTHeader td:nth-child(5)").width(nTDWidth);
	$("#dRightRecords #dRTHeader td:nth-child(6)").width(nTDWidth);

	$("#dRightTableTrans td:nth-child(1)").width(nTDWidth);
	$("#dRightTableTrans td:nth-child(2)").width(nTDWidth);
	$("#dRightTableTrans td:nth-child(3)").width(nTDWidth);
	$("#dRightTableTrans td:nth-child(4)").width(nTDWidth);
	$("#dRightTableTrans td:nth-child(5)").width(nTDWidth);
	$("#dRightTableTrans td:nth-child(6)").width(nTDWidth);
}

/** 编辑交易记录
 * @param myType 显示类型：可以为edit或者add
 * @param myClass 账目类型：0表示收入，1表示支出，2表示转账
 * @param id 交易号
 */
function editTransaction(myType, myClass, id) {
	$("#dRightDetail").show();

	RRHeight = $(window).height() - $("#ui-headtabs").height() - $("#dRightButtons").height() - 80 - $("#dRightDetail").height();
	$("#dRightRecords").height(RRHeight);
	$("#dRightRecords #dRRDetail").height(RRHeight - 30);
	$("#dRightDragger").height($("#dRRDetail").height() - 2);

	//添加空行
	$("#dRightTableTrans").append(generateEmptyLines("#dRightTableTrans", 7, "clickTransaction(\"add\", 0, 0)"));
	setTransTDWidth();

	$("#bank_tabs_title li").removeClass("click");
	var widthRDBack2 = 0;

	switch (myClass) {
		case 0:
			//支出
			$("#bank_tabs_title li").eq(1).addClass("click");
			widthRDBack2 = 110;
			break;

		case 1:
			//收入
			widthRDBack2 = 30;
			$("#bank_tabs_title li").eq(0).addClass("click");
			break;

		case 2:
			//转账
			widthRDBack2 = 200;
			$("#bank_tabs_title li").eq(2).addClass("click");
			break;

		default:
			break;
	}

	$("#dRDBack2").width(widthRDBack2);
	$("#dRDBack4").width($("#dRightDetail").width() - 55 - widthRDBack2);

	//清理下拉框
	$('#dRDContent div.select').replaceWith( function() {
		var selectName = $(this).children("input").attr("name");
		return "<select name='" + selectName + "' id='" + selectName + "' class='select'></select>";
	});
	//生成内容
	renderBillEditArea(myType, myClass, id);
}

/** 根据主图层名称和编辑状态处理对话框底部按钮的事件
 * @param dialogName 对话框ID
 * @param id 主账户编号 
 */
function changeButton(dialogName, id) {
	switch (dialogName) {
		//添加账户
		case "main" :
			//添加账户窗口有两个按钮：保存和取消
			$("#mainboxBg .yes_btn").unbind("click").click(function () {
				myFormValidate('#accountForm1');
			});
			$("#mainboxBg .cancel_btn").unbind("click").click(function () {
				cancelAdd("main");
			});
			if (id === undefined ) {
				$('#mainboxBg #main_del_btn').parent().hide();		
				$('#mainboxBg #main_del_btn').parent().css("visibility", "hidden");		
			} else {
				//如果是编辑态，则还应该有一个删除按钮
				$('#mainboxBg .boxBg8 .oplist .del_btn').parent().show();
				$('#mainboxBg #main_del_btn').parent().css("visibility", "visible");		
				$('#mainboxBg .boxBg8 .oplist .del_btn').unbind().click( function(){
					//删除主账户操作
					if (confirm(deleteTips[0])){
						closeAdd(dialogName);
						delAccount(id);
					}
				});
			}
			break;
		
		case "addMyBank" :
			$('#addMyBankboxBg .boxBg8 .oplist .del_btn').parent().hide();
			$('#addMyBankboxBg .boxBg8 .oplist .yes_btn').unbind().click( function(){
				closeAdd(dialogName);
			});
			break;
			
		case "getCreditCardBillList":
			//导入账单窗口有两个按钮：确定和取消
			$('#getCreditCardBillListboxBg .boxBg8 .oplist .del_btn').parent().hide();
			$('#getCreditCardBillListboxBg .boxBg8 .oplist .yes_btn').unbind().click( function(){
				myFormValidate('#billForm');
			});
			$("#getCreditCardBillListboxBg .cancel_btn").unbind("click").click(function () {
				cancelAdd("getCreditCardBillList");
			});
			break;
			
		default :
			$('.boxBg8 .oplist .del_btn').parent().hide();
			$('.boxBg8 .oplist .yes_btn').unbind().click( function(){
				closeAdd(dialogName);
			});
			break;
	}
}

/** 显示弹出对话框
 * @param dialogName 对话框ID
 * @param id 主账户编号 
 */
function showAdd(dialogName, id) {
	//阻止事件冒泡传递
//	window.event.cancelBubble = true; 

	//首先处理底部按钮事件
	changeButton(dialogName, id);
	if (dialogName == "addMyBank") {
		$("#scover1").show();
		$("#" + dialogName).parent().css("z-index", 300);
	} else {
		$("#scover").show();
	}
	$("#" + dialogName).parent().show();

	//本form重置
	if (dialogName == "main") {
		//$("#accountForm1")[0].reset();
		//$("#accountForm2")[0].reset();
		//$("#accountForm3")[0].reset();
	} else {
		$("#" + dialogName).parents("form")[0].reset();
	}

	//清除所有验证信息
	$("#" + dialogName + " .dValidation .error").replaceWith("");

	if (dialogName == "main") {
		if (id === undefined) {
			//添加状态，默认现金
			//清空数据
			//显示红色的星星
			accountHandleType="add";
			$("#aType").next().show();
			subAccount = [];
			$("#addAccount_step2").hide();
			$("#dUpperTable .dRightTable").html("<tr><td width='100%'>&nbsp;</td></tr>");
			$("#main h1").html("新建账户");
			$("#main #name").val("");  
			$("#main #content").val("");
		    $("#mainboxBg #subName").val("");
			$("#dEARight #balance2").val("");
			$("#dEARight #balance3").val("");
			$("#aType").empty().append('<select id="combo" name="accounttype" validate="{required:[\'账户类型\']}" class="select" onchange="changeAddViewLeft($(this).val());"></select>');
			getAccountTypeList();
			currentEditType = "add";
			editAccountTypeId = 1;
			//新建子账户时将accountIdForCheck数据清空
			if(editAccountTypeId == 3 ) $("#accountIdForCheck").attr("value", "");
			changeAddViewLeft(editAccountTypeId);			
		} else {
			//修改currentEditType状态
			//将编辑id赋值到accountId中		
			accountHandleType="edit";
			$("#main h1").html("编辑账户");
			$("#main #name").after("<input type='hidden' id='accountId' value="+id+" />");
			$("#aType").next().hide();
			currentEditType = "edit";
			var listAccount = "";
	
			//获取所有子账户列表
			try {
				var sql1 = "SELECT a.id AS aid, a.name AS aname, tbBank_id, a.tbAccountType_id AS a_tid, a.comment AS acomment, b.id AS bid, b.name AS bname, tbCurrency_id, openbalance as Balance, days, enddate, b.tbaccounttype_id AS b_tid ";
				sql1 += "FROM tbAccount a, tbSubAccount b WHERE aid=b.tbAccount_id AND aid=" + id + " GROUP BY bid";
				listAccount = JSON.parse(window.external.QuerySQL(sql1));
			} catch (e) {
				listAccount = [{
					"aid": 1,
					"aname": "招商银行信用卡",
					"tbBank_id": 3,
					"a_tid": 3,
					"acomment": "备注",
					"bid": 3,
					"bname": "美元",
					"tbCurrency_id": 2,
					"Balance": 124,
					"Days": 365,
					"EndDate": "2012-12-21",
					"b_tid": 101
				},{
					"aid": 1,
					"aname": "招商银行信用卡",
					"tbBank_id": 2,
					"a_tid": 2,
					"acomment": "备注",
					"bid": 4,
					"bname": "人民币",
					"tbCurrency_id": 1,
					"Balance": 444,
					"Days": 365,
					"EndDate": "2012-12-21",
					"b_tid": 102
				},{
					"aid": 1,
					"aname": "招商银行信用卡",
					"tbBank_id": 2,
					"a_tid": 2,
					"acomment": "备注",
					"bid": 4,
					"bname": "人民币",
					"tbCurrency_id": 1,
					"Balance": 444,
					"Days": 365,
					"EndDate": "2012-12-21",
					"b_tid": 102
				},{
					"aid": 1,
					"aname": "招商银行信用卡",
					"tbBank_id": 2,
					"a_tid": 2,
					"acomment": "备注",
					"bid": 4,
					"bname": "人民币",
					"tbCurrency_id": 1,
					"Balance": 444,
					"Days": 365,
					"EndDate": "2012-12-21",
					"b_tid": 102
				}];
			}
			var editAccountTypeId = 0;
			var c_tid = "";
			var m_tbBank_id = 0;
			$.each(listAccount, function(j, m) {
				if (m.a_tid != "") {
					//赋值
					$("#name").attr("value",m.aname);
					$("#content").attr("value",m.acomment);
	
					//显示现有账户类型
					editAccountTypeId = m.a_tid;
					m_tbBank_id = m.tbBank_id;
					//每次进入时将当前的用户的选择记录下
					curNewBankId = m.tbBank_id;

					//将生成有子账户时的数据subAccount的操作前置
					if(editAccountTypeId == 2 || editAccountTypeId == 3) {
						//多子账户情况赋值
						//清空数据
						subAccount = [];
						var desc = "";
						var id = editAccountTypeId;
						$.each(listAccount, function(j, m) {
							var temp = [];
							var tempCur = $('#currency').val();
			
							if (editAccountTypeId == 2) {
								//信用卡
								temp.push(m.tbCurrency_id);
								//信用卡类型金额取负值
								temp.push(0-m.Balance);
								temp.push("");
								temp.push("");
								temp.push("");
								temp.push(m.bname);
								temp.push(m.bid);
								$("#currency>option[value='" + tempCur + "']").remove();
							} else if (editAccountTypeId == 3) {
								//储蓄卡
								temp.push(m.tbCurrency_id);
								temp.push(m.Balance);
								temp.push(m.b_tid);
								if (m.b_tid == 100) {
									//活期存款不记录
									temp.push("");
									temp.push("");
								} else {
									temp.push(m.Days);
									temp.push(m.EndDate);
								}
								temp.push(m.bname);
								temp.push(m.bid);
							}
							subAccount.push(temp);
						});
					}
					
					//按照账户类型执行不同的页面生成逻辑
					changeAddViewLeft(editAccountTypeId);
					//为校验事件赋值
					if(editAccountTypeId == 3 ) $("#accountIdForCheck").attr("value", m.aid);
					
					//赋值类型
					$("#aType").html("<input type='text' class='iDisabled' disabled value='" + renderAccountTypeInfo(m.a_tid) + "'>");
					//隐藏星号
					$("#aType").next().hide();
					if (editAccountTypeId != 2 && editAccountTypeId != 3) {
						//设置余额
						if (editAccountTypeId == 7) {
							$("#main #changeContent #balance1").attr("value",0-m.Balance);
						} else {
							$("#main #changeContent #balance1").attr("value",m.Balance);
						}

						//设置币种（币种不可修改，移除）
						$("#main #changeContent #currency").replaceWith("<input type='text' id='currency' class='iDisabled' disabled value='" + getCurrencyDesc(m.tbCurrency_id) + "'>");
					}
				}
				return false;
			});

			//开始赋值
			if (editAccountTypeId == 4) {
				//支付
				var list = getBankInfo(classPay);
				$.each(list, function(i, n) {
					if(m_tbBank_id == n.id)
						//先起初空选项的选中状态
						$("#bank").val(n.id);
				});
			} else if (editAccountTypeId == 5) {
				//投资
				var list = getBankInfo(classFinance);
				$.each(list, function(i, n) {
					if(m_tbBank_id == n.id)
						$("#bank").val(n.id);
				});
		   } else if ( editAccountTypeId == 3 || editAccountTypeId == 2 ) {
				//信用卡或储蓄卡
				var list = getBankInfo(classBank);
				$("#main #addAccount_step1 #bank").parent().replaceWith( function() {
					var selectName = $(this).children("input").attr("name");
					return "<select name='bank' id='bank' class='select'></select>";
				});
				var content='';
				$.each(list, function(i, n) {
					if(m_tbBank_id == n.id){
						content+='<option value="'+n.id+'" selected>'+n.name.replace(/&/g,"&amp;")+'</option>';
					}else{
						content+='<option value="'+n.id+'">'+n.name.replace(/&/g,"&amp;")+'</option>';
						
					}	
				});
				//为空值时
				if (m_tbBank_id == "" || m_tbBank_id == 0 )
					content += '<option value="" selected>(空)</option>';
				else
					content += '<option value="">(空)</option>';
				$("#main #addAccount_step1 #bank").html(content);
		   }
		}
	}

	//调整付款人对话框宽度和高度
	if (dialogName == "addMyPayee") {
	    $("#payeeStep1 .dEABack").width(676);
		$("#payeeStep1 .editArea").width($("#payeeStep1 .dEABack").width() - 2);
		$("#payeeStep1 .dEABack2").width($("#payeeStep1 .dEABack").width() - 22);
		$("#payeeStep1 .dEABack8").width($("#payeeStep1 .dEABack").width() - 14);
		$("#addMyPayee .dStep1").width($("#payeeStep1 .dEABack").width());

		returnAddPayeeStart();
		getCurrentPayee();
	} else if (dialogName == "addMyBank") {
	    $("#addMyBank .dEABack").width(276);
		$("#addMyBank .editArea").width($("#addMyBank .dEABack").width() - 2);
		$("#addMyBank .dEABack2").width($("#addMyBank .dEABack").width() - 22);
		$("#addMyBank .dEABack8").width($("#addMyBank .dEABack").width() - 14);
		$("#addMyBank .dStep1").width($("#addMyBank .dEABack").width());
		returnAddBankStart();
		createNewBankListView();
	}

	//调整列表表格宽度
	$(".dRRBCenter").each(function (index) {
		$(this).width($(this).parent().parent().width() - 18);
	});
	
	//重定义回车事件
	$("#" + dialogName).unbind('keypress').keypress(function (event) {
		event.stopPropagation();
		if (event.keyCode == 13) {
			event.preventDefault();
			$("#" + dialogName).parents(".boxBg").find(".yes_btn").click();
		}
	});
	
	$("#" + dialogName + " .editArea").unbind('keypress').keypress(function (event) {
		event.stopPropagation();
		if (event.keyCode == 13) {
			event.preventDefault();
			$("#" + dialogName + " .editArea .bAdd").click();
		}
	});

	adjustWH(dialogName);
}

/** 调整弹出框高度和宽度
 * @param dialogName 弹出框名
 */
function adjustWH(dialogName) {
	//创建自定义select
	customizeSelect("#" + dialogName);
	if (($("#" + dialogName + " #addAccount_step2").is(":hidden")) || (!$("#" + dialogName + " #addAccount_step2").html())) {
		$("#" + dialogName).boxwidth($("#" + dialogName + " .dStep1").width() + 10);
		$("#" + dialogName).boxheight($("#" + dialogName + " .dStep1").height() + 10);
	} else {
		$("#" + dialogName).boxwidth($("#" + dialogName + " .dStep1").width() + $("#addAccount_step2").width() + 20);
		$("#" + dialogName).boxheight($("#" + dialogName + " #addAccount_step2").height() + 10);
	}
	$("#" + dialogName).parent().center();	
}

function cancelAdd(dialogName) {
	if (dialogName == "addMyBank") {
		closeAdd(dialogName);
		return;
	} else if( dialogName == "addMyPayee" ){
		closeAdd(dialogName);
		return;
	} else {
		//修改bug1825,根据用户操作参数isDeleteSubAccount判断是否渲染左右边
		if(dialogName == "main" && isDeleteSubAccount){
			createAccountTree();
			renderTransView();
			//最后将参数重置为初始值
			isDeleteSubAccount=false;
		}
		renderEditArea("add",2,-1);
		renderEditArea("add",3,-1);
		customizeSelect();
		curNewBankId=-1;
		curNewPayeeId=-1;
		$("#dEAType2").hide();
		$("#dEAType3").hide();
		$("#addAccount_step2").hide();
		$("#scover").hide();	
	}
	$("#" + dialogName).parent().hide();
}

/** 关闭添加账户等对话框
 * @param dialogName 对话框ID
 */
function closeAdd(dialogName) {
	var content = "";
	if (dialogName == "addMyBank") {
		//关闭添加时根据结果选择是否重置$("#main #bank")金融机构；
		//-1时未做操作
		if (editNewBankId != -1) {
			$("#main #addAccount_step1 #bank").parent().replaceWith(function() {
				var selectName = $(this).children("input").attr("name");
				return "<select name='" + selectName + "' id='" + selectName + "' class='select'></select>";
			});
			var isEmpty = false;
			var newId = 0;
			if (currentTbAccountType == 4) {
				//支付
				var list = getBankInfo(classPay);
				$.each(list, function(i, n) {
					if (editNewBankId > 0) {
						if (n.id == editNewBankId)
							content += '<option value="' + n.id + '" selected>' + n.name.replace(/&/g,"&amp;") + '</option>';
						else
							content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';	
					} else if (editNewBankId == 0) {
						content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';
					} else {
						if (curNewBankId != "" && curNewBankId != -1) {
							if (n.id == curNewBankId)
								content += '<option value="' + n.id + '" selected>' + n.name.replace(/&/g,"&amp;") + '</option>';
							else
								content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';
						} else {
							content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';
						}
					}  
				});
			} else if (currentTbAccountType == 5) {
				//投资
				var list = getBankInfo(classFinance);
				$.each(list, function(i, n) {
					if(editNewBankId>0){
						if( n.id == editNewBankId ) content += '<option value="' + n.id + '" selected>' + n.name.replace(/&/g,"&amp;") + '</option>';
						else content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';	
					} else if ( editNewBankId == 0 ){
						content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';
					} else {
						if( curNewBankId != "" && curNewBankId != -1 ) {
							if( n.id == curNewBankId ) content += '<option value="' + n.id + '" selected>' + n.name.replace(/&/g,"&amp;") + '</option>';
							else content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';
						} else {
							content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';
						}
					}  
				});
			} else {
				//银行
				var list = getBankInfo(classBank);
				$.each(list, function(i, n) {
					if(editNewBankId>0){
						if( n.id == editNewBankId ) content += '<option value="' + n.id + '" selected>' + n.name.replace(/&/g,"&amp;") + '</option>';
						else content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';	
					} else if ( editNewBankId == 0 ){
						content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';
					} else {
						if( curNewBankId != "" && curNewBankId != -1 ) {
							if( n.id == curNewBankId ) content += '<option value="' + n.id + '" selected>' + n.name.replace(/&/g,"&amp;") + '</option>';
							else content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';
						} else {
							content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';
						}
					}  
				});
			}
			//用户操作了编辑状态，清空用的选择
			if(editNewBankId==0){
				//最后删除bank
				content += "<option selected>(空)</option>";
			} else if (editNewBankId>0){
				content += "<option>(空)</option>";	
			} else {
				if( curNewBankId == "" || curNewBankId == -1 ){
					//为空或者为-1时
					content += "<option selected>(空)</option>";	
				} else {
					content += "<option>(空)</option>";
				}
				
			}
			
			
			$("#main #addAccount_step1 #bank").html(content);
			customizeSelect();
			//常用变量使用后置为初始值
			editNewBankId=-1;
		}
		$("#scover1").hide();
	} else if( dialogName == "addMyPayee" ){
		//添加支付对象时。刷新页面
		
		//关闭添加时根据结果选择是否重置$("#main #bank")金融机构；
		//-1时未做操作
		if (editNewPayeeId != -1) {
			$("#dRDContent #dRDetailRight #sPayee").parent().replaceWith( function() {
				var selectName = $(this).children("input").attr("name");
				return "<select name='" + selectName + "' id='" + selectName + "' class='select'></select>";
			});
			if (editNewPayeeId > 0) {
				//已编辑或添加
				content+= renderPayee(editNewPayeeId);
			} else if (editNewPayeeId == -1) {
				//未处理
				content+= renderPayee(curNewPayeeId);
			} else {
				//最后一次为删除
				content+= renderPayee();
			}
			
			$("#dRDContent #dRDetailRight #sPayee").html(content);
			customizeSelect();
			
			//重置为初始值
			editNewPayeeId = -1;	
		}
		$("#scover").hide();
	} else if( dialogName == "main") {
		//交易区
		renderTransView();
		renderEditArea("add", 2, -1);
		renderEditArea("add", 3, -1);
		$("#dEAType2").hide();
		$("#dEAType3").hide();
		$("#addAccount_step2").hide();
		//将值初始化
		curNewBankId = -1;
		$("#scover").hide();	
	} else {
		$("#scover").hide();
	}
	$("#" + dialogName).parent().hide();
}

/** 定制卷滚条
 */
function mCustomScrollbars() {
	$("#dLeftAccount").mCustomScrollbar("vertical",0,"easeOutCirc",1.05,"auto","yes","no",0);
	$("#dRRDetail").mCustomScrollbar("vertical",0,"easeOutCirc",1.05,"auto","yes","no",0);
}

/** 定制下拉框
 * @param divId 指定哪个div下面的select需要被定制
 */
function customizeSelect(divId) {
	var openSelect = null;
	if (!divId) divId = "";
	$(divId + " select").each( function() {
		var i = $(this);
		var list = [];
		var label = "";
		var firstElement = "";
		i.children().each( function() {
			var tagName = String($(this)[0].tagName).toUpperCase();
			if(tagName == "OPTION") {
				list.push($(this));
				if (firstElement == "") firstElement = $(this).val();
			} else if(tagName == "OPTGROUP") {
				if (firstElement == "") firstElement = $(this).children()[0].value;
				var subList = {
					label:$(this).attr("label"),
					img:$(this).attr("img"),
					children:$(this).children()
				};
				list.push(subList);
			}
		});
		var sName = $(this).attr("name");

		//定义选定时的value
		var selectedValue = "";
		var html = "<div class=\"select span-5\" >";
		if (sName == "currency") {
			html += "<input type=\"hidden\" id=\"" + sName + "\" name=\"" + sName + "\" value=\"" + firstElement + "\" class=\"currency\" validate=\"{required:['币种']}\" />";
		} else if ((sName == "sAccount") || (sName == "sAccount2")) {
			html += "<input type=\"hidden\" id=\"" + sName + "\" name=\"" + sName + "\" value=\"" + firstElement + "\" validate=\"{Different:true}\" />";
		} else {
			html += "<input type=\"hidden\" id=\"" + sName + "\" name=\"" + sName + "\" value=\"" + firstElement + "\" />";
		}
		html += "<div class=\"label\" ></div>";
		html += "<div class=\"button\" ><img src=\"../images/selectarrow.gif\" /></div>";
		html += "<div class=\"list hide\" >";
		for (var node in list) {
			if (list[node].label != undefined) {
				var img = "";
				if (list[node].img != undefined) {
					img = "<img src=\"" + list[node].img + "\" />";
				}
				html += "<div class=\"optgroup span-6 last\" >" + img + list[node].label + "</div>";
				list[node].children.each(function() {
					var img = "";
					if($(this).attr("img")) {
						img = "<img src=\"" + $(this).attr("img") + "\" />";
					}
					var selected = "";
					if($(this).attr("selected")) {						
						selected = "selected=\"selected\"";
						//赋值给变量
						if(list[node].attr("mhvalue")) {
							label = img + list[node].attr("mhvalue");
						} else{
							label = img + $(this).html();
						}
						
					}
					html+= "<div class=\"option span-6 last\" " + selected + " val=\"" + $(this).val() + "\">" + img + $(this).html() + "</div>";
				});
			} else {
				var img = "";
				if(list[node].attr("img") != undefined) {
					img = "<img src=\"" + list[node].attr("img") + "\" />";
				}
				var selected = "";
				if(list[node].attr("selected")) {
					selected = "selected=\"selected\"";
					//赋值给变量
					if(list[node].attr("mhvalue")) {
						//selectedValue = list[node].attr("mhvalue");
						selectedValue = $(this).val();
					} else{
						selectedValue = $(this).val();
					}
					if(list[node].attr("mhvalue")) {
						label = img + list[node].attr("mhvalue");
					}else {
						label = img + list[node].html();
					}
				}
				var mhvalue = "";
				var catLevel = "";
				if(list[node].attr("mhvalue")) {
					mhvalue = " mhvalue=\"" + list[node].attr("mhvalue") + "\"";
					if (list[node].attr("mhvalue").indexOf(":") == -1) {
						catLevel = " firstCat";
					} else {
						catLevel = " secondCat";
					}
				}
				html+= "<div class=\"option span-6 last" + catLevel + "\" " + selected + mhvalue + " val=\"" + list[node].val() + "\">" + img + list[node].html() + "</div>";
			}
		}
		html += "</div>";
		html += "</div>";
		html = $(html);
		i.replaceWith(html);
		
		//将选定的项赋值给需求
	    html.children("input[name='" + sName + "']").val(selectedValue);
		html.data("state", "close");
		var list = html.children(".list");
		list.hide();
		if(!label) {
			label = list.children().first().html();
		}
		list.children(".option").last().addClass("bottom");
		html.children(".label").html(label);
		
		var curOption = 1;
		var curChild;

		list.unbind('keydown').keydown(function (event) {
			if (event.keyCode == 9) {
				//TAB键
				html.focus();
			} else {
				if (event.keyCode == 38) {
					//上键
					if (curOption > 1) curOption --;
				} else if (event.keyCode == 40) {
					//下键
					if (curOption < list.children(".option").length) curOption ++;
				}
				curChild = list.children(".option:nth-child(" + curOption + ")");
				list.children(".option").css("background", "#F7FBFE");
				curChild.css("background", "#E1EDF5");
				html.children("input[name='" + sName + "']").val(curChild.attr("val"));
				if(curChild.attr("mhvalue")) {
					html.children(".label").html(curChild.attr("mhvalue"));
				} else {
					html.children(".label").html(curChild.html());
				}
			}
		});

   		list.unbind('keypress').keypress(function (event) {
   			if (event.keyCode == 13) {
				event.preventDefault();
				list.hide();
				html.data("state", "close");
   			}
   		});

		list.children(".option").mouseover(function () {
			$(this).css("background", "#E1EDF5");
		}).mouseout(function () {
			$(this).css("background", "#F7FBFE");
		}).click(function () {
			html.children("input[name='" + sName + "']").val($(this).attr("val"));
			if($(this).attr("mhvalue")) {
				html.children(".label").html($(this).attr("mhvalue"));
			} else {
				html.children(".label").html($(this).html());
			}

			switch (sName) {
				//对于账户类型的下拉框，需要有一个特别事件响应
				case "accounttype":
					setAccountType($(this).attr("val"));
					subAccount = [];
					//renderSubAccountView($(this).attr("val"));
					break;

				case "sAccount":
					$.each(getCurrentSubAccount($('#sAccount').val()), function(i, n) {
						$("#currencyName").html(n.cName + "：");
					});
					if (currentBillType == 2)
						getIamount2Status();
					break;

				case "sAccount2":
					var subAccountId = $("#sAccount2").val();
					getIamount2Status();
					break;

				case "myType":
					//资产类型的联动事件
					getMytypeStatus($(this).attr("val"));
					break;
			}
		});
		//焦点切换时响应
		html.focusin(function() {
			if ($(this).data("state") == "close") {
				$(".select").css("z-index", 500);
				$(".sRDRInput").css("z-index", 500);
				$(this).css("z-index", 2000);
				$(this).closest(".sRDRInput").css("z-index", 2000);
				function show() {
					list.show();
					list.focus();
					html.data("state", "open");
				}
				setTimeout(show, 125);
				/*list.slideDown(125, function() {
					html.data("state", "open");
				});*/
			}
		});
		html.click( function(event) {
			if ($(this).data("state") == "close") {
				html.focusin();
			} else {
				html.focusout();
			}
		});
		html.focusout(function(event) {
			if ($(this).data("state") == "open") {
				//$(html).children(".button").removeClass("active");
				list.hide();
				html.data("state", "close");
			}
		});
	});
}

function LoadNewContent(id,file) {
	$("#" + id + " .customScrollBox .content").load(file, function() {
		//mCustomScrollbars();
	});
}

/** 生成账户类型下拉框
 */
function getAccountTypeList() {
	var list = getAccountTypeInfo();
	var desc = "";
	$.each(list, function(i, n) {
		desc += '<option value="' + n.id + '">' + n.Name + '</option>';
	});
	$("#combo").html(desc);
}

/** 改变账户类型时调用此方法
 * @param id 账户类型
 */
function setAccountType(id) {
	changeAddViewLeft(id);
	adjustWH("main");
}

/** 根据所选择的账户类型决定左侧的第一步栏中还需要放入哪些内容
 * @param id 账户类型编号
 */
function changeAddViewLeft(id) {
	this.currentTbAccountType=id;
	var content = "";
	var buttonContent = "";
	
	if (id == 1 || id == 8 || id == 9 || id == 7 || id == 6 || id == 4 || id == 5 ) {
		//现金/借出的钱/借入的钱/其它/固定资产
		if (id == 4) {
			//支付
			content += '<div class="dEAItem"><div class="dRDRLabel">支付机构：</div>';
			content += '<div class="dRDRField"><div>';
			content += '<span class="sRDRInput">';
			content += '<span class="hasPlus"><select id="bank" name="bank">';
			var list = getBankInfo(classPay);
			$.each(list, function(i, n) {
				content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';
			});
			content += '<option value="" selected>(空)</option>';
			content += '</select><a href="javascript:showAdd(\'addMyBank\');" class="aRPlus"></a></span>';
			content += '</span>';
			//content += '<span class="sRDRStar">*</span>';
			content += '</div><div class="dValidation">&nbsp;</div></div></div>';
			$("#changeContent").height(100);                
		} else if (id == 5) {
			//投资
			content += '<div class="dEAItem"><div class="dRDRLabel">投资机构：</div>';
			content += '<div class="dRDRField"><div>';
			content += '<span class="sRDRInput">';
			content += '<span class="hasPlus"><select id="bank" name="bank">';
			
			var list = getBankInfo(classFinance);
			$.each(list, function(i, n) {
				content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';
			});
			content += '<option value=""  selected>(空)</option>';
			content += '</select><a href="javascript:showAdd(\'addMyBank\');" class="aRPlus"></a></span>';
			content += '</span>';
			//content += '<span class="sRDRStar">*</span>';
			content += '</div><div class="dValidation">&nbsp;</div></div></div>';
			$("#changeContent").height(100);
		} else {
			$("#changeContent").height(50);
		}
		if (id == 7) {
			//借入的钱
			BalanceLabel = '借入金额';
		} else {
			BalanceLabel = '初始余额';
		}
		list = getCurrencyInfo();
		content += '<div class="dEAItem"><div class="dRDRLabel">' + BalanceLabel + '：</div>';
		content += '<div class="dRDRField"><div>';
		content += '<span class="sRDRInput">';
		content += '<div class="selectCurrency">';
		content += '<select id="currency" name="currency">';
		$.each(list, function(i, n) {
			content += '<option value="' + n.id + '">' + n.Name + '</option>';
		});
		content += '</select>';
		content += '<div class="dRDRInput"><input type="text" id="balance1" class="iMoney" name="balance1" value="0.00" validate="{required:[\'' + BalanceLabel + '\'], number:[\'' + BalanceLabel + '\'], range:[-99999999999.99, 99999999999.99, \'' + BalanceLabel + '\']}" /></div>';
		content += '</div></span>';
		content += '<span class="sRDRStar">*</span>';
		if (id == 7) {
	      	content += '</div><div class="dValidation">（您在借债时借入的金额）</div></div></div>';
		} else {
			content += '</div><div class="dValidation">&nbsp;</div></div></div>';
		}
	} else if (id == 2 || id == 3) {
		//信用卡或储蓄卡
		content += '<div class="dEAItem"><div class="dRDRLabel">金融机构：</div>';
		content += '<div class="dRDRField"><div>';
		content += '<span class="sRDRInput">';
		content += '<div class="hasPlus"><select id="bank" name="bank">';
		var list = getBankInfo(classBank);
		$.each(list, function(i, n) {
			content += '<option value="' + n.id + '">' + n.name.replace(/&/g,"&amp;") + '</option>';
		});
		content += '<option value=""  selected>(空)</option>';
		content += '</select><a href="javascript:showAdd(\'addMyBank\');" class="aRPlus"></a></div>';
		content += '</span>';
		content += '<span class="sRDRStar">&nbsp;</span>';
		content += '</div><div class="dValidation">&nbsp;</div></div></div>';
		$("#changeContent").height(50);
	}
	$("#changeContent").html(content);
	if ((id == 2) || (id == 3)) {
		//如果是带子账户的，继续渲染右边
		changeAddViewRight(id);
	}
	renderNextStep(id);
}

/** 根据所选择的账户类型决定右侧的第二步栏中还需要放入哪些内容
 * @param id 账户类型编号
 */
function changeAddViewRight(id) {
	//显示下一步
	currentTbAccountType=id;
	addAccountStep2(id);
}

/** 根据账户类型决定是否需要显示右侧的第二步栏
 * @param accountTypeId 账户类型编号
 */
function renderNextStep(accountTypeId) {
	var id = accountTypeId;
	
	if(id == 2 || id == 3) {
		//显示层
		$("#addAccount_step2").show();
	} else {
		//隐藏层
		$("#dEAType2").hide();
		$("#dEAType3").hide();
		$("#addAccount_step2").hide();
	}

	//调整列表表格宽度
	$(".dRRBCenter").each(function (index) {
		$(this).width($(this).parent().parent().width() - 18);
	});
}

/** 在编辑账户时点击子账户的响应事件
 * @param aid 子账户编号
 */ 
function subAccountClick(aid) {
	$("#main .dRightTable tr.transSelected").removeClass("transSelected");
	$("#main #tr" + aid).addClass("transSelected");
	edit(aid);
}

/** 根据账户类型决定右侧的第二步栏中需要显示哪些内容
 * @param accountTypeId 账户类型编号
 */
function addAccountStep2(accountTypeId) {
	renderSubAccountView(accountTypeId);
	renderEditArea("add", accountTypeId, "");
}

/** 根据账户类型决定右侧第二步栏中下方的编辑区的内容
 * @param type 添加或编辑
 * @param accountTypeId 主账户类型编号
 * @param sign 子账户编号
 */
function renderEditArea(type, accountTypeId, sign) {
	//清理下拉框
	//移除下方被选中的样式
	$('#main .editArea div.select').replaceWith( function() {
		var selectName = $(this).children("input").attr("name");
		return "<select name='" + selectName + "' class='" + selectName + "' id='" + selectName + "'></select>";
	});
	
	//清除所有验证信息
	$("#main .editArea .dValidation .error").replaceWith("");

	var desc = "";
	var id = accountTypeId;
	var list = getCurrencyInfo();//取得币种类型；

	//处理按钮	
	if (type == "add") {
		//添加时不显示删除键
		$("#main .dRightTable tr").removeClass("transSelected");	
		$("#main .editArea .bDelete").hide();
		$("#main .editArea .bCancel").hide();
		
		$("#main .editArea #dEAType2 .bAdd").unbind().click(function(){
	    	if (myFormValidate("#accountForm2")) {
				addSubAccount(id);
			}	
			//定制卷滚条
			//mCustomScrollbars();
		});

		$("#main .editArea #dEAType3 .bAdd").unbind().click(function(){
	    	if (myFormValidate("#accountForm3")) {
				addSubAccount(id);
			}	
			//定制卷滚条
			//mCustomScrollbars();
		});	
		//修改div.title
		$('#main .dEABack .dEABack2').html("新建子账户");	
		
	} else {
		//取消修改，重新渲染div为添加框
		$("#main .editArea .bCancel").show().unbind().click(function() {
			renderEditArea('add', id, -1);
			customizeSelect();
		});
		//获取是否显示删除
		var cancelIsView = $("#main .dRightTable tr[mhcontent='true']").length;
		if(cancelIsView>1){
			$("#main .editArea .bDelete").show().unbind().click(function() {
				if (confirm(deleteTips[0])) delSubAccount(sign);
			});
		} else {
			$("#main .editArea .bDelete").hide();
		}
		
		$("#main .editArea #dEAType2 .bAdd").unbind().click(function () {
	    	if (myFormValidate("#accountForm2")) {
				editSubAccount(id, sign);
			}
		});
		$("#main .editArea #dEAType3 .bAdd").unbind().click(function () {
	    	if (myFormValidate("#accountForm3")) {
				editSubAccount(id, sign);
			}
		});
		//修改div.title
		$('#main #.dEABack .dEABack2').html("编辑子账户");
	}
	if (id == 2) {
		//信用卡方式
		//调整上方编辑区高度
		$("#main .editArea").height(92);
		$("#dEAType3").hide();
		$("#dEAType2").show();

		desc += "设定账户余额：<br>";
		if (type == "add") {
			//添加子账户
			//币种
			$("#dEAType2 .currency").replaceWith('<select id="currency" name="currency" class="currency"></select>');
			$.each(list, function(i, n) {
				var isDisplay=true;
				for(var i=0;i<subAccount.length;i++){
					if(subAccount[i][0]==n.id){
						isDisplay=false;
						break;
					}
				}
				if(isDisplay) $("#dEAType2 .currency").append("<option value='" + n.id + "'>" + n.Name + "</option>"); 
			});
			//customizeSelect();
			//显示*号
			$("#dEAType2 .currency").parent().next().show();
			
			//将余额置为空
			$("#dEAType2 #balance2").attr("value","0.00");
		} else {
			//修改子账户
			//币种
			$("#dEAType2 .currency").replaceWith("<input type='text' id='currency' class='iDisabled currency' disabled value='人民币'>");
			$("#dEAType2 .currency").parent().next().hide();
		}
	} else {
		//储蓄卡
		var myTypeData = getSubAccountType();
		var duringData = getAccountSubDuringData();
		
		//调整上方编辑区高度
		$("#main .editArea").height(195);
		$("#dEAType2").hide();
		$("#dEAType3").show();
		if (type == "add") {
			//添加子账户
			//资产类型
			//初始化状态
			getMytypeStatus("100",type);
			//判断类型
			//清除历史状态
			$("#dEAType3 #subName").attr("value","");
			$("#dEAType3 #subNameId").attr("value","");
			$("#dEAType3 #endDate").attr("value","");
			if($("#dEAType3 #myType").attr("type")=="hidden"){
				//select 处理
				$("#dEAType3 #myType").parent().replaceWith("<select name='myType' id='myType'></select>");
			}else{
				//input 处理
				$("#dEAType3 #myType").replaceWith("<select name='myType' id='myType'></select>");
			}
			$.each(myTypeData, function(i, n) {
				$("#dEAType3 #myType").append("<option value='" + n.id + "'>" + n.Name + "</option>");
			});
			
			customizeSelect();
			//显示*
			$("#dEAType3 #myType").parent().parent().next().show();
			//期限
			$("#dEAType3 #balance3").attr("value","0.00");
			//币种
			
			if($("#dEAType3 .currency").attr("type")=="hidden"){
				//select 处理
				$("#dEAType3 .currency").parent().replaceWith("<select name='currency' id='currency' class='currency'></select>");
			}else{
				//input 处理
				$("#dEAType3 .currency").replaceWith("<select name='currency' id='currency' class='currency'></select>");
			}
						
			$.each(list, function(i, n) {
				$("#dEAType3 .currency").append("<option value='" + n.id + "'>" + n.Name + "</option>");
			});
			//customizeSelect();
			//显示*
			$("#dEAType3 .currency").parent().parent().next().show();
		} else {
			//修改子账户
			//资产类型
			for(var i=0;i<subAccount.length;i++){
				if(subAccount[i][6]==sign){
					getMytypeStatus(subAccount[i][2],"edit",subAccount[i][3],subAccount[i][4]);
				}
			}
			if($("#dEAType3 #myType").attr("type")=="hidden"){
				//select 处理
				$("#dEAType3 #myType").parent().replaceWith("<input id='myType' class='iDisabled' disabled />");
			}else{
				//input 处理
				$("#dEAType3 #myType").replaceWith("<input id='myType' class='iDisabled' disabled />");
			}	
			
			$("#dEAType3 #myType").parent().next().hide();		
			
			if($("#dEAType3 .currency").attr("type")=="hidden"){
				//select 处理
				$("#dEAType3 .currency").parent().replaceWith("<input id='currency' class='iDisabled currency' disabled  />");
			}else{
				//input 处理
				$("#dEAType3 .currency").replaceWith("<input id='currency' class='iDisabled currency' disabled />");
			}	
			
			//币种的星号隐藏
			$("#dEAType3 .currency").parent().next().hide();
				
		}
	}
	//生成datepicker
	createSingleCalendar("dEAType3 #endDate");

	//调整上方编辑区宽度
    $("#main .dEABack").width(676);
	$("#main .editArea").width($("#main .dEABack").width() - 2);
	$("#main .dEABack2").width($("#main .dEABack").width() - 22);
	$("#main .dEABack8").width($("#main .dEABack").width() - 14);

	//创建自定义select
	customizeSelect();
}

/** 根据子账户种类生成上部编辑区
 * @param id 选定的myType
 * @param editType 编辑类型
 * @param during 存期
 * @param endDate 到期日值
 */
function getMytypeStatus(myType, editType, during, endDate){
	myType = myType + "";
	var myTypeData = getSubAccountType();
	var duringData = getAccountSubDuringData();

	//清除所有验证信息
	$("#addAccount_step2 .dValidation").empty();

	switch (myType) {
		case "100":
			//活期
			//隐藏到期日
			$("#duringTxt").parent().hide();
			$("#endDateTxt").parent().hide();
			break;

		case "101":
			//定期
			//显示存期			
			$("#duringTxt").parent().show();
			$("#endDateTxt").parent().show();
			$("#duringTxt").html("存期：");
			
			if ($("#dEAType3 #during").attr("type") == "hidden") {
				//select 处理
				$("#dEAType3 #during").parent().replaceWith("<select name='during' id='during'></select>");
			} else {
				//input 处理
				//移除天
				$("#dEAType3 #sDays").remove();
				$("#dEAType3 #during").replaceWith("<select name='during' id='during'></select>");
			}
			$("#dEAType3 #during").parents(".sRDRInput").children("div").first().removeClass("dRDRInput");

			//存期
			$.each(duringData, function(i, n) {
				if(during === undefined ){
					//添加
					if (n.value == 0) {
						$("#dEAType3 #during").append("<option value='" + n.value + "' selected>" + n.Name + "</option>");	
					} else {
						$("#dEAType3 #during").append("<option value='" + n.value + "'>" + n.Name + "</option>");
					}
				} else {
					var sele = "";
					if (during == n.value) {
						sele = " selected ";
					}
					$("#dEAType3 #during").append("<option value='" + n.value + "' "+sele+">" + n.Name + "</option>");
				}
			});
			
			//渲染
			customizeSelect();
			
			if( !(endDate === undefined) ){
				$("#dEAType3 #endDate").attr("value",endDate);
			}
			break;
		
		case "102":
			//理财产品			
			$("#duringTxt").parent().show();
			$("#endDateTxt").parent().show();
			$("#duringTxt").html("理财期限：");

			//解锁
			if ($("#dEAType3 #during").attr("type") == "hidden") {
				//select 处理
				$("#dEAType3 #during").parent().replaceWith("<input id='during' name='during' class='iMoney' validate='{number:[\"理财期限\"], notNeg:true, range:[0, 99999, \"理财期限\"]}'>");
				$("#dEAType3 #sDays").remove();
				$("#dEAType3 #during").parents(".sRDRInput").after("<span id='sDays'>天</span>");
				$("#dEAType3 #during").parents(".sRDRInput").children("div").first().addClass("dRDRInput");
			} else {
				//input 处理
				$("#dEAType3 #during").next().remove();
				$("#dEAType3 #during").replaceWith('<input id="during" name="during" class="iMoney" validate="{number:[\'理财期限\'], notNeg:true, range:[0, 99999, \'理财期限\']}">');
				$("#dEAType3 #sDays").remove();
				$("#dEAType3 #during").parents(".sRDRInput").after("<span id='sDays'>天</span>");
				$("#dEAType3 #during").parents(".sRDRInput").children("div").first().addClass("dRDRInput");
			}
			
			//显示到期日
			if(!(during === undefined)) {
				$("#dEAType3 #during").attr("value",during);
			}
			if(!(endDate === undefined)) {
				$("#dEAType3 #endDate").attr("value",endDate);
			}
			break;
	}
}

/** 根据数据生成子账户列表区
 * @param id 账户类型
 */
function renderSubAccountView(id){
	var desc = '';
	//修改div.title
	if (id == 2) {
		//信用卡
		$("#main .dRTTable tr").html("<td>币种</td><td>初始欠款</td>");
		var list = getCurrencyInfo();//取得币种类型；
		if (subAccount != null || subAccount != "") {
			trClass = "tDetail1";
			for(var i=0; i<subAccount.length; i++) {
				desc += "<tr mhcontent='true' class='" + trClass + "' id='tr"+subAccount[i][6]+"' onclick='subAccountClick(" + subAccount[i][6] + ")'>";
				//数组中已经实现取负值
				desc += "<td>" + subAccount[i][5] + "</td>";
				desc += "<td>" + subAccount[i][1] + "</td>";
				desc += "</tr>";
				if (trClass == "tDetail1") trClass = "tDetail2";
				else trClass = "tDetail1";
			}
		}
		$("#main .dRightTable").html(desc);
		$("#main .dRightTable").append(generateEmptyLines("#main .dRightTable", 2, "renderEditArea(\"add\", " + id + ", -1);customizeSelect();"));

		$("#main .dRTTable td:nth-child(1)").width(300);
		$("#main .dRTTable td:nth-child(2)").attr("colspan", "5");
		$("#main .dRightTable td:nth-child(1)").width(300);
		$("#main .dRightTable td:nth-child(2)").attr("colspan", "5");
	} else if (id == 3) {
		//储蓄卡/存折
		$("#main .dRTTable tr").html("<td>名称</td><td>资产类型</td><td>期限</td><td>到期日</td><td>币种</td><td>金额</td>");
		var list = getCurrencyInfo();//取得币种类型；
		if (subAccount != null || subAccount != "") {
			trClass = "tDetail1";
			for (var i=0; i<subAccount.length; i++) {
				desc += "<tr mhcontent='true' class='" + trClass + "' id='tr"+subAccount[i][6]+"' onclick='subAccountClick(" + subAccount[i][6] + ")'>";
				desc += "<td><nobr>" + replaceHtmlStr(subAccount[i][5]) + "</nobr></td>";
				desc += "<td><nobr>" + getSubAccountTypeDesc(subAccount[i][2]) + "</nobr></td>";
				if(subAccount[i][2]==100){
					desc += "<td></td>";
					desc += "<td></td>";
				}else{
					if(subAccount[i][2] == 101){
						desc += "<td><nobr>" + getDuringDesc(subAccount[i][3]) + "</nobr></td>";	
					} else {
						if( subAccount[i][3]==""||subAccount[i][3]==0 ){
							desc += "<td><nobr>&nbsp;</nobr></td>";
						} else {
							desc += "<td><nobr>" + subAccount[i][3] + "天</nobr></td>";
						}
					}
					desc += "<td><nobr>" + subAccount[i][4] + "</nobr></td>";
				}
				desc += "<td><nobr>" + getCurrencyDesc(subAccount[i][0]) + "</nobr></td>";
				desc += "<td><nobr>" + subAccount[i][1] + "</nobr></td>";
				desc += "</tr>";
				if (trClass == "tDetail1") trClass = "tDetail2";
				else trClass = "tDetail1";
			}
		}
		$("#main .dRightTable").html(desc);
		$("#main .dRightTable").append(generateEmptyLines("#main .dRightTable", 6, "renderEditArea(\"add\", " + id + ", -1);customizeSelect();"));
		$("#main .dRTTable td:nth-child(1)").width(100);
		$("#main .dRTTable td:nth-child(2)").width(100);
		$("#main .dRTTable td:nth-child(3)").width(100);
		$("#main .dRTTable td:nth-child(4)").width(100);
		$("#main .dRTTable td:nth-child(5)").width(100);
		$("#main .dRightTable td:nth-child(1)").width(100);
		$("#main .dRightTable td:nth-child(2)").width(100);
		$("#main .dRightTable td:nth-child(3)").width(100);
		$("#main .dRightTable td:nth-child(4)").width(100);
		$("#main .dRightTable td:nth-child(5)").width(100);
	}
}

/** 处理子账户的显示区
 * @param id 账户类型
 */
function viewAddSubAccount(id) {
	//渲染子账户列表
	renderSubAccountView(id);
	renderEditArea("add", id, "");

	//创建自定义select
	customizeSelect();
}

/** 添加子账户响应事件
 * @param id 账户类型
 */
function addSubAccount(id) {
	var sign=createTimeRandom();
	var temp = new Array();
	var tempCur="";
	if (id == 2) {
		//信用卡
		tempCur = $('#dEAType2 .currency').val();
		temp.push($('#dEAType2 .currency').val());
		if($("#dEAType2 #balance2").attr("value") == ""){
			temp.push("0.00");
		}else{
			temp.push($("#dEAType2 #balance2").attr("value"));	
		}
		temp.push("");
		temp.push("");
		temp.push("");
		//信用卡类型时，子账户名称用币种名称代替
		temp.push(getCurrencyDesc(tempCur));
		temp.push(sign);
		$("#dEAType2 .currency>option[value='"+tempCur+"']").remove();
	} else {
		tempCur=$('#dEAType3 .currency').val();
		temp.push($('#dEAType3 .currency').val());
		temp.push($("#dEAType3 #balance3").attr("value"));
		temp.push($('#myType').val());
		if($('#myType').val()==100) {
			//活期存款不记录
			temp.push("");
			temp.push("");
		} else {
			if($('#myType').val()==101){
				//定期是select
				temp.push($('#during').val());
			}else{
				//理财是input
				temp.push($('#during').attr("value"));	
			}
			temp.push($("#endDate").attr("value"));
		}
		temp.push($("#subName").attr("value"));
		temp.push(sign);
	}
	//更新数据
	subAccount.push(temp);

	//生成新的下层的view，并刷新上层状态
	viewAddSubAccount(id);
}

//求和
function getFloatResult(param1,param2,doWith) {
	var returnResult;
	var a=parseFloat(param1)*parseFloat(100);
	var b=parseFloat(param2)*parseFloat(100);
	var c;
	c=parseFloat(a)+parseFloat(b);
	if(c!=null) {
		var d=c.toString().length;
		returnResult=c.toString().substring(0,d-2)+"."+c.toString().substring(d-2,d);
		return returnResult;
	}
}

/** 添加分类
 */
function addCategory() {
	//渲染一级分类信息
	renderCategogy1();
	//显示遮盖层
	$("#scover").show();
	$("#addMyCategory").parent().show();
	$("#addMyCategory").parent().center();
}

/** 生成已有的支付对象
 */
function getCurrentPayee() {
	var list = getPayeeInfo();
	var desc = "";
	var trClass = "tDetail1";
	$.each(list, function(i, n) {
		desc += '<tr mhcontent="true" class=' + trClass + ' id="payee' + n.id + '" onclick="clickPayee(\'' + n.id + '\')">';
		desc += '<td><nobr>' + n.Name.replace(/&/g, "&amp;") + '</nobr></td>';
		if (n.tel == undefined)
			desc += '<td><nobr>&nbsp;</nobr></td>';
		else
			desc += '<td><nobr>' + n.tel.replace(/&/g, "&amp;") + '</nobr></td>';
		if (n.email == undefined)
			desc += '<td><nobr>&nbsp;</nobr></td></tr>';
		else
			desc += '<td><nobr>' + n.email.replace(/&/g, "&amp;") + '</nobr></td></tr>';
		if (trClass == "tDetail1") trClass = "tDetail2";
		else trClass = "tDetail1";
	});
	$("#payeeTable tbody").html(desc);

	$("#payeeTable tbody").append(generateEmptyLines("#payeeTable", 3, ""));
	$("#payeeTable td:nth-child(1)").width(200);
	$("#payeeTable td:nth-child(2)").width(200);
}

function clickPayee(aid) {
	$("#addMyPayee #payeeTable tr").removeClass("transSelected");
	$("#payee" + aid).addClass("transSelected");
	getEditPayee(aid);
}

/** 生成编辑支付对象状态
 * @param id 支付对象编号
 */ 
function getEditPayee(id){
	//更新窗口的title
	//业务处理
	changePayeeTitle(0);
	currentPayeeEditType="edit";
	var list=getPayeeInfo(id);

	$("#addMyPayee .dValidation").html("");

	$.each(list, function(i, n) {
		$('#newPayee').attr("value",n.Name);
		$('#payeeId').attr("value",id);
		$('#payeeTel').attr("value",n.tel);
		$('#payeeMail').attr("value",n.email);
		$('#bDelete').show();
	});
	
	//处理编辑时的按钮事件
	$('#addMyPayee .bDelete').show().unbind("click").click( function(){
		//删除收付款方
		if(confirm(deleteTips[2])){
			deleteMyPayee();
			//恢复新的初始状态
			returnAddPayeeStart();
			//生成下面的收付款方列表
			getCurrentPayee();
		}
	});
	$('#addMyPayee .bAdd').show().unbind("click").click( function(){
    	if (myFormValidate("#payeeForm")) {
			handlePayee();
			returnAddPayeeStart();
			getCurrentPayee();
		}
	});
	$('#addMyPayee .bCancel').show().unbind("click").click( function(){
		//恢复新的初始状态
		returnAddPayeeStart();
		getCurrentPayee();
	});
} 

/** 删除支付对象
 */
function deleteMyPayee() {
	deletePayee($('#payeeId').attr("value"));
	//置为kong
	editNewPayeeId=0;
}

/** 处理添加新的金融机构
 */
function handleAddMyBank() {
	var newBankName = $("#newBank").attr("value");
	var currentBankClass = "";
	if(currentTbAccountType == 4) {
		//支付
		var currentBankClass = classPay;
	} else if(currentTbAccountType == 5) {
		//投资
		var currentBankClass = classFinance;
	} else {
		//默认种类为1
		var currentBankClass = classBank;
	}
	//更新状态
	editNewBankId = insertBank(newBankName, currentBankClass);
	
}

/** 编辑金融结构
 * @param id 金融机构编号
 */
function handleEditMyBank(id) {
	var newBankName = $("#newBank").val();
	var bankId = $("#bankId").val();
	updateBank(id, newBankName);
	//更新状态
	editNewBankId = id;
}

/** 删除金融机构
 * @param id 金融机构编号
 */
function handleDeleteMyBank(id) {
	deteteBank(id);
	editNewBankId=0;
}

/** 显示用户添加的金融机构列表
 */
function createNewBankListView() {
	var content = "";
	var classes = -1;
	if (currentTbAccountType == 4) {
		//支付
		classes = classPay;
	} else if (currentTbAccountType == 5) {
		//投资
		classes = classFinance;
	} else {
		classes = classBank;
	}
	var list = getBankInfo(classes);
	trClass = "tDetail1";
	$.each(list, function(i, n) {
		if (n.id >= 10000) {
			content += '<tr mhcontent="true" class="'+trClass+'" align="left" id="bank'+n.id+'" onclick="clickBank('+n.id+')" ><td align="left" style="text-align:left">'+n.name.replace(/&/g,"&amp;")+'</td></tr>';
			if (trClass == "tDetail1") trClass = "tDetail2";
			else trClass = "tDetail1";
		}
	});
	$("#addMyBank #dRRDetail #bankTable tbody").html(content);
	$("#addMyBank #dRRDetail #bankTable tbody").append(generateEmptyLines("#addMyBank #dRRDetail #bankTable", 1, ""));
}

function clickBank(aid) {
	$("#addMyBankboxBg tr").removeClass("transSelected");
	$("#bank" + aid).addClass("transSelected");
	editBank(aid);
}

function editBank(id){
	//开始赋值
	currentBankEditType = "edit";
	changeBankTitle(0);
	var list = getSingleBankInfo(id);
	$.each(list, function(i, n) {
		$('#addMyBank #newBank').attr("value",n.name);
		return false;
	});
	$('#addMyBank #bankId').attr("value",id);

	//开始绑定事件
	$('#addMyBank .bDelete').show().unbind().click(function() {
		//删除金融机构
		if(confirm(deleteTips[2])){
			handleDeleteMyBank(id);
			//恢复新的初始状态
			returnAddBankStart();
			//生成下面的银行列表
			createNewBankListView();
		}
	});
	$('#addMyBank .bCancel').show().unbind().click(function() {
		//恢复新的初始状态
		returnAddBankStart();
	});
	
	$('#addMyBank .bAdd').show().unbind().click(function() {
		//恢复新的初始状态
		if (myFormValidate("#bankForm")) {
	  		handleEditMyBank(id);
	  		returnAddBankStart();
	  		createNewBankListView();
	  	}
	});
}

/** 根据不同的状态修改添加金融机构页面的标题信息
 * @param editType 没存在，添加，0 编辑
 */
function changeBankTitle(editType) {
	var statusDesc = "";
	if (currentTbAccountType == 4) {
		var statusDesc = "支付";	
	} else if (currentTbAccountType == 5) {
		var statusDesc = "投资";
	} else{
		var statusDesc = "金融";
	}
	$('#addMyBank h1').html("管理" + statusDesc + "机构");
	$('#addMyBank .dSATitle').html("已添加的" + statusDesc + "机构");
	if (editType === undefined ) {
		//添加状态
		$('#addMyBank .dEABack2').html("新建" + statusDesc + "机构");
	} else {
		//编辑状态
		$('#addMyBank .dEABack2').html("编辑" + statusDesc + "机构");
	}
	//$("#newBank").attr("validate", "{required:['名称'], unique:['机构名称']}");
}

/*
 * 让编辑区回到初始状态
 */
function returnAddBankStart(){
	//生成title
	currentBankEditType="add";
	changeBankTitle();
	//移除所有的编辑样式
	$("#addMyBankboxBg tr").removeClass("transSelected");
	$('#addMyBank #newBank').attr("value","");
	$('#addMyBank #BankId').attr("value","");
	$('#addMyBank .bDelete').hide()
	$('#addMyBank .bDelete').unbind();
	$('#addMyBank .bDelete').click( function(){
		//删除金融机构
		handleDeleteMyBank(id);
		//恢复新的初始状态
		returnAddBankStart()
		//生成下面的银行列表
		createNewBankListView();
	});
	$('#addMyBank .bAdd').show();
	$('#addMyBank .bAdd').unbind();
	$('#addMyBank .bAdd').click( function(){
	    if (myFormValidate("#bankForm")) {
	  		handleAddMyBank();
	  		returnAddBankStart();
	  		createNewBankListView();
	  	}
	});
	$('#addMyBank .bDelete').hide().unbind();
	$('#addMyBank .bCancel').hide().unbind();	
}

/** 处理子账户类型变更
 * @param subTypeId
 * @param editId 
 */
/*
function changeAddSubView(subTypeId, editId) {	
	//////alert("test");
	var desc = "";
	var list = getCurrencyInfo();//取得币种类型；
	if (subTypeId == 100) {
		//活期存折
		$("#dEAType3 #during").attr("disabled", true);
		$("#dEAType3 #endDate").attr("disabled", true);
		desc += '<select id="currency" class="currency" name="currency">';
		$.each(list, function(i, n) {
			var isView=true;
			for(var i=0; i<subAccount.length;i++) {
				if (subAccount[i][2] == 100 && subAccount[i][0] == n.id) {
					if(subAccount[i][6]==editId)
						isView = false;
				}
			}
			if(isView)
				desc += "<option value='" + n.id + "'>" + n.Name + "</option>";
		});
		
		desc += '</select>';
		$("#dEAType3 #currencyArea").empty().append(desc);
		
	} else {
		
		var duringData=getAccountSubDuringData();
		desc += '<select id="during" name="during">';
		$.each(duringData, function(i, n) {
			desc += "<option value='" + n.value + "'>" + n.Name + "</option>";
		});
		desc += '</select>';
		$("#dEAType3 #duringArea").html(desc);
		//到期日
		
		desc="";
		desc += '<input type="text" name="endDate" id="endDate" />';
		$("#dEAType3 #endDateArea").html(desc);

		desc="";
		desc += '<select id="currency" class="currency" name="currency">';
		$.each(list, function(i, n) {
			desc += "<option value='" + n.id + "'>" + n.Name + "</option>";
		});
		desc += '</select>';
		$("#dEAType3 #currencyArea").html(desc);
		//生成datepicker
		//////alert("111111");
		createSingleCalendar("dEAType3 #endDate");
		//////alert("222222");
		//createSingleCalendar("endDate");
	}
}
*/
//取得币种内容
function getCurrencyDesc(id) {
	var result="";
	var list=getCurrencyInfo();//取得币种类型；

	$.each(list, function(i, n) {
		if(id==n.id) {
			result=n.Name;
		}
	});
	return result;
}

//取得子账户类型内容
function getSubAccountTypeDesc(id) {
	var result="";
	var list=getSubAccountType();
	$.each(list, function(i, n) {
		if(id==n.id) {
			result=n.Name;
		}
	});
	return result;
}

//取得截止期限内容
function getDuringDesc(id) {
	var result="";
	var list=getAccountSubDuringData();
	$.each(list, function(i, n) {
		if(id==n.value) {
			result=n.Name;
		}
	});
	return result;
}

/** 生成日历事件
 * @param calDivId 日历控件编号
 */
function createSingleCalendar(calDivId,notNull) {
	//////alert("1");
	try{
		$( function() {
			
			$.datepicker.setDefaults($.datepicker.regional[ "zh-CN" ]);
			$( "#"+calDivId ).datepicker();
			if(notNull != undefined ) $( "#"+calDivId ).datepicker('setDate', new Date());
			
			var showOn = $( "#"+calDivId ).datepicker("option","showOn");
			
			//////alert("end");
		});
	}catch(e){
		//////alert(e);
	}	
}

/** 删除用户子账号
 * @param id 子账户编号
 */ 
function deleteSub(id) {
	deleteId = id;
	submitDelete();
}

/** 确认删除
 */
function submitDelete() {
	//数组更新
	var tempLength=this.subAccount.length;
	for(var i=0;i<tempLength;i++) {
		if(this.deleteId==this.subAccount[i][this.subAccount[i].length-1]) {
			this.subAccount.splice(i,1);
			break;
		}
	}
	//删除显示
	$("#"+this.deleteId).remove();

	//覆盖层去除
	$("#scover1").hide();

	//覆盖层确认层去除
	$("#deleteSub").hide();

	//重置编辑区
	renderEditArea("add", this.currentTbAccountType, "");
}

/** 编辑子账户功能,赋值给编辑区
 * @param id 子账户编号
 */ 
function edit(id) {
	renderEditArea("edit", currentTbAccountType, id);
	
	//修改div.title
	$('#main .dEABack .dEABack2').html("编辑子账户");

	//定义在数组中的位置
	var subIndex=-1;
	var tempLength=subAccount.length;
	for(var i=0;i<tempLength;i++) {
		if(id==subAccount[i][6]) {
			subIndex=i;
		}
	}
	if( currentTbAccountType == 2 )	{
		//信用卡
		$("#dEAType2 #balance2").attr("value",subAccount[subIndex][1]);
		$("#dEAType2 .currency").val(getCurrencyDesc(subAccount[subIndex][0]));
	} else if( currentTbAccountType == 3 ) {
		//储蓄卡
		$("#dEAType3 #balance3").attr("value",subAccount[subIndex][1]);
		$("#dEAType3 .currency").attr("value",getCurrencyDesc(subAccount[subIndex][0]));
		
		$("#dEAType3 #myType").attr("value",getSubAccountTypeDesc(subAccount[subIndex][2]));
		$("#dEAType3 #subName").attr("value", subAccount[subIndex][5]);
		$("#dEAType3 #subNameId").attr("value", id);
	}
}

/** 修改子账户响应事件
 * @param typeId 子账户类型
 * @param sign 子账户id
 */ 
function editSubAccount(typeId, sign) {
	var id = typeId;
	var temp = new Array();
	var indexId = "";
	for (var i=0; i<subAccount.length; i++) {
		if (sign == subAccount[i][6]) {
			indexId = i;
			break;
		}
	}
	if (id == 2) {
		//信用卡
		subAccount[i].splice(1,1,$("#dEAType2 #balance2").attr("value"));
	} else {
		//储蓄卡
		subAccount[i].splice(1,1,$("#dEAType3 #balance3").attr("value"));
		if(subAccount[i][2]!=100) {
			//活期存款不记录
			if(subAccount[i][2]==101){
				//定期是select
				subAccount[i].splice(3,1,$('#during').val());
			}else{
				//理财是input
				subAccount[i].splice(3,1,$('#during').attr("value"));	
			}
			subAccount[i].splice(4,1,$("#endDate").attr("value"));
		}else{
			subAccount[i].splice(3,1,"");
			subAccount[i].splice(4,1,"");
		}
		subAccount[i].splice(5,1,$("#subName").attr("value"));
	}
	viewAddSubAccount(typeId)
}

//根据当前时间生成随机数
function createTimeRandom() {
	var date=new Date();
	var yy=date.getYear();
	var MM=date.getMonth() + 1;
	var dd=date.getDay();
	var hh=date.getHours();
	var mm=date.getMinutes();
	var ss=date.getSeconds();
	var sss=date.getMilliseconds();
	var result=Date.UTC(yy,MM,dd,hh,mm,ss,sss);
	return result;
}

/** 提交按钮响应事件
 */
function submitAddAccount() {
	var name, accountTypeId, bankId, content, tbCurrency_id, openbalance, balance, days, enddate, tbAccountType_id, subName;

	if($("#name").length > 0) {
		name = $("#name").attr("value");
	} else {
		name = "";
	}

	content = $("#content").attr("value");
	var id = this.currentTbAccountType;
	accountTypeId = this.currentTbAccountType;

	if($("#bank").length > 0) {
		bankId = $("#bank").attr("value");
	} else {
		bankId = "";
	}

	if ($("#currency").length > 0) {
		tbCurrency_id = $("#currency").val();
	} else {
		tbCurrency_id = "";
	}

	if($("#balance1").length > 0) {
		balance = $("#balance1").val();
	} else {
		balance = "";
	}
	openbalance = balance;
	if($("#during").length > 0) {
		days = $("#during").attr("value");
	} else {
		days = "";
	}

	if ($("#endDate").length > 0) {
		enddate = $("#endDate").attr("value");
	} else {
		enddate = "";
	}

	if($("#subName").length > 0 ) {
		subName == $("#subName").attr("value");
	} else {
		subName = "";
	}
	tbAccountType_id = "";
	
	//赋值结束，执行添加方法
	if ((currentTbAccountType != 2) && (currentTbAccountType != 3)) {
		//单一子账户类型,赋值
		subName = getCurrencyDesc(tbCurrency_id);
	}
	addNewAccount(name, this.currentTbAccountType, bankId, content, tbCurrency_id, openbalance, balance, days, enddate, tbAccountType_id, subName);
}

/** 实现添加账户功能
 * @param name 账户名称
 * @param accountTypeId 账户类型
 * @param bankId 银行分类
 * @param content 备注
 * @param tbCurrency_id 币种信息
 * @param openbalance 初始余额
 * @param balance 余额
 * @param days 期限
 * @param enddate 到期日
 * @param tbAccountType_id 资产类型
 * @param subName 子账户名
 */
function addNewAccount(name, accountTypeId, bankId, content, tbCurrency_id, openbalance, balance, days, enddate, tbAccountType_id, subName) {
	//取得accountId;
	accountTypeId = this.currentTbAccountType;
	var accountId = addAccount(name, accountTypeId, bankId, content);
	if(accountId > 0) {
		//账户插入成功，处理子账户
		var id = accountTypeId;
		if(id == 2 || id == 3 ) {
			//一个账户可能对应多个子账户的
			var subLength = subAccount.length;
			var result = -1;
			for(var i=0; i<subLength; i++) {
				if(id==2){
					result = addAccountSub(accountId, subAccount[i][0], 0-subAccount[i][1], 0-subAccount[i][1], subAccount[i][3], subAccount[i][4], subAccount[i][2], subAccount[i][5]);	
				}else{
					result = addAccountSub(accountId, subAccount[i][0], subAccount[i][1], subAccount[i][1], subAccount[i][3], subAccount[i][4], subAccount[i][2], subAccount[i][5]);
				}
				
				if (result <= 0) {
					break;
				}
			}
		} else {
			//一个账户对应一个子账户的
			if(id == 7) {
				//如果是信用卡和借入的钱，取负值
				balance = 0 - balance;
				openbalance = balance;
			}
			var result = addAccountSub(accountId, tbCurrency_id, openbalance, balance, days, enddate, tbAccountType_id, subName);
		}
	} else {
		//主账户插入失败
	}
	/**以上账户添加完成**/
	//关闭添加账户层，关闭显示层
	closeAdd("main");
	//刷新左侧页面
	createAccountTree();
	//清空subAccount数据
	subAccount=[];
}

/** 实现编辑账户功能
 */
function submitEditAccount() {
	//赋值
	//alert("1");
	var name, accountTypeId, bankId, content, tbCurrency_id, openbalance, balance, days, enddate, tbAccountType_id, subName, accountId;
	if($("#name").length>0)
		name = $("#name").attr("value");
	else
		name = "";

	accountId=$("#accountId").attr("value");

	content = $("#content").attr("value");
	var id = this.currentTbAccountType;
	accountTypeId = this.currentTbAccountType;
	if($("#bank").length > 0) {
		bankId = $("#bank").val();
	} else {
		bankId = "";
	}

	if($("#balance1").length > 0) {
		balance = $("#balance1").attr("value");
	} else {
		balance = "";
	}
	openbalance = balance;
	//根据业务逻辑取负值
	if(id == 7) {
		//如果是借入 的钱，取负值
		balance = balance;
		openbalance = balance;
	}

	if($("#during").length > 0) {
		days = $("#during").attr("value");
	} else {
		days = "";
	}

	if($("#endDate").length > 0) {
		enddate = $("#endDate").attr("value");
	} else {
		enddate = "";
	}

    if($("#subName").length > 0) {
		subName = $("#subName").attr("value");
	} else {
		subName = "";
	} 

	//这个不是账号类型的id
	tbAccountType_id = "";

	//赋值结束，执行添加方法
	if (currentTbAccountType != 2 && currentTbAccountType != 3) {
		//单一子账户类型,赋值
		subName = getCurrencyDesc(tbCurrency_id);
	}

	//赋值结束，开始业务逻辑处理
	accountTypeId = this.currentTbAccountType;
	editAccount(accountId, accountTypeId, name, bankId, content);

	//账户插入成功，处理子账户
	var id = accountTypeId;
	if(id == 2 || id == 3 ) {
		//一个账户可能对应多个子账户的
		var tempBalance = 0;
		var tempOpenBalance = 0;
		var subLength = subAccount.length;
		var result = -1;
		for(var i=0;i<subLength;i++) {
			//如果编号长度==10,判断是新建还是编辑
			if ((subAccount[i][6] + "").length > 9) {
				//新添加子账户
				if(id == 2) {
					//如果是信用卡，取负值
					tempBalance = 0 - subAccount[i][1];
					tempOpenBalance = tempBalance;
				} else {
					tempBalance = subAccount[i][1];
					tempOpenBalance = tempBalance;
				}
				result = addAccountSub(accountId, subAccount[i][0], tempOpenBalance, tempBalance, subAccount[i][3], subAccount[i][4], subAccount[i][2], subAccount[i][5]);
				if (result <= 0) {
					break;
				}
			} else {
				//编辑子账户
				if(id == 2) {
					//如果是信用卡，取负值
					tempBalance = 0 - subAccount[i][1];
					tempOpenBalance = tempBalance;
				} else {
					tempBalance = subAccount[i][1];
					tempOpenBalance = tempBalance;
				}
				//执行编辑时间
				editAccountSub(subAccount[i][6], tempOpenBalance, tempBalance, subAccount[i][3], subAccount[i][4], subAccount[i][2], subAccount[i][5], id);
			}
		}
	} else {
		var result = "";
		$.each(getAccountSubInfo(accountId), function(i, n) {
			if (id == 7)
				result = editAccountSub(n.bid, 0 - openbalance, 0 - balance, days, enddate, tbAccountType_id, subName, id);
			else
				result = editAccountSub(n.bid, openbalance, balance, days, enddate, tbAccountType_id, subName, id);
		});
	}

	/**以上账户添加完成**/
	//关闭添加账户层，关闭显示层
	closeAdd("main");
	//刷新左侧页面
	createAccountTree();
	//alert("2");
	//清空subAccount数据
	subAccount=[];
}

/** 生成左侧账户树
 */
function createAccountTree() {
	//alert("1");
	try {		
		//alert(window.external.QuerySQL("SELECT a.id AS aid, a.name AS aname, b.name AS bname, b.id AS bid, tbBank_id, a.tbAccountType_id AS tid FROM tbAccount a, tbSubAccount b WHERE a.id=b.tbAccount_id ORDER BY a.id DESC"));
		//alert(window.external.QuerySQL("SELECT a.id AS aid, a.name AS aname, b.name AS bname, b.id AS bid, tbBank_id, bankid, a.tbAccountType_id AS tid FROM tbAccount a, tbSubAccount b left join tbbank c on c.id=tbBank_id  WHERE a.id=b.tbAccount_id ORDER BY a.id DESC"));
		result = JSON.parse(window.external.QuerySQL("SELECT a.id AS aid, a.name AS aname, b.name AS bname, b.id AS bid, tbBank_id, bankid, a.tbAccountType_id AS tid FROM tbAccount a, tbSubAccount b left join tbbank c on c.id=tbBank_id  WHERE a.id=b.tbAccount_id ORDER BY a.id DESC"));
	} catch (e) {
		result = [{
			"aname": "<abc",
			"bname": "'",
			"aid": 1,
			"bid": 1,
			"tid": 2,
			"tbBank_id": 6
		},{
			"aname": "''''''",
			"bname": "'",
			"aid": 18,
			"bid": 1,
			"tid": 2,
			"tbBank_id": 6
		},{
			"aname": "<sdfg",
			"bname": "'",
			"aid": 8,
			"bid": 1,
			"tid": 2,
			"tbBank_id": 6
		},{
			"aname": "招商银行信用卡",
			"bname": "人民币",
			"aid": 9,
			"bid": 2,
			"tid": 2,
			"tbBank_id": 6
		},{
			"aname": "工商银行信用卡工商银行信用卡工商银行信用卡",
			"bname": "人民币",
			"aid": 2,
			"bid": 5,
			"tid": 1,
			"tbBank_id": 1
		}];
	}

	//取得账户与子账户的对应情况
	try {
		result1 = JSON.parse(window.external.QuerySQL("SELECT COUNT(DISTINCT(b.id)) AS myNumber, a.id AS aid FROM tbAccount a, tbSubAccount b WHERE a.id=b.tbAccount_id  and a.tbaccountType_id in (2,3) GROUP BY a.id"));
	} catch (e) {
		result1 = [{
			"myNumber": 2,
			"aid": 1
		},{
			"myNumber": 1,
			"aid": 2
		}];
	}

	//清空数据层
	var aId = "";
	var content = "";
	var accountSonNumber = 0;
	var k = 0;

	$.each(result, function(i, n) {
		//判断是否为统一账户
		//判断是否为1对1账户
		if (aId == n.aid)
			k++;
		else {
			aId = n.aid;
			k = 0;
		} 
		if (n.tid==2 || n.tid==3) {
			$.each(result1, function(j, m) {
				if (m.aid == n.aid) {
					//取得当前的子分类的总数
					accountSonNumber = m.myNumber;
					return false;
				}
			});
			
			//有子分类的
			if (k == 0) {
				//新的，第一个
				content += "<div class='dMainAccount dMainAccountU' id='" + n.aid + "' onmouseout='$(\"#accountSetup_"+n.aid+"\").hide();' onmouseover='$(\"#accountSetup_" + n.aid + "\").show();' onclick='closeTrans();renderTransView(\"" + n.aid + "\",\"\");'>";
				content += "<span class='sLeftTree' id='action_" + n.aid + "' style='background:url(\"../images/tree1.gif\") no-repeat' onclick='myToggle(" + n.aid + ");'></span>";
				content += "<span id='sMAName' fullname='" + n.aname.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&#39;") + "' class='sMAName'>" + n.aname.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&#39;") + "</span>";

				//如果是招商银行,中信银行信用卡，则显示导入账单
				
				if((n.BankID == "a006" || n.BankID == "a007" || n.BankID == "a004") && n.tid == 2) {
					//alert(" <span id='sImportBill' onclick='getCreditCardList("+n.aid+",\""+n.BankID+"\");'></span>");
					content += " <span id='sImportBill' onclick='getCreditCardList("+n.aid+",\""+n.BankID+"\");'></span>";
					//alert(currentBankId);
				}
				content+="<span id='accountSetup_" + n.aid + "' style='display:none;' class='iAccountSetup' onclick='showAdd(\"main\", " + n.aid + ")'></span>";
				content+="</div>";

				//生成子账户层
				content+="<div id='sub_"+n.aid+"' class='dSubAccount' >";
				content+="<div id='sa"+n.bid+"' class='dSubAccountItemFirst' onclick='closeTrans();renderTransView(\"\","+n.bid+")'><div class='dSAName'>" + n.bname.replace(/&/, "&amp;") + "</div></div>";
				//只有一个的
				if (accountSonNumber == 1)
					content+="</div>"; 
			} else {
				//老的
				content+="<div id='sa"+n.bid+"' class='dSubAccountItem' onclick='closeTrans();renderTransView(\"\","+n.bid+")'><div class='dSAName'>" + n.bname.replace(/&/, "&amp;")+ "</div></div>";
				//最后一个，结束div
				if (k == (accountSonNumber - 1)) {
					content+="</div>";
				}
			}
		} else {
			//无子账户或者只有一个子账户
			var legalName = n.aname.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&#39;");
			//alert(n.aname);
			content += "<div class='dMainAccount dMainAccountU' id='"+n.aid+"' onmouseout='$(\"#accountSetup_"+n.aid+"\").hide();' onmouseover='$(\"#accountSetup_"+n.aid+"\").show();' onclick='closeTrans();renderTransView(\""+n.aid+"\","+n.bid+")'>";
			content += "<span id='sMAName' fullname='" + legalName + "' class='sMAName'>" + legalName + "</span>";
			if(n.BankID == "e001") content += " <span id='sImportBill' onclick='forAlipay(\"" + n.aid + "\",\"" + n.BankID + "\")'></span>";
			content += "<span id='accountSetup_"+n.aid+"' style='display:none;' class='iAccountSetup' onclick='showAdd(\"main\", "+n.aid+")'></span>";
			content += "</div>";
		}
	});
	$("#accountList").html(content);

	//左侧账户列表名字宽度
	$(".sMAName").width($("#accountList").width() - 130);
	$(".sMAName").each(function(i) {
		maxLen = $(".sMAName").width() / 13;
		var finalFullName = $(this).attr("fullname").replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
		if ($(this).attr("fullname").length > maxLen) {
			$(this).html(finalFullName.substring(0, maxLen - 1) + "…");
		} else {
			$(this).html(finalFullName);
		}
	});
}

/** 抓取账单之前，将账户id赋值给currentAid，刷新交易区；
 * @param id 主账户id
 */
function myToggle(aid) {
	//阻止事件冒泡传递
	if (window.event)
		window.event.cancelBubble = true;

	if ($("#action_" + aid).css('background-image').indexOf("tree2.gif") != -1)
		$("#action_" + aid).css('background', 'url(../images/tree1.gif) no-repeat');
	else
		$("#action_" + aid).css('background', 'url(../images/tree2.gif) no-repeat');
	$("#sub_"+aid).toggle();
}

/** 生成当前账户的信息
 * @param aid 主账号编号
 * @param sid 子账号编号
 */
function renderCurrentAccount(aid, sid) {
	if((typeof(aid) != "undefined" || aid != "")) {
		currentAid = aid;
	}
	if((typeof(sid) != "undefined" || sid != "")) {
		currentSid = sid;
	}
	var sql = "";
	var result = "";
	var desc = "当前帐户：";
	var idRMB = 1;
	var list = getRMBExchangeInfo(idRMB);
	if (((typeof(aid) == "undefined") || (aid == "")) && ((typeof(sid) == "undefined") || (sid == ""))) {
		//所有账户
		getAllBalance();
		$("#dAIName").html("所有账户");
		$("#dAIValue").html(myAllBalance);
		
		$(".dMainAccount").css("background", "url(images/mabg.png) repeat-x");
		$(".dMainAccount").css("color", "#105D91");
		$(".dSubAccountItemFirst").css("background", "url(images/sabg1.png) repeat-x");
		$(".dSubAccountItem").css("background", "#E8EFF3");
		$(".dSubAccountItemFirst").css("color", "#105D91");
		$(".dSubAccountItem").css("color", "#105D91");
		$("#dLeftHeader").css("background", "url(images/allbg_s.png) repeat scroll 0 0 transparent");
		$("#dLeftHeader").css("color", "white");
	} else if (aid != "") {
		//指定父账户
		$("#dLeftHeader").css("background", "none repeat scroll 0 0 #E9F1F7");
		$("#dLeftHeader").css("color", "#105D91");
		$(".dMainAccount").css("background", "url(images/mabg.png) repeat-x");
		$(".dMainAccount").css("color", "#105D91");
		$(".dSubAccountItemFirst").css("background", "url(images/sabg1.png) repeat-x");
		$(".dSubAccountItem").css("background", "#E8EFF3");
		$(".dSubAccountItemFirst").css("color", "#105D91");
		$(".dSubAccountItem").css("color", "#105D91");
		$("#" + aid).css("background", "url(images/mabg_s.png) repeat-x");
		$("#" + aid).css("color", "white");
		sql = "SELECT a.name AS aname, SUM((case tbcurrency_id ";
		$.each(list, function(i, n) {
			sql += " when " + n.id + " then balance/100*" + n.rate + " ";
		});
		sql += " end )) AS SumAmount FROM tbsubaccount b, tbaccount a WHERE a.id=b.tbaccount_id AND a.id=" + aid;
		try {
			result = window.external.QuerySQL(sql);
		} catch (e) {
			result = [{
				"aname": "aaa",
				"SumAmount": 300
			}];
		}
		if (typeof result == 'string') {
			result = JSON.parse(result);
		}
		$.each(result, function(i, n) {
			$("#dAIName").html(replaceHtmlStr(n.aname));
			$("#dAIValue").html(n.SumAmount);
		});
	} else {
		//指定子账户
		$("#dLeftHeader").css("background", "none repeat scroll 0 0 #E9F1F7");
		$("#dLeftHeader").css("color", "#105D91");
		$(".dMainAccount").css("background", "url(images/mabg.png) repeat-x");
		$(".dMainAccount").css("color", "#105D91");
		$(".dSubAccountItemFirst").css("background", "url(images/sabg1.png) repeat-x");
		$(".dSubAccountItem").css("background", "#E8EFF3");
		$(".dSubAccountItemFirst").css("color", "#105D91");
		$(".dSubAccountItem").css("color", "#105D91");
		$("#sa" + sid).css("background", "url(images/sabg_s.png) repeat-x");
		$("#sa" + sid).css("color", "white");
		sql = "SELECT a.name AS aname, b.name AS bname, SUM((case tbcurrency_id ";
		$.each(list, function(i, n) {
			sql += " when " + n.id + " then balance/100*" + n.rate + " ";
		});
		sql += " end )) AS SumAmount FROM tbsubaccount b, tbaccount a WHERE a.id=b.tbaccount_id AND b.id=" + sid + " GROUP BY b.id";

		try {
			result = window.external.QuerySQL(sql);
		} catch (e) {
			result = [{
				"aname": "&amp;&amp;",
				"bname": "bbb",
				"SumAmount": 400
			}];
		}
		if (typeof result == 'string') {
			result = JSON.parse(result);
		}
		$.each(result, function(i, n) {
			$("#dAIName").html(replaceHtmlStr(n.aname) + "：" + replaceHtmlStr(n.bname));
			$("#dAIValue").html(n.SumAmount);
		});
	}
}


/** 生成右侧上方记账区
 * @param editType 编辑类型，可以为edit或者add
 * @param myClass 记账分类，0为收入，1为支出，2为转账
 * @param id 交易编号
 */
function renderBillEditArea(editType, myClass, id) {
	//将状态赋值给常量
	currentBillType=myClass;
	var aid = "";
	var cid = "";
	var tbPayee_id = "";
	var tbCategory2_id = "";
	var amount = "";
	var amount2 = "";
	var direction = "";
	var tbSubAccount_id = "";
	var tbSubAccount_id1 = "";
	var transId1="";
	var transId2="";
	var comment = "";
	var transDate="";
	//每次进入后更新标题
	changeTransTitle(editType, myClass);
	
	if (myClass == 2) {
		//转账模式渲染
		var contentLeft = "";
		contentLeft += '<div class="dRDRItem"><div class="dRDRLabel">转出账户：</div><div class="dRDRField"><div><span class="sRDRInput"><select id="sAccount" name="sAccount" class="select"></select></span><span class="sRDRStar">*</span></div><div class="dValidation">&nbsp;</div></div></div>';
		contentLeft += '<div class="dRDRItem"><div class="dRDRLabel" id="currencyName">人民币：</div>';
		contentLeft += '<div class="dRDRField"><div><span class="sRDRInput"><div class="dRDRInput">';
		contentLeft += '<input id="iAmount" class="iMoney" type="text" value="0.00" validate="{required:[\'金额\'], number:[\'金额\'], notZero:true, notNeg:true, range:[0.01, 99999999999.99, \'金额\']}"/>';
		contentLeft += '</div></span><span class="sRDRStar">*</span></div><div class="dValidation">&nbsp;</div></div></div>';
		contentLeft += '<div class="dRDRItem" id="iAmount2Area" style="display:none;"><div class="dRDRLabel">转换币种：</div>';
		contentLeft += '<div class="dRDRField"><div><span class="sRDRInput"><div class="dRDRInput">';
		contentLeft += '<input id="iAmount2" class="iMoney" type="text" name="iAmount2" validate="{number:[\'金额\'], notZero:true, notNeg:true, range:[0.01, 99999999999.99, \'金额\']}" />';
		contentLeft += '</div></span><span class="sRDRStar"></span></div><div class="dValidation"><span id="iAmount2Content">(100美元折合人民币650人民币)</span></div></div></div>';
		$("#dRDetailLeft").html(contentLeft);
		var contentRight="";
		contentRight += '<div class="dRDRItem"><div class="dRDRLabel">转入账户：</div><div class="dRDRField"><div><span class="sRDRInput"><select id="sAccount2" name="sAccount2" class="select"></select></span><span class="sRDRStar">*</span></div><div class="dValidation">&nbsp;</div></div></div>';
		contentRight += '<div class="dRDRItem"><div class="dRDRLabel">日期：</div>';
		contentRight += '<div class="dRDRField"><div><span class="sRDRInput"><div class="dRDRInput"><input id="sdate" type="text" name="sdate" readonly="true" validate="{required:[\'日期\']}" /></div></span><span class="sRDRStar">*</span></div><div class="dValidation">&nbsp;</div></div></div>';
		$("#dRDetailRight").html(contentRight);
	} else {
		//收入支出
		var contentLeft = "";
		if (myClass == 0) {
			accountName = "付款账户";
			payeeName = "收款方";
			categoryName = "支出分类";
		} else {
			accountName = "收款账户";
			payeeName = "付款方";
			categoryName = "收入分类";
		}
		contentLeft += '<div class="dRDRItem"><div class="dRDRLabel">' + accountName + '：</div><div class="dRDRField"><div><span class="sRDRInput"><select id="sAccount" name="sAccount" class="select"></select></span><span class="sRDRStar">*</span></div><div class="dValidation">&nbsp;</div></div></div>';
		contentLeft += '<div class="dRDRItem"><div class="dRDRLabel" id="currencyName">人民币：</div>';
		contentLeft += '<div class="dRDRField"><div><span class="sRDRInput"><div class="dRDRInput">';
		contentLeft += '<input id="iAmount" class="iMoney" type="text" value="0.00" validate="{required:[\'金额\'], number:[\'金额\'], notZero:true, notNeg:true, range:[0.01, 99999999999.99, \'金额\']}"/>';
		contentLeft += '</div></span><span class="sRDRStar">*</span></div><div class="dValidation">&nbsp;</div></div></div>';
		$("#dRDetailLeft").html(contentLeft);
		var contentRight = "";
		contentRight += '<div class="dRDRItem"><div class="dRDRLabel">日期：</div><div class="dRDRField"><div><span class="sRDRInput"><div class="dRDRInput"><input id="sdate" type="text" name="sdate" readonly="true" validate="{required:[\'日期\']}" /></div></span><span class="sRDRStar">*</span></div><div class="dValidation">&nbsp;</div></div></div>';
		contentRight += '<div class="dRDRItem"><div class="dRDRLabel">' + categoryName + '：</div><div class="dRDRField"><div><span class="sRDRInput"><select id="sCategory" name="sCategory" class="select"></select></span><span class="sRDRStar"></span></div><div class="dValidation">&nbsp;</div></div></div>';
		contentRight += '<div class="dRDRItem hasPlus"><div class="dRDRLabel">' + payeeName + '：</div><div class="dRDRField"><div><span class="sRDRInput"><div class="dRDRInput"><select id="sPayee" name="sPayee" class="select"><option>-</option></select><a href="javascript:showAdd(\'addMyPayee\');" class="aRPlus"></a></span><span class="sRDRStar"></span></div><div class="dValidation">&nbsp;</div></div></div>';
		$("#dRDetailRight").html(contentRight);
	}
	
	if (editType == "modify") {
		//编辑模式，取得数据
		if (myClass == 0 || myClass == 1) {
			//收入支出
			var list = getSingleTransaction(id);
			$.each(list, function(i, n) {
				transDate=n.TransDate;
				aid = n.aid;
				//账户id
				cid = n.cid;
				tbPayee_id = n.tbPayee_id;
				//将用户交易选择的支付对象记录
				curNewPayeeId = n.tbPayee_id;
				tbCategory2_id = n.tbCategory2_id;
				//信用卡和未分类都要赋值到10000
				if(tbCategory2_id==10065||tbCategory2_id==10062){
					//支出
					tbCategory2_id=10000;
				} else if(tbCategory2_id==10066||tbCategory2_id==10061){
					//收入
					tbCategory2_id=10001;
				}				
				amount = n.Amount;
				direction = n.direction;
				tbSubAccount_id = n.tbSubAccount_id;
				tbSubAccount_id1 = n.tbSubAccount_id1;
				comment = n.acomment;
			});
		} else {
			//转账状态,赋值
			try {
				result = window.external.QuerySQL("SELECT tbSubAccount_id, tbCategory2_id, direction, amount, comment AS acomment, transdate FROM tbtransaction WHERE id=" + id);
				result = JSON.parse(result);
			} catch (e) {
				result = [{
					"tbSubAccount_id": 1,
					"tbCategory2_id": 2,
					"direction": 1,
					"amount": 1.23,
					"acomment": "aaa",
					"transdate": "2011-05-01"
				}];
			}
			$.each(result, function(i, n) {
				transDate=n.TransDate;
				aid = n.aid;

				tbCategory2_id = n.tbCategory2_id;
				if(tbCategory2_id==10059) {
					//如果是转出
					tbSubAccount_id = n.tbSubAccount_id;

					transId1=id;
					transId2=n.direction;
					amount = n.Amount;
				} else {
					//转入
					tbSubAccount_id1 = n.tbSubAccount_id;
					transId2=id;
					transId1=n.direction;
					amount2 = n.Amount;
				}
				try {
					result1 = window.external.QuerySQL("SELECT amount AS myAmount2, tbSubAccount_id FROM tbtransaction WHERE id=" + n.direction);
					result1 = JSON.parse(result1);
				} catch (e) {
					result1 = [{
						"myAmount2": 2.34,
						"tbSubAccount_id": 2
					}];
				}
				$.each(result1, function(j, m) {
					if(tbCategory2_id==10059) {
						tbSubAccount_id1 = m.tbSubAccount_id;
						amount2=m.myAmount2;
					} else {
						tbSubAccount_id = m.tbSubAccount_id;
						amount=m.myAmount2;
					}
				});
				direction = n.direction;
				comment = n.acomment;
			});
		}
	}
	$("#sCurrency").html(renderCurrency());
	$("#iAmount").val(amount);
	$("#sdate").val(transDate);
	
	if (editType == "modify") {
		//编辑模式
		$("#iDelete").show();
		if (myClass == 1 || myClass == 0) {
			//收入支出
			$("#sCategory").html(renderCategory(myClass,tbCategory2_id));
			$("#tbSubAccount_id").val(id);
			$("#sAccount").parent().next().hide();	
			$.each(getCurrentSubAccount(tbSubAccount_id), function(i, n) {
				var temp = "";
				if (n.tid != 2 && n.tid != 3)
					temp = n.aName.replace(/&/g, "&amp;");
				else
					temp = n.aName.replace(/&/g, "&amp;") + "->" + n.bName.replace(/&/g, "&amp;");
				$("#sAccount").replaceWith("<input type='text' id='temp' class='iDisabled' disabled value='" + temp + "'>");
				//添加币种名称
				$("#currencyName").html(n.cName + "：");	
			});
			$("#sPayee").html(renderPayee(tbPayee_id));
			
			//重定义TAB键事件
			$(document).unbind('keydown').keydown(function (event) {
				if (event.keyCode == 9) {
					event.preventDefault();
					if ($(document.activeElement).attr("id") == "iAmount")
						$("#sdate").focus();
					else if ($(document.activeElement).attr("id") == "sdate") {
						$("#sCategory").parent().focus();
					} else if (($(document.activeElement).hasClass("select")) && ($(document.activeElement).children("input").attr("id") == "sCategory")) {
						$("#sPayee").parent().focus();
					} else if (($(document.activeElement).hasClass("select")) && ($(document.activeElement).children("input").attr("id") == "sPayee")) {
						$("#comment").focus().select();
					} else
						$("#iAmount").focus().select();
				}
			});

			//重定义回车事件
			$(document).unbind('keypress').keypress(function (event) {
				if (event.keyCode == 13) {
					event.preventDefault();
					if (myFormValidate("#addTrans"))
						editList(id, amount, tbSubAccount_id);
				}
			});

			$("#iSave").unbind().click(function () {
				if (myFormValidate("#addTrans"))
					editList(id, amount, tbSubAccount_id);
			});
			//以下确认删除有问题
			$("#iDelete").unbind().click(function () {
				if (confirm(deleteTips[1]))
					deleteList(id, amount, tbSubAccount_id, myClass);
			});
		} else {
			//转账
			$.each(getCurrentSubAccount(tbSubAccount_id), function(i, n) {
				//赋值
				//移除星号
				$("#sAccount").parent().next().hide();
				var temp = n.aName.replace(/&/g, "&amp;") + "->" + n.bName.replace(/&/g, "&amp;");
				
				$("#sAccount").after("<input type='text' id='temp' class='iDisabled' disabled value='" + temp + "'>");
				$("#currencyName").html(n.cName + "：");
				//移除select框；
				$("#sAccount").remove();
				$("#currencyName").append("<input id='sAccount' type='hidden' value='" + tbSubAccount_id + "'>");
			});
			$.each(getCurrentSubAccount(tbSubAccount_id1), function(i, n) {
				//赋值
				//移除星号
				$("#sAccount2").parent().next().hide();
				var temp = n.aName.replace(/&/g, "&amp;") + "->" + n.bName.replace(/&/g, "&amp;");
				
				$("#sAccount2").after("<input type='text' id='temp' class='iDisabled' disabled value='" + temp + "'>");
				//移除select框；
				$("#sAccount2").remove();
				//添加hidden的input框
				$("#currencyName").append("<input id='sAccount2' type='hidden' value='" + tbSubAccount_id1 + "'>");
			});
			//交易记录号赋值
			$("#currencyName").append("<input id='transId1' type='hidden' value='"+transId1+"'>");
			$("#currencyName").append("<input id='transId2' type='hidden' value='"+transId2+"'>");
			getIamount2Status();
			//判断编辑两子账户币种是否相等
			$("#iAmount").attr("value",amount);
			$("#iAmount2").attr("value",amount2);
			var test1=getSubAccountCurrencyId(tbSubAccount_id);
			var test2=getSubAccountCurrencyId(tbSubAccount_id1);
			if(test1 == test2) {
				//同币种,隐藏层
				$('#iAmount2Area').hide();
			} else {
				if (test1 == 1) {
					//账户1为人民币
					$("#iAmount2Content").html("(100"+getCurrencyDesc(test2)+"约折合"+getMyExchange(amount2, amount)+getCurrencyDesc(test1)+")");
				} else {
					$("#iAmount2Content").html("(100"+getCurrencyDesc(test1)+"约折合"+getMyExchange(amount, amount2)+getCurrencyDesc(test2)+")");
				}
			}
			$("#iAmount").unbind('change').change( function() {
				getIamount2Status();
			});
			$("#iAmount2").unbind('change').change( function() {
				$("#iAmount2Content").empty().append("(100"+getCurrencyDesc(getSubAccountCurrencyId($('#sAccount').val()))+"约折合"+getMyExchange($('#iAmount').attr('value'),$('#iAmount2').attr('value'))+getCurrencyDesc(getSubAccountCurrencyId($('#sAccount2').val()))+")");	
			});
			
			$("#sdate").attr("value",transDate);
			//处理编辑按钮事件
			$("#iSave").unbind().click( function () {
				if (myFormValidate("#addTrans"))
					editTransList();
			});

			//重定义回车事件
			$(document).unbind('keypress').keypress(function (event) {
				if (event.keyCode == 13) {
					event.preventDefault();
					if (myFormValidate("#addTrans"))
						editTransList();
				}
			});

			//重定义TAB键事件
			$(document).unbind('keydown').keydown(function (event) {
				if (event.keyCode == 9) {
					event.preventDefault();
					if ($(document.activeElement).attr("id") == "iAmount")
						$("#iAmount2").focus().select();
					else if ($(document.activeElement).attr("id") == "iAmount2")
						$("#sdate").focus();
					else if ($(document.activeElement).attr("id") == "sdate")
						$("#comment").focus().select();
					else
						$("#iAmount").focus().select();
				}
			});

			//以下确认删除有问题
			$("#iDelete").unbind().click( function () {
				if (confirm(deleteTips[1]))
					deleteTransList();
			});	
		}
	} else {
		//添加模式
		if (myClass==1 || myClass==0) {
			//收入支出
			if (currentAid != -1 && currentAid != "") {
				//选定了父账户；
				if(getSubAccountCount(currentAid)>1){
					//最少两个子账户
					$("#sAccount").append(renderAccount("", currentAid));
					$("#sAccount").unbind().change( function() {
						$.each(getCurrencyDesc($("#sAccount").val()), function(i, n) {
							$("#currencyName").html(n.name+"：");
						});
					});	
				} else {
					//隐藏星号
					$("#sAccount").parent().next().hide();
					$.each(getCurrentAccountInfo(currentAid), function(i, n) {
						//赋值
						if(n.typeId==2||n.typeId==3){
							//有2,3类有子账户
							var temp=n.aName + "->" + n.bName;				
							$("#sAccount").after("<input type='text' id='temp' class='iDisabled' disabled value='"+temp+"'>");
						}else{
							var temp=n.aName;				
							$("#sAccount").after("<input type='text' id='temp' class='iDisabled' disabled value='"+temp+"'>");
						}
						$("#currencyName").html(n.cName+"：");
						//移除select框；
						$("#sAccount").remove();
						//添加hidden的input框
						$("#currencyName").append("<input id='sAccount' type='hidden' value='"+n.bid+"'>");
					});
				}
			} else if(currentSid!=-1&&currentSid!="") {
				//选定子账户情况
				//隐藏星号
				$("#sAccount").parent().next().hide();
				$.each(getCurrentSubAccount(currentSid), function(i, n) {
					//赋值
					var temp=n.aName + "->" + n.bName;				
					$("#sAccount").after("<input type='text' id='temp' class='iDisabled' disabled value='"+temp+"'>");
					$("#currencyName").html(n.cName+"：");
					//移除select框；
					$("#sAccount").remove();
					//添加hidden的input框
					$("#currencyName").append("<input id='sAccount' type='hidden' value='"+currentSid+"'>");
				});
			} else {
				$("#sAccount").html(renderAccount());
			}
			$("#sCategory").html(renderCategory(myClass));			
			$("#sPayee").html(renderPayee());
			$("#iDelete").hide();

			$("#iSave").unbind().click( function () {
				if (myFormValidate("#addTrans"))
					addList();
			});

			//重定义回车事件
			$(document).unbind('keypress').keypress(function (event) {
				if (event.keyCode == 13) {
					event.preventDefault();
					if (myFormValidate("#addTrans"))
						addList();
				}
			});

			//重定义TAB键事件
			$(document).unbind('keydown').keydown(function (event) {
				if (event.keyCode == 9) {
					event.preventDefault();
					if ($(document.activeElement).attr("id") == "iAmount")
						$("#sdate").focus();
					else if ($(document.activeElement).attr("id") == "sdate") {
						$("#sCategory").parent().focus();
					} else if (($(document.activeElement).hasClass("select")) && ($(document.activeElement).children("input").attr("id") == "sCategory")) {
						$("#sPayee").parent().focus();
					} else if (($(document.activeElement).hasClass("select")) && ($(document.activeElement).children("input").attr("id") == "sPayee")) {
						$("#comment").focus().select();
					} else
						$("#iAmount").focus().select();
				}
			});
		} else {
			//转账模式
			if(currentAid!=-1&&currentAid!="") {
				//选定了父账户；
				if(getSubAccountCount(currentAid)>1){
					//最少两个子账户
					$("#sAccount").append(renderAccount("",currentAid));
					$("#sAccount").unbind().change( function() {
						$.each(getCurrencyDesc($("#sAccount").val()), function(i, n) {
							$("#currencyName").html(n.name+"：");
						});
					});	
				} else {
					$.each(getCurrentAccountInfo(currentAid), function(i, n) {
						//赋值
						if(n.typeId==2||n.typeId==3){
							//有2,3类有子账户
							var temp=n.aName + "->" + n.bName;				
							$("#sAccount").after("<input type='text' id='temp' class='iDisabled' disabled value='"+temp+"'>");
						}else{
							var temp=n.aName;				
							$("#sAccount").after("<input type='text' id='temp' class='iDisabled' disabled value='"+temp+"'>");
						}
						$("#currencyName").html(n.cName+"：");
						//移除select框；
						$("#sAccount").remove();
						//添加hidden的input框
						$("#currencyName").append("<input id='sAccount' type='hidden' value='"+n.bid+"'>");
					});
				}
			} else if(currentSid!=-1&&currentSid!="") {
				//选定子账户情况
				$.each(getCurrentSubAccount(currentSid), function(i, n) {
					//赋值
					var temp=n.aName + "->" + n.bName;				
					$("#sAccount").after("<input type='text' id='temp' class='iDisabled' disabled value='"+temp+"'>");
					$("#currencyName").html(n.cName+"：");
					//移除select框；
					$("#sAccount").remove();
					//添加hidden的input框
					$("#currencyName").append("<input id='sAccount' type='hidden' value='"+currentSid+"'>");
				});
			} else {
				//所有帐户情况;
				$("#sAccount").append(renderAccount());
				//添加响应事件
				$("#sAccount").change( function() {
					$.each(getCurrentSubAccount($('#sAccount').val()), function(i, n) {
						$("#currencyName").html(n.cName+"：");
					});
					//执行联动事件，判断是否有相应的动作
					getIamount2Status();
				});
			}
			//转出账户响应事件
			$("#sAccount2").append(renderAccount());
			$("#sAccount2").change( function() {
				var subAccountId=$("#sAccount2").val();
				//执行联动事件，判断是否有相应的动作
				getIamount2Status();
			});
			$("#iAmount").unbind().change( function() {
				getIamount2Status();
			});
			$("#iAmount2").unbind().change( function() {
				var myContent="(100"+getCurrencyDesc(getSubAccountCurrencyId($('#sAccount').val()))+"约折合"+getMyExchange($('#iAmount').attr('value'),$('#iAmount2').attr('value'))+getCurrencyDesc(getSubAccountCurrencyId($('#sAccount2').val()))+")";
				$("#iAmount2Content").empty().append(myContent);
			});
			$("#iSave").unbind().click( function () {
				if (myFormValidate("#addTrans"))
					addTransList();
			});
			$("#iDelete").unbind().hide();
			
			//重定义回车事件
			$(document).unbind('keypress').keypress(function (event) {
				if (event.keyCode == 13) {
					event.preventDefault();
					if (myFormValidate("#addTrans"))
						addTransList();
				}
			});

			//重定义TAB键事件
			$(document).unbind('keydown').keydown(function (event) {
				if (event.keyCode == 9) {
					event.preventDefault();
					if ($(document.activeElement).attr("id") == "iAmount")
						$("#iAmount2").focus().select();
					else if ($(document.activeElement).attr("id") == "iAmount2")
						$("#sdate").focus();
					else if ($(document.activeElement).attr("id") == "sdate")
						$("#comment").focus().select();
					else
						$("#iAmount").focus().select();
				}
			});
		}
	}
	$("#comment").val(comment);	
	//生成dataPicker,根据状况是否要显示当前日期
	if(editType == "modify") createSingleCalendar("sdate");
	else createSingleCalendar("sdate","");
	//定制下拉框
	customizeSelect();
}

/*
 * 取得账户的子账户数目
 */
function getSubAccountCount(aid){
	var number="";
	var sql="select count(id) as myCount from tbSubAccount where tbAccount_id = "+aid;
	 try{
		var result = window.external.QuerySQL(sql);
		if (typeof result == 'string') {
			result = JSON.parse(result);
    	}
    	$.each(result, function(i,n) {
			number=n.myCount;
		});
	}
	catch(e){
	}
	return number;
}

/** 获得账户类型名称
 * @param id 账户类型编号
 * @return 账户类型名称 
 */ 
function renderAccountTypeInfo(id) {
	var Rs = "";
	var list = getAccountType(id);//取得账户类型；
	$.each(list, function(i, n) {
		Rs = n.Name;
	});
	return Rs;
}

function renderCurrency(id) {
	var Rs="";
	var list = getCurrencyInfo();//取得币种类型；
	$.each(list, function(i, n) {
		Rs+= "<option value='" + n.id + "' ";
		if(n.id==id)
			Rs+=" selected ";
		Rs+= ">" + n.Name + "</option>";
	});
	return Rs;
}

/** 生成收付款方下拉框
 */
function renderPayee(id) {
	var Rs="";
	var list = getPayeeInfo();//取得支付对象；
	$.each(list, function(i, n) {
		Rs += "<option value='" + n.id + "' ";
		if (n.id == id)
			Rs+=" selected ";
		Rs += ">" + n.Name.replace(/&/g, "&amp;") + "</option>";
	});
	if (id === undefined) {
		Rs += "<option value='0' selected>(空)</option>";
	} else if( id == 0){
		Rs += "<option value='0' selected>(空)</option>";
	} else {
		Rs += "<option value='0'>(空)</option>";
	} 
	return Rs;
}

/** 生成分类下拉框内容
 * @param type 分类类型，1为收入，0为支出
 * @param id 已选中的分类编号
 */
function renderCategory(type,id) {
	var Rs="";
	var list = getCategoryInfo();//取得分类；
	var list1 = getCategory1Default(type);
	var class1 = "";
	var currentCate="";
	$.each(list, function(i, n) {
		if (type == n.Type) {
			//当前的主分类名和现在的不一样，新开始
			
			if(currentCate!=n.name1){
				//这个是要加黑体的
				$.each(list1, function(j, m) {
					if(n.name1==m.name1){
						Rs += "<option value='" + m.id2 + "' mhvalue='"+m.name1+"'";
						if (m.id2 == id) {
							Rs += " selected ";
						}                                                                                                                                                                                                                                                                                                                          
						Rs += " son='"+m.name2+"'>" + m.name1 + "</option>";
						currentCate=n.name1;
						return false;			
					}
						
				});	
			}
			Rs += "<option value='" + n.id2 + "' mhvalue='" + n.name1 + " : " + n.name2 + "'";
			if (n.id2 == id) {
				Rs += " selected ";
			}
			Rs += ">" + n.name2 + "</option>";                                                                                                                                                                                                                                                                                                                          
		}
	});
	if(type==0){
		//支出
		if(id===undefined){
			//id未定义
			Rs+="<option value='10000' selected>(空)</option>";
		} else if(id == 10000 ){
			//id = 10000 为未定义
			Rs+="<option value='10000' selected>(空)</option>";
		} else {
			Rs+="<option value='10000'>(空)</option>";
		} 
	} else {
		//收入
		if(id===undefined){
			Rs+="<option value='10001' selected>(空)</option>";
		} else if( id==10001 ){
			Rs+="<option value='10001' selected>(空)</option>";
		} else {
			Rs+="<option value='10001'>(空)</option>";
		} 
	}
	return Rs;
}

/** 生成分类下拉框内容
 * @param aid 父账户分类id
 * @param sid 子账户分类id
 * @param id 已选中的分类编号
 */
function renderAccount(id, aid) {
	var list = getAccountInfo();//取得所有的账户信息；
	var Rs = "";
	$.each(list, function(i, n) {
		if (aid === undefined) {
			if(n.aType == 2 || n.aType == 3 ){
				Rs += "<option value='" + n.bid + "'";
				if (id == n.bid) {
					 Rs += " selected ";	
				}
				Rs += ">" + n.aname.replace(/&/g, "&amp;") + "：" + n.bname.replace(/&/g, "&amp;") + "</option>";
			} else {
				Rs += "<option value='" + n.bid + "'";
				if (id == n.bid) {
					 Rs += " selected ";	
				}
				Rs += ">" + n.aname.replace(/&/g, "&amp;") + "</option>";
			}
		} else {
			if (aid == n.aid){
				if(n.aType == 2 || n.aType == 3 ){
					Rs += "<option value='" + n.bid + "'";
					if (id == n.bid){
						 Rs+=" selected ";	
					}
					Rs+=">" + n.aname.replace(/&/g, "&amp;") + "：" + n.bname.replace(/&/g, "&amp;") + "</option>";
				} else {
					Rs += "<option value='" + n.bid + "'";
					if (id == n.bid){
						 Rs += " selected ";	
					}
					Rs += ">" + n.aname.replace(/&/g, "&amp;") + "</option>";
				}
			}
		}
		
	});	
	return Rs;
}

//添加二级子账户
function addCategory2View() {
	//显示添加的数组
	$("#already").show();
	$("#already ul").append("<li>"+$("#category2").attr("value")+"</li>");
	//添加数组
	tempCategory2.push($("#category2").attr("value"));
	//清空text数据
	$("#category2").attr("value", "");
}

function changeAddCateGoryView(id) {
	if(id==-1) {
		$("#childCategory").show();
	} else {
		//清空二级数组
		this.tempCate = [];
	}
}

function renderCategogy1(id) {
	var list=getCategory1Info(currentBillType);
	var Rs="<option value=''></option><option value='-1'>一级分类</option>";
	$.each(list, function(i, n) {
		Rs+= "<option value='" + n.id + "' ";
		if(n.id==id)
			Rs+=" selected ";
		Rs+= ">" + n.Name + "</option>";
	});
	$("#category1 option").remove();
	$("#category1").append(Rs);
}

function handleAddMyCategory() {
	if ($("#category1").val() == -1) {
		//添加一级分类
		var id1 = addCategory1($("#newCategory").attr("value"),currentBillType) ;
		if (id1 > 0) {
			//开始添加二级分类
			for (var i = 0; i < tempCategory2.length; i++) {
				if (addCategory2(id1, tempCategory2[i]) <= 0) {
					break;
				}
			}
		}
	} else {
		//添加二级分类
		addCategory2($("#category1").val(), $("#newCategory").attr("value"));
		//添加成功
	}
	//数据清空
	$("#newCategory").attr("value", "");
	$("#category1 option").remove();
	$("#category1").append('<option value="-1">一级分类</option>');
	tempCategory2 = [];
	$("#childCategory").hide();
	$("#already").hide();
	$("#already").empty();

	//重新渲染select
	$('#sCategory option').remove();
	$('#sCategory optgroup').remove();
	$("#sCategory").append(renderCategory(currentBillType));
	closeAddCategory();
}

/** 记账功能
 */
function addList() {
	//数据截取
	var subAccountId="";
	if(currentAid!=-1&&currentAid!="") {
		//选定了父账户；
		subAccountId=$("#sAccount").val();
	} else if(currentSid!=-1&&currentSid!="") {
		//选定子账户
		subAccountId=currentSid;
	} else {
		//未选择
		subAccountId=$("#sAccount").val();
	}
	var amount=$("#iAmount").attr("value");
	var transdate=$("#sdate").attr("value");
	var tbCategory2_id=$("#sCategory").val();
	var sAccount=$("#sAccount").val();
	var payee_id=$("#sPayee").val();
	var comment=$("#comment").attr("value");
	var tbSubAccount_id=subAccountId;
	var exchangerate="";
	var direction="";
	var tbSubAccount_id1="";
	//记账添加执行
	var tempListId = addTransaction(transdate,payee_id,tbCategory2_id,amount,direction,tbSubAccount_id,exchangerate,comment,tbSubAccount_id1);
	var modify = modifySubAccountBalance(tbSubAccount_id, amount,currentBillType);
	endTrans();
}

/** 编辑交易
 * @param id 交易编号
 * @param oldAmount 交易的金额
 * @param oldSubAccount_id 交易所属子账户编号  
 */ 
function editList(id, oldAmount, oldSubAccount_id) {
	var sCurrency = $("#sCurrency").val();
	var amount = $("#iAmount").attr("value");
	var transdate = $("#sdate").attr("value");
	var tbCategory2_id = $("#sCategory").val();
	var payee_id = $("#sPayee").val();
	var comment = $("#comment").attr("value");
	var tbSubAccount_id = id;
	var exchangerate = "";
	var direction = "";
	if(tbCategory2_id==10000){
		//支出
		tbCategory2_id=10065;
	} else if(tbCategory2_id==10001){
		tbCategory2_id=10066;
	}
	try {
		//////////alert("update tbTransaction set transdate='" + transdate + "',tbPayee_id=" + payee_id + ",tbCategory2_id=" + tbCategory2_id + ",amount=" + amount + ",direction='" + direction + "', exchangerate='" + exchangerate + "', comment='" + comment + "' where id=" + id);
		comment=replaceSQLStr(comment);
		window.external.ExecuteSQL("update tbTransaction set transdate='" + transdate + "',tbPayee_id=" + payee_id + ",tbCategory2_id=" + tbCategory2_id + ",amount=" + amount + ",direction='" + direction + "', exchangerate='" + exchangerate + "', comment='" + comment + "' where id=" + id);
		if (currentBillType == 0) {
			//支出
			window.external.ExecuteSQL("update tbSubAccount set balance=balance-" + amount +　"+" + oldAmount +　" where id=" + oldSubAccount_id);
		} else if (currentBillType == 1) {
			//收入
			window.external.ExecuteSQL("update tbSubAccount set balance=balance-" + oldAmount +　"+" + amount + " where id=" + oldSubAccount_id);
		} else{
			//转账
		}
	} catch (e) {
	}
	endTrans();
}

/** 删除交易
 * @param id 交易编号
 * @param oldAmount 交易的金额
 * @param oldSubAccount_id 交易所属子账户编号  
 */
function deleteList(id, oldAmount, oldSubAccount_id,myClass) {
	try {
		if (myClass == 0) {
			//收入
			window.external.ExecuteSQL("update tbSubAccount set balance=balance+" + oldAmount + " where id=" + oldSubAccount_id);
		} 
		if (myClass == 1) {
			//支出
			window.external.ExecuteSQL("update tbSubAccount set balance=balance-" + oldAmount + " where id=" + oldSubAccount_id);
		}
		window.external.ExecuteSQL("delete from tbTransaction where id=" + id);
	} catch (e) {
	}

	endTrans();
}

/** 点击某交易后的响应事件
 */
function clickTransaction(type, mt, aid) {
	$("#dRightTableTrans tr").removeClass("transSelected");
	$("#trans" + aid).addClass("transSelected");
	editTransaction(type, mt, aid);
}

/** 生成右侧下方账本区
 * @param aid 主账户编号
 * @param sid 子账户编号
 */
function renderTransView(aid, sid) {
	var list = "";
	if(typeof(aid) != "undefined" && aid != "") {
		//给全局变量赋值
		currentAid = aid;
		renderCurrentAccount(aid, "");
		list = getTransaction(aid);
	} else if(typeof(sid) != "undefined" && sid != "") {
		//给全局变量赋值
		currentSid = sid;
		renderCurrentAccount("", sid);
		list = getTransaction("", sid);
	} else {
		renderCurrentAccount("", "");
		list = getTransaction();
	}
	var class1="tDetail1";
	var class2="tDetail2";
	var currentClass = "";
	var modifyType = "";
	var content = "";
	if (list) {
		//下面这段会造成严重的性能问题，建议优化
		$.each(list, function(i, n) {
			if(currentClass == class1)
				currentClass = class2;
			else
				currentClass = class1;
			if (n.direction != "")
				modifyType = 2;
			else
				modifyType = n.Type;
			content += '<tr mhcontent="true" class="' + currentClass + '" id="trans' + n.aid + '" onclick="clickTransaction(\'modify\', ' + modifyType + ', ' + n.aid + ')">';
			content += '<td><nobr>' + n.TransDate + '</nobr></td>';
			//以下为分类判断
			if (n.bname=="未定义收入" || n.bname=="未定义支出") {
				content += '<td></td>';
			} else {
				if (n.bname == "CATA420") {
					//选择的是主分类
					content += '<td><nobr>' + n.cname + '</nobr></td>';
				} else {
					content += '<td><nobr>' + n.cname + ":" + n.bname + '</nobr></td>';	
				}	
			}
			
			if (n.Type == 0) {
				content += '<td>&nbsp;</td>';
				content += '<td><nobr>' + n.Amount + '</nobr></td>';
			} else {
				content += '<td><nobr>' + n.Amount + '</nobr></td>';
				content += '<td>&nbsp;</td>';
			}
			$.each(getCurrentSubAccount(n.eid), function(j, m) {
				var temp = "";
				if ((m.tid != 2) && (m.tid != 3))
					temp = replaceHtmlStr(n.aname);
				else
					temp = replaceHtmlStr(n.aname) + "：" + replaceHtmlStr(n.dname);
				content += '<td><nobr>' + temp + '</nobr></td>';
				return false;
			});
			if (n.tbPayee_id != "" || n.tbPayee_id == 0)
				content += '<td><nobr>' + replaceHtmlStr(getSinglePayeeName(n.tbPayee_id)) + '</nobr></td>';
			else
				content += '<td></td>';
			
			content += '<td><nobr>' + replaceHtmlStr(n.acomment) + '</nobr></td>';
			content += '</tr>';
		});
	}
	
	if (list.length > -1) {
		$("#dRightTableTrans").empty();
	    TransRenderFinished = false;
	    $("#dLoading").show();
		intTransRender = setInterval(checkTransRender, 10);
		htmlContent = content;
		setTimeout(showContent, 5);
	    TransRenderFinished = true;
    } else {
		$("#dRightTableTrans").html(content);
		$("#dRightTableTrans").append(generateEmptyLines("#dRightTableTrans", 7, "clickTransaction(\"add\", 0, 0)"));
		setTransTDWidth();
	}
}

var htmlContent;
var intTransRender;
var TranRenderFinished;

function showContent() {
	$("#dRightTableTrans").html(htmlContent);
	$("#dRightTableTrans").append(generateEmptyLines("#dRightTableTrans", 7, "clickTransaction(\"add\", 0, 0)"));
	setTransTDWidth();
}

function checkTransRender() {
	if (TransRenderFinished) {
    	$("#dLoading").hide();
		clearInterval(intTransRender);
	}
}

/** 生成空白行
 * @param tableId 表格名称
 * @param tdCount 列数
 * @return 生成的HTML代码
 */   
function generateEmptyLines(tableId, tdCount, clickEvent) {
	ELHTML = "";
	tableElement = $(tableId);
	$(tableId + " tr[mhcontent!='true']").remove();
	contentRows = $(tableId + " tr[mhcontent='true']").length;

	totalRows = (tableElement.closest("#dRRDetail").height() - 4) / 30;
	emptyRows = totalRows - contentRows;
	
	if (emptyRows > 0) {
		//需要显示空行
		if (contentRows % 2 == 0) currentClass = "tDetail1";
		else currentClass = "tDetail2";
	
		for (i=0; i<emptyRows; i++) {
			ELHTML += "<tr class='" + currentClass + "' onclick='" + clickEvent + "'>";
			for (j=0; j<tdCount; j++) {
				ELHTML += "<td>&nbsp;</td>";
			}
			ELHTML += "</tr>";
			if(currentClass == "tDetail1")
				currentClass = "tDetail2";
			else
				currentClass = "tDetail1";
		}
	}
	return ELHTML;
}

//计算当前所有账户总值
function getAllBalance() {
	try {
		var idRMB = 1;
		var list = getRMBExchangeInfo(idRMB);
		var sql1 = " select sum(balance) as allBalance from (select b.tbcurrency_id , (case b.tbcurrency_id ";
		$.each(list, function(i, n) {
			sql1 += " when " + n.id + " then sum(balance)/100*" + n.rate + " ";
		});
		sql1 += " end ) as balance from tbAccount a, tbsubAccount b where a.id = b.tbaccount_id group by b.tbcurrency_id) t"
		//////////////alert("sql="+sql1);
		var result;
		try {
			result = window.external.QuerySQL(sql1);
		} catch (e) {
			result = {
				"allBalance": 134.00
			};
		}
		if (typeof result == 'string') {
			result = JSON.parse(result);
			$.each(result, function(i, n) {
				myAllBalance = n.allBalance;
			});
		}
	} catch(e) {
	}
}

/**抓取账单响应事件
 * @param id：账户id，以此id为依据，根据账单币种，更新到相应的子账户中。
 */
function getCreditCardList(id,bankId) {
	//根据当前日期渲染生成的月份
	//alert("1");
	currentBankId = bankId;
	//alert(currentBankId);
	currentAid = id;
	getCreditAccount=id;
	showAdd("getCreditCardBillList");
	//alert("2");
}


function submitCreditCardBillList() {
	closeAdd("getCreditCardBillList");
	//招行信用卡数据如下
	var temp = 0
	if(getCreditAccount!=-1){
		temp = getCreditAccount;
		getCreditAccount = -1;
	} 
	else getCreditAccount = -1;
	try {
		//window.external.creditCardBillList(temp,2,$("#selectMonth").val(),"a006");
		//alert(temp+"::::::::::::"+$("#selectMonth").val()+"::::::::::::::::::::::"+currentBankId);
		window.external.creditCardBillList(temp,2,$("#selectMonth").val(),currentBankId);
		currentBankId="";
	} catch (e) {
	}
}

//关闭电子账单,账单事件的回调函数
function closeBillList() {
	renderTransView(currentAid,"");
}

/** 生成之前的12个月
 */
function createBillMonth() {
	var content = "";
	var d = new Date();
	var curMonth = "";
	for (var i=0; i<11; i++) {
		//today清空
		d.setMonth(d.getMonth() - 1);
		if((d.getMonth() + 1 + "").length == 1)
			curMonth = "0" + (d.getMonth() + 1);
		else {
			curMonth = (d.getMonth() + 1);
		}
		content += "<option value='" + d.getFullYear() + curMonth + "'>" + d.getFullYear() + "年" + (d.getMonth() + 1) + "月</option>";
	}	
	$("#selectMonth").html(content);
}

//测试用户数据
function initCurrentDay() {
	var cDate= new date();
	$("#").attr("value",cDate.getFullYear()+"-"+(cDate.getMonth()+1)+"-"+cDate.getDay());
}

/** 获得单一子账户信息
 * @param sid 子账户号
 */
function getCurrentSubAccount(sid) {
	try {
		result = JSON.parse(window.external.QuerySQL("SELECT a.name AS aName, b.name AS bName, c.name AS cName, a.tbAccountType_id as tid FROM tbaccount a, tbsubaccount b, tbCurrency c WHERE c.id=b.tbcurrency_id AND a.id=b.tbAccount_id AND b.id=" + sid));
	} catch (e) {
		result = [{
			"aName": "&amp;&amp;",
			"bName": "美元",
			"cName": "美元"
		}];
	}
	return result;
}

/** 获得单一主账户信息
 * @param aid 子账户号
 */
function getCurrentAccountInfo(aid) {
	try {
		result = JSON.parse(window.external.QuerySQL("SELECT a.name AS aName, b.name AS bName, c.name AS cName, b.id as bid, a.tbAccountType_id as typeId FROM tbaccount a, tbsubaccount b, tbCurrency c WHERE c.id=b.tbcurrency_id AND a.id=b.tbAccount_id AND a.id=" + aid));
	} catch (e) {
		result = [{
			"aName": "招行信用卡",
			"bName": "美元",
			"cName": "美元",
			"bid": 0,
			"typeId": "0"
		}];
	}
	return result;
}

/** 获取子账户币种
 * @param id 子账户编号
 * @return 币种编号 
 */
function getSubAccountCurrencyId(id) {
	try {
		result = window.external.QuerySQL("SELECT tbcurrency_id AS cid FROM tbsubaccount WHERE id=" + id);
		result = JSON.parse(result);
	} catch (e) {
		if (id == 1) {
			result = [{
				"cid": 2
			}];
		} else {
			result = [{
				"cid": 3
			}];
		}
	}
	$.each(result, function(i, n) {
		result = n.cid;
	});
	return result;
}

/** 处理转账时的联动事件
 */
function getIamount2Status() {
	var sAccount="";
	var iAmount="";
	var sAccount2="";
	if(getCurrentAccountStatus()){
		//一个子账户
		sAccount=$("#sAccount").val();
	}else{
		//多个子账户
		sAccount=$("#sAccount").val();
	}

	//取得iAmount值
	iAmount=$("#iAmount").val();
	sAccount2=$("#sAccount2").val();
	var imount2Value=0;
	var test1=getSubAccountCurrencyId(sAccount);
	var test2=getSubAccountCurrencyId(sAccount2);
	if(sAccount!=""&&sAccount2!=""&&sAccount!=sAccount2&&test1!=test2) {
		//两个账户币种不同
		var iAmount2 = getMyValue(test1,test2,iAmount);
		$("#iAmount2Area").show();
		$("#iAmount2").attr("value", iAmount2);
		
		if (test1 == 1) {
			//账户1为人民币
			$("#iAmount2Content").html("(100" + getCurrencyDesc(test2) + "约折合" + getRMBExchangeInfo1(test2) + getCurrencyDesc(test1) + ")");
		} else {
			if(test2 == 1){
				//账户2为人民币
				$("#iAmount2Content").html("(100" + getCurrencyDesc(test1) + "约折合" + getRMBExchangeInfo1(test1) + getCurrencyDesc(test2) + ")");
			}else{
				$("#iAmount2Content").html("(100" + getCurrencyDesc(test1) + "约折合" + getRMBExchangeInfo1(test1, test2) + getCurrencyDesc(test2) + ")");
			}
		}
	} else {
		$("#iAmount2Area").hide();
		$("#iAmount2").attr("value",iAmount);
	}
}

/** 获取币种转换结果
 * @param cid1 币种1
 * @param cid2 币种2
 * @param value1 币种1金额
 * @return 币种2的金额 
 */
function getMyValue(cid1, cid2, value1) {
	var result = "";
	if (cid1 == 1 || cid2 == 1) {
		//判断是不是人民币账户转其他账户
		if(cid1 == 1) {
			//人民币转外币
			result = Math.round(value1 * 10000 / getRMBExchangeInfo1(cid2)) / 100;
		} else {
			//外币转人民币
			result = Math.round(value1 * getRMBExchangeInfo1(cid1)) / 100;
		}
	} else {
		//外币之间的转换
		result = Math.round(value1 * getRMBExchangeInfo1(cid1, cid2)) / 100;
	}
	return result;
}

/** 计算出当前的汇率
 * @param value1 币种1的金额
 * @param value2 币种2的金额 
 */
function getMyExchange(value1, value2) {
	return Math.round(value2 * 10000 / value1) / 100;
}

/*
 * 获得单一主账户l
 * @param aid 子账户号
 */
function getCurrentAccountType(aid) {
	try {
		result = JSON.parse(window.external.QuerySQL("SELECT a.name AS aName, b.name AS bName, c.name AS cName, tbAccountType_id as typeId FROM tbaccount a, tbsubaccount b, tbCurrency c WHERE c.id=b.tbcurrency_id AND a.id=b.tbAccount_id AND a.id=" + sid));
	} catch (e) {
		result = [{
			"aName": "招行信用卡",
			"bName": "美元",
			"cName": "美元"
		}];
	}
	return result;
}
/** 添加转账交易记录
 */
function addTransList() {
	try {
		if(!submitStatus) {
			//将提交状态锁定
			submitStatus=true;
			var sAccount = "";
			if(getCurrentAccountStatus()){
				//一个子账户
				sAccount=$("#sAccount").attr("value");
			}else{
				//多个子账户
				sAccount=$("#sAccount").val();
			}
			var sAccount2 = $("#sAccount2").val();
			var iAmount = $("#iAmount").attr("value");
			var iAmount2 = $("#iAmount2").attr("value");
			var sDate = $("#sdate").attr("value");
			var comment = $("#comment").attr("value");

			//转出
			var cateOut = 10059;
			//转入
			var cateIn = 10060;
			var directionIn=addTransaction(sDate,'0',cateOut,iAmount,'',sAccount,'',comment,sAccount2);
			var directionOut=addTransaction(sDate,'0',cateIn,iAmount2,directionIn,sAccount2,'',comment,sAccount);
			window.external.ExecuteSQL("update tbTransaction set direction="+directionOut+" where id="+directionIn);
			//更新两子账户余额
			window.external.ExecuteSQL("update tbSubAccount set balance=balance-"+iAmount+ " where id ="+sAccount);
			window.external.ExecuteSQL("update tbSubAccount set balance=balance+"+iAmount2+ " where id ="+sAccount2);
			
			//将提交状态解锁
			submitStatus=false;
			//执行关闭事件
			closeTrans();
		} else {
		}
		endTrans();
	} catch(e) {
	}
}

/** 编辑转账交易记录
 */
function editTransList() {
	try {
		if(!submitStatus) {
			//将提交状态锁定
			submitStatus=true;
			var transId1= $("#transId1").attr("value");
			var transId2= $("#transId2").attr("value");
			var sAccount = $("#sAccount").attr("value");
			var sAccount2 = $("#sAccount2").attr("value");
			var iAmount = $("#iAmount").attr("value");
			var iAmount2 = $("#iAmount2").attr("value");
			var sDate = $("#sdate").attr("value");
			var comment = $("#comment").attr("value");
			
			//先将相应子账户数据复原
			window.external.ExecuteSQL("update tbSubAccount set balance=balance+(select amount from tbTransaction where id="+transId1+") where id ="+sAccount);			
			window.external.ExecuteSQL("update tbSubAccount set balance=balance-(select amount from tbTransaction where id="+transId2+") where id ="+sAccount2);
			//更新交易记录
			comment=replaceSQLStr(comment);
			window.external.ExecuteSQL("update tbTransaction set transdate='"+sDate+"',amount = "+iAmount+", comment = '"+comment+"' where id ="+transId1);			
			window.external.ExecuteSQL("update tbTransaction set transdate='"+sDate+"',amount = "+iAmount2+", comment = '"+comment+"' where id ="+transId2);
			//更新相应子账户数据
			window.external.ExecuteSQL("update tbSubAccount set balance=balance-"+iAmount+" where id ="+sAccount);
			window.external.ExecuteSQL("update tbSubAccount set balance=balance+"+iAmount2+" where id ="+sAccount2);
			//业务逻辑完成，将提交状态解锁
			submitStatus=false;
		} else {
		}
		endTrans();
	} catch(e) {
	}
}

/** 删除转账交易记录
 */
function deleteTransList() {
	try {
		if(!submitStatus) {
			//将提交状态锁定
			submitStatus=true;
			var transId1= $("#transId1").attr("value");
			var transId2= $("#transId2").attr("value");
			var sAccount = $("#sAccount").attr("value");
			var sAccount2 = $("#sAccount2").attr("value");
			var iAmount = $("#iAmount").attr("value");
			var iAmount2 = $("#iAmount2").attr("value");
			var sDate = $("#sdate").attr("value");
			var comment = $("#comment").attr("value");

			//先将相应子账户数据复原
			window.external.ExecuteSQL("update tbSubAccount set balance=balance+(select amount from tbTransaction where id="+transId1+") where id ="+sAccount);
			window.external.ExecuteSQL("update tbSubAccount set balance=balance-(select amount from tbTransaction where id="+transId2+") where id ="+sAccount2);

			//删除交易记录
			window.external.ExecuteSQL("delete from tbTransaction where id ="+transId1);
			window.external.ExecuteSQL("delete from tbTransaction where id ="+transId2);
			//业务逻辑完成，将提交状态解锁
			submitStatus=false;
		} else {
		}
		//关闭编辑区
		endTrans();
	} catch(e) {
	}
}

/** 数据校验事件
 * @param divId 图层号
 * @return 1表示校验成功，0表示校验失败 
 */
function myFormValidate(divId) {
	var validator = "";
	var valResult = 0;

	//建立验证
	validator = $(divId).validate({
		errorPlacement: function(error, element) {
			element.parents(".dRDRField").children(".dValidation").html(error);
		}
	});
	
	//取数字的前两位小数点
	$(divId + " .iMoney").each(function() {
		var numberBeforePoint = 0;
		if ($(this).val().indexOf(".") != -1) {
			numberBeforePoint = $(this).val().substring(0, $(this).val().indexOf("."));
		} else {
			numberBeforePoint = $(this).val();
		}
		if (numberBeforePoint.length <= 14) {
			if (!isNaN($(this).val() * 100)) {
				$(this).val(Math.floor($(this).val() * 100) / 100);
			}
		}
	});

	//执行验证	
	switch (divId) {
		case "#accountForm1":
			if(validator.form()) {
				if ($("#main #accounttype").val() == 2 || $("#main #accounttype").val() == 3) {
					if ($("#main .dRightTable tr[mhcontent='true']").length < 1) {    
						alert("该账户下未建立任何币种的子账户，不允许提交。请至少建立一个子账户。");
						return 0;
					}
				}
				if(currentEditType == "add") {
					//添加
					submitAddAccount();
				} else {
					//执行编辑方法
					submitEditAccount();
					//将当前的值更新为初始值
					curNewBankId=-1;
				}
			}
			break;
			
		case "#billForm":
			if(validator.form()) {
				submitCreditCardBillList();
				curNewPayeeId=-1;
			}
			break;
			
		default:
			if(validator.form()) {
				valResult = 1;
			}
			break;
	}
	return valResult;
}

/*
 * 根据不同的状态修改添加支付对象页面的标题信息
 * param1 editType 没存在，添加，0 编辑
 */
function changePayeeTitle(editType){
	var statusDesc="";
	if (editType === undefined ) {
		//添加状态
		$('#addMyPayee h1').html("管理收付款方");
		$('#addMyPayee .dEABack2').html("新建收付款方");
		$('#addMyPayee .dSATitle').html("已添加的收付款方");
	} else {
		//编辑状态
		$('#addMyPayee h1').html("管理收付款方");
		$('#addMyPayee .dEABack2').html("编辑收付款方");
		$('#addMyPayee .dSATitle').html("已添加的收付款方");
	}
}

/*
 * 根据不同的状态修改添加交易的标题信息
 * param1 editType add，添加
 */
function changeTransTitle(editType,type){
	var statusDesc="";
	if(editType == "add" ){
		//添加状态
		 //1,收入；0，支出；2，转账；
		 if( type == 1 ){
			$('#dRightDetail #dRDContent #dRDetailTop').html("新建收入"); 	
		 } else if( type == 2 ){
		 	$('#dRightDetail #dRDContent #dRDetailTop').html("新建转账");
		 } else {
		 	$('#dRightDetail #dRDContent #dRDetailTop').html("新建支出");
		 }
	} else{
		//编辑状态
		 if( type == 1 ){
			$('#dRightDetail #dRDContent #dRDetailTop').html("编辑收入"); 	
		 } else if( type == 2 ){
		 	$('#dRightDetail #dRDContent #dRDetailTop').html("编辑转账");
		 } else {
		 	$('#dRightDetail #dRDContent #dRDetailTop').html("编辑支出");
		 }
	}
}

/** 让Payee编辑区回到初始状态
 */
function returnAddPayeeStart(){
	//生成title
	currentPayeeEditType = "add";
	changePayeeTitle();
	//移除所有的编辑样式
	$("#addMyPayee .dValidation").html("");
	$("#payeeTable tr").removeClass("transSelected");
	$('#addMyPayee #newPayee').attr("value","");
	$('#addMyPayee #payeeTel').attr("value","");
	$('#addMyPayee #payeeMail').attr("value","");
	$('#addMyPayee #payeeId').attr("value","");
	//处理按钮事件
	$('#addMyPayee .bDelete').hide().unbind("click");
	
	$('#addMyPayee .bAdd').show().unbind("click").click( function(){
		//恢复新的初始状态
    	if (myFormValidate("#payeeForm")) {
			handlePayee();
			returnAddPayeeStart();
			getCurrentPayee();
		}
	});
	$('#addMyPayee .bCancel').hide().unbind("click");
}

/** 添加,编辑Payee事件
 */
function handlePayee(){
	var payeeId = $("#payeeId").attr("value");
	var newPayee = $("#newPayee").attr("value");
	var payeeTel = $("#payeeTel").attr("value");
	var payeeMail = $("#payeeMail").attr("value"); 
	if(payeeId==""){
		//添加模式
		var addRs=addNewPayee(newPayee,payeeMail,payeeTel);
		editNewPayeeId=addRs; 
	}else{
		//编辑模式
		updatePayee(payeeId,newPayee,payeeMail,payeeTel);
		editNewPayeeId=payeeId;
	}
	//刷新下方显示区域
}

/** 取得子账户币种
 * @param id 子账户编号
 */
function getSubAccountCurrecyId(id){
	var cId = 0;
	try {
		result = JSON.parse(window.external.QuerySQL("SELECT tbCurrency_id FROM tbSubAccount WHERE id=" + id));
	} catch (e) {
		result = [{
			"tbCurrency_id": 1
		}];
	} 
    $.each(result, function(i, n) {
      	cId = n.tbCurrency_id;
    }); 
    return cId;
}

/** 删除子账户
 * @param id 子账户id
 */
function delSubAccount(id){
	//执行删除操作
	try{
		if((id+"").length<10){
			//已经在数据库			
			deleteSubAccount(id);
			//执行删除操作了,将全局变量设为true；
			isDeleteSubAccount=true;	
		}
		//重新渲染操作
		renderEditArea('add', currentTbAccountType, -1);	

		//移除临时的数据对象
		var tempLength=subAccount.length;
		for(var i=0;i<tempLength;i++) {
			if(id==subAccount[i][6]) {
				this.subAccount.splice(i,1);
				break;
			}
		}
		//重新渲染后面的数据
		viewAddSubAccount(currentTbAccountType);	
	}catch(e){
	}
}

/*
 * 删除账户
 * param id 账户id
 */
function delAccount(id){
	deleteAccount(id);
	//清空选定状态
	currentAid="";
	currentSid="";
	//渲染左侧树
	createAccountTree();
	//交易区
	renderTransView();
	//状态区
	renderCurrentAccount("", "");
}

/* 
 * 记账编辑功能结束后的渲染
 */
function endTrans(){
	closeTrans();
	renderTransView(currentAid,currentSid);
}

function selectKey(selectId){
	$(selectId).parent().replaceWith( function() {
		var selectName = $(this).children("input").attr("name");
		return "<select name='" + selectName + "' id='" + selectName + "' class='select'></select>";
	});
}

/*
 * 获取当前的子账户数目
 *  1个子账户，返回true，多余1个，返回false； 
 */
function getCurrentAccountStatus(){
	var Rs=-1;
	if(currentSid!=""&&currentSid>0){
		return true;
	} else if (currentAid!=""&&currentAid>0){
		try {
			var result = JSON.parse(window.external.QuerySQL("SELECT count(id) as myCount FROM tbSubAccount WHERE tbAccount_id=" + currentAid));
		} catch (e) {
			result = [{
				"myCount": 1
			}];
		} 
	    $.each(result, function(i, n) {
	      	Rs=n.myCount;
	    }); 
	    if(Rs>1) return false;
	    else return true;	
	}
}

/** 入库前的字符串处理
 */
function replaceSQLStr(str){
	//sql保留字替换
	return str=str.replace(/\'/g,"\'\'");
}

/** 显示html时先替换”&“
 */
function replaceHtmlStr(str) {
	//sql保留字替换
	return str.replace(/&/g,"&amp");
}

function debug(str) {
	try {
		window.external.WriteLog(str);
	} catch (e) {
	}
}

function getCurrentBankId(id){
	currentBankId=id;
}

function forAlipay(aid,BankID){	
	window.external.creditCardBillList(aid,2,"",BankID);
}
