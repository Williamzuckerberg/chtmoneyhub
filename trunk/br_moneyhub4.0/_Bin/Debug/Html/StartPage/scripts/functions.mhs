var selector, showlist;
var bigStarInterval = new Array();

function init() {
	try {
		userStatus = window.external.GetCurrentUserID();
	} catch (e) {
		userStatus = "Guest";
	}
	if (userStatus != "Guest") {
		afterLogin();
	} else {
		beforeLogin();
	} 
	var wwwhost = "";
    try {
        wwwhost = window.external.GetHostName("web");
    } catch (e) {
        wwwhost = "http://www.caijinhui.com/";
    }
	if (window.addEventListener) {  
		window.addEventListener('onselectstart', rfalse, false);   //firefox
	} else if (window.attachEvent)  {
		window.attachEvent('onselectstart', rfalse);  //IE
	}
    
    changePic(0);
    selector = document.getElementById("selector");
    showlist = document.getElementById("app_div");
    showlist_1 = document.getElementById("appContent");
    currentAppArray = "";
    renderFav();
    sortableFav();
    handle(currentAppArray);
    MH.control.resizeOk();
    MH.control.checkAlarm();
    MH.control.initApp();
    
    if (!window.location.hash) {
        window.location.hash = "#banks";
    }
    
    shiftTab(window.location.hash);
    selector.onkeyup = function(){
        return findName(selector.value, "banks");
    };
    renderFinance();
	renderAd();
    fixPNG(document.getElementById("iFinanceInfo"));
}

function rfalse() {
	return false;
}

function showEnt(object, para){
    MH.dom.setOpacity(object, 100);
    object.style.display = "";
    if (object.hideTimer) {
        clearTimeout(object.hideTimer);
    }
    if (object.showTimer) {
        clearTimeout(object.showTimer);
    }
    var temp;
    var begin = para.begin;
    var change = para.change;
    var duration = para.duration;
    temp = Math.ceil(Tween.strongEaseOut(para.t, begin, change, duration));
    object.style.height = temp + "px";
    if (para.t < duration) {
        para.t++;
        object.showTimer = setTimeout((function(o, p){
            return function(){
                showEnt(o, p);
            }
        })(object, para), 10);
    }
}

function hideEnt(object, para){
    if (object.hideTimer) {
        clearTimeout(object.hideTimer);
    }
    if (object.showTimer) {
        clearTimeout(object.showTimer);
    }
    var temp;
    var begin = para.begin;
    var change = para.change;
    var duration = para.duration;
    temp = Math.ceil(Tween.strongEaseOut(para.t, begin, change, duration));
    MH.dom.setOpacity(object, temp);
    if (para.t < duration) {
        para.t++;
        object.hideTimer = setTimeout((function(o, p){
            return function(){
                hideEnt(o, p);
            }
        })(object, para), 20);
    }
    else {
        object.style.display = "none";
        MH.dom.setOpacity(object, 100);
    }
}

function findName(name, type){
    if (name.length > 0) {
        var resultArray = searchIndex(name, type);
        if (resultArray.length > 0) {
            handle(resultArray);
        }
        else {
            showlist.innerHTML = '<div class="no_search">' + '<div class="search_main">' + '<h1>对不起，没有搜索到你要寻找的应用</h1>' + '<strong>建议您检查：</strong>' + '<p>您确认填写的拼音正确</p>' + '<p>您是否输入了空格</p>' + '</div></div>';
        }
    }
    else 
        handle(appList[type]);
}


/*
 * 按照某一速度滚动某一距离
 * @param d 滚动距离
 * @param speed 滚动速度
 */
function favScrollRun(d, speed){
    var Favct = document.getElementById("Favcontainer");
    var Favcontent = document.getElementById("Favcontent");
    i = Favct.clientWidth;
    h = Favcontent.scrollWidth;
    a = Favct.scrollLeft;
    if (d > a) 
        if (h - d > i) 
            a += Math.ceil((d - a) / speed);
        else 
            a += Math.ceil((d - a - (h - d)) / speed);
    else 
        a += (d - a) / speed;
    Favct.scrollLeft = a;
    if (a == d || Favct.offsetTop == a) 
        clearInterval(favScrollInterval);
}

/*
 * 向某一方向滚动
 * @param direction 滚动方向
 */
function favScroll(direction){
    if (typeof favScrollInterval != "undefined") 
        clearInterval(favScrollInterval);
    var scrollTo = 0;
    if (direction == "right") {
        MH.control.currentPage++;
    } else if (direction == "left") {
        MH.control.currentPage--;
    } else {
        MH.control.currentPage = direction;
    }
    scrollTo = MH.control.favContainerWidth() * MH.control.currentPage;
    favScrollInterval = setInterval('favScrollRun(' + scrollTo + ', 20)', 10);
    //决定是否隐藏左或右箭头
    if (MH.control.currentPage > 0) {
        document.getElementById('FavLeft').style.visibility = "visible";
    } else {
        document.getElementById('FavLeft').style.visibility = "hidden";
    }
    if (MH.control.currentPage < MH.control.totalPages - 1) {
        document.getElementById('FavRight').style.visibility = "visible";
    } else {
        document.getElementById('FavRight').style.visibility = "hidden";
    }
    //改变翻页圆点
    document.getElementById('favpage').innerHTML = "";
    for (i = 0; i < MH.control.totalPages; i++) {
        if (MH.control.currentPage == i) {
            document.getElementById('favpage').innerHTML += '<div class="pagedoton"></div>';
        } else {
            document.getElementById('favpage').innerHTML += '<div class="pagedotoff" onclick="favScroll(' + i + ');"></div>';
        }
    }
}

/*添加APP部分的滚动事件*/
function appScrollRun(d, speed) {
    var appCt = document.getElementById("appContainer");
    var appContent = document.getElementById("appContent");
    i = appCt.clientWidth;
    h = appContent.scrollWidth;
    a = appCt.scrollLeft;
    
    if (d > a) { 
        if (h - d > i) {
            a += Math.ceil((d - a) / speed);
        } else {
            a += Math.ceil((d - a - (h - d)) / speed);
        }
    } else {
        a += (d - a) / speed;
    }
    appCt.scrollLeft = a;
    if (a == d || appCt.offsetTop == a) {
        clearInterval(appScrollInterval);
    }
}

function appScroll(direction) {
    if (typeof appScrollInterval != "undefined") 
        clearInterval(appScrollInterval);
    var scrollTo = 0;
    if (direction == "right") {
        MH.control.currentAppPage++;
    } else if (direction == "left") {
        MH.control.currentAppPage--;
    } else {
        MH.control.currentAppPage = direction;
    }
    
    scrollTo = MH.control.appContainerWidth() * MH.control.currentAppPage;
    appScrollInterval = setInterval('appScrollRun(' + scrollTo + ', 20)', 10);
    if (MH.control.currentAppPage > 0) {
        document.getElementById('appLeft').style.visibility = "visible";
    } else {
        document.getElementById('appLeft').style.visibility = "hidden";
    }
    if (MH.control.currentAppPage < MH.control.totalAppPages - 1) {
        document.getElementById('appRight').style.visibility = "visible";
    } else {
        document.getElementById('appRight').style.visibility = "hidden";
    }
    
    document.getElementById('appPage').innerHTML = "";
    for (i = 0; i < MH.control.totalAppPages; i++) {
        if (MH.control.currentAppPage == i) {
            document.getElementById('appPage').innerHTML += '<div class="apppagedoton"></div>';
        } else {
            document.getElementById('appPage').innerHTML += '<div class="apppagedotoff" onclick="appScroll(' + i + ');"></div>';
        }
    }
}

function favZoomRun(fi_id, speed, d, callback){
    var lifav = document.getElementById("li_" + fi_id);
    if (lifav.style.margin == "") {
        a = 0;
    } else {
        a = parseInt(lifav.style.margin);
    }
    if (d == 1) {
        a -= parseInt(145 / speed);
    } else {
        a += parseInt(145 / speed);
    }
    if (a <= 5) 
        a = 0;
    lifav.style.margin = a + "px 0 0 0";
    if (a <= 0 || a > 145) {
        clearInterval(favZoomInterval);
        if (callback != null) 
            callback(fi_id);
    }
}

function favZoomIn(fi_id) {
	if (typeof favZoomInterval != "undefined") {
		clearInterval(favZoomInterval);
	}
	document.getElementById("li_" + fi_id).style.margin = "145px 0 0 0";
	favZoomInterval = setInterval('favZoomRun("' + fi_id + '", 15, 1, null)', 10);
}

function favZoomOut(fi_id) {
    if (typeof favZoomInterval != "undefined") 
        clearInterval(favZoomInterval);
    favZoomInterval = setInterval('favZoomRun("' + fi_id + '", 15, 0, renderFav)', 10);
}

function renderApp(){
    MH.control.currentAppPage = 0;
}

//设置不可拖拽元素
function cancelFav(div,id){
	var divId = "#"+div;
	var cancelId = "#"+id;
	$(divId).sortable("option", "cancel", cancelId);
}

function renderFav() {
	MH.interact.getFav();
	var favUL = document.getElementById("favUL");
	var appType, imgUrl, l, appId, appName;
	var ebank_url, credit_url, personal_url, history_url;
	var l = MH.favArr.length;
	favUL.innerHTML = "";
	var content_length = l * 196;
	
	document.getElementById('Favcontent').style.width = content_length + "px";
	document.getElementById('Favcontainer').style.width = content_length + "px";
	MH.control.favPageNum = parseInt((MH.control.screenWidth() - 62) / 196);
	if (MH.control.favPageNum == 0) 
		MH.control.favPageNum = 1;
	/*根据页数显示*/
	if (l > MH.control.favPageNum) {
		/*页数大于1*/
		MH.control.totalPages = parseInt((l - 1) / MH.control.favPageNum) + 1;
		content_length = MH.control.totalPages * MH.control.favPageNum * 196 + 1;
		document.getElementById('Favcontent').style.width = content_length + "px";
		document.getElementById('Favcontainer').style.width = MH.control.favContainerWidth() + "px";
		document.getElementById('favpage').innerHTML = '<div class="pagedoton"></div>';
		for (i = 1; i < MH.control.totalPages; i++) {
			document.getElementById('favpage').innerHTML += '<div class="pagedotoff" onclick="favScroll(' + i + ');"></div>';
		}
		//显示翻页圆点
		document.getElementById('favpage').style.width = 18 * MH.control.totalPages + "px";
		document.getElementById('favpage').style.marginLeft = -9 * MH.control.totalPages + "px";
		document.getElementById('favpage').style.display = "";
	    //改变翻页圆点
	    document.getElementById('favpage').innerHTML = "";
	    for (i = 0; i < MH.control.totalPages; i++) {
	        if (MH.control.currentPage == i) {
	            document.getElementById('favpage').innerHTML += '<div class="pagedoton"></div>';
	        } else {
	            document.getElementById('favpage').innerHTML += '<div class="pagedotoff" onclick="favScroll(' + i + ');"></div>';
	        }
	    }
		if (MH.control.currentPage > 0) {
			document.getElementById('FavLeft').style.visibility = "visible";
			document.getElementById('FavRight').style.visibility = "hidden";
		} else {
			document.getElementById('FavLeft').style.visibility = "hidden";
			document.getElementById('FavRight').style.visibility = "visible";
		}
	}
	else {
		/*页数小于1*/
		document.getElementById('FavLeft').style.visibility = "hidden";
		document.getElementById('FavRight').style.visibility = "hidden";
		//隐藏翻页圆点
		document.getElementById('favpage').style.display = "none";
	}
	document.getElementById("Favcontainer").style.left = (MH.control.screenWidth() - parseInt(document.getElementById('Favcontainer').style.width)) / 2 + "px";

	if (l != 0) {
		for (i = 0; i < l; i++) {
			var tempStr = MH.favArr[i];
			var favStatus = MH.favStatusArr[i];
			var types = tempStr.slice(0, 1);
			var li = document.createElement("li");
			switch (types) {
				case "a":
					appType = apptypes[0];
					break;
				case "d":
					appType = apptypes[1];
					break;
				case "e":
					appType = apptypes[2];
					break;
			}
			var bFound = false;
			
			for (var j in appList[appType]) {
				if (appList[appType][j].id == MH.favArr[i]) {
					imgUrl = appList[appType][j].favUrl;
					appName = appList[appType][j].name;
					appId = appList[appType][j].id;
					
					ebank_url = appList[appType][j]['sublink'].ebank;
					
					ebank_txt = appList[appType][j]['sublink'].txt_ebank;
					vip_url = appList[appType][j]['sublink'].vip;
					vip_txt = appList[appType][j]['sublink'].txt_vip;
					
					bFound = true;
				}
			}	
			if (!bFound) 
				continue;
			var strHTML = "";
			if (favStatus < 200) {
				strHTML = '<div class="favitem"><div class="textFav" id="pro_' + appId + '">';
				if (favStatus < 100) {
					strHTML += "正在下载";
				}
				else {
					strHTML += "正在安装";
				}
				strHTML += '</div>';
				strHTML += '<div class="favlogo" style="background-image:url(' + imgUrl + ');">' + '<div class="prow">';
				strHTML += '<div class="procCover" id="shadow_' + appId + '"><b class="rtop"><b class="r1"></b><b class="r2"></b><b class="r3"></b><b class="r4"></b></b><table height="132px"><tr><td><br></td></tr></table><b class="rbottom"><b class="r4"></b><b class="r3"></b><b class="r2"></b><b class="r1"></b></b></div></div>';
				strHTML += '<div class="proc" id="status_' + appId + '"><div class="nn" id="pr_' + appId + '"></div></div>';
			} else {
				strHTML = '<span class="delFav" onclick = delFavAction("' + appId + '","' + appId + '");></span>';				
				strHTML += '<div class="favitem">';
				strHTML += '<div class="textFav" id="pro_' + appId + '"></div>';
				strHTML += '<div id="usb_'+appId+'" class="procUsb"><div class="nnn" id="usbPr_' + appId + '"></div></div>';
				strHTML += '<div class="favlogo" style="background-image:url(' + imgUrl + ');">';
				strHTML += '<dl class="itemoption" style="display:none">';
				strHTML += '<dt id="drop_' + appId + '" class="dt" onmouseover="javascript:changeCss(\'drop_' + appId + '\',\'over\');" onmousedown="javascript:changeCss(\'drop_' + appId + '\',\'down\');" onmouseup="javascript:changeCss(\'drop_' + appId + '\',\'release\');" onmouseout="javascript:changeCss(\'drop_' + appId + '\',\'out\');">' + appName + '</dt>' + "<dd><a href=javascript:MH.control.openLink('url','" + appId + "')><span>首&nbsp;&nbsp;页</span></a></dd>";
				if (ebank_url == undefined) {
					strHTML += '<dd><a href="javascript:;"></a></dd>';
				}
				else {
					if (favStatus < 200) {
						strHTML += "<dd><a href=javascript:;><span>" + ebank_txt + "</span></a></dd>";
					}
					else {
						strHTML += "<dd><a href=javascript:MH.control.openLink('ebank','" + appId + "')><span>" + ebank_txt + "</span></a></dd>";
					}
				}
				
				if (vip_url == undefined) {
					strHTML += '<dd><a href="javascript:;"></a></dd>';
				}
				else {
					if (favStatus < 200) {
						strHTML += "<dd><a href='javascript:;'></dd>";
					}
					else {
						strHTML += "<dd><a href=javascript:MH.control.openLink('vip','" + appId + "')><span>" + vip_txt + "</span></a></dd>";
					}
				}
			}
			strHTML += '<dd class="laone"><a href="javascript:;"> </a></dd>' + '</dl>' + '</div></div>';
			li.innerHTML = strHTML;
			li.id = "li_" + appId;
			//添加禁止拖动的效果
			if (favStatus < 200) {
				MH.dom.addClass(li, 'downloading');
			} else {
				$('#favUL').sortable('option', 'handle', 'dt');
			}	
			
			//添加drop
			li['onmouseover'] = (function(liEl) {
				return function(e) {
					var e = window.event ? window.event : e;
					var fromEl = e.srcElement ? e.srcElement : e.target;
					var toEl = e.toElement ? e.toElement : e.relatedTarget;
					var target = liEl.getElementsByTagName("dl")[0];
					var _para;
					liEl.className = "hvfav";
					if (MH.control.checkType(target)) {
						return;
					}
					if (liEl == fromEl && !MH.dom.isChild(toEl, liEl) || MH.dom.isChild(fromEl, liEl)) {
						showEnt(target, _para = {
							t: 0,
							begin: 30,
							change: 112,
							duration: 50
						});
					}
				}
			}) (li);
			var method = (window.event) ? 'onmouseleave' : 'onmouseout';
			li['onmouseout'] = (function(liEl) {
				return function(e) {
					var e = window.event ? window.event : e;
					var fromEl = e.srcElement ? e.srcElement : e.target;
					var toEl = e.toElement ? e.toElement : e.relatedTarget;
					var target = liEl.getElementsByTagName("dl")[0];
					var _para;
					if (toEl != liEl && !MH.dom.isChild(toEl, liEl) || fromEl.tagName.toLowerCase() == 'a' && !(toEl)) {
						liEl.className = "";
						hideEnt(target, _para = {
							t: 0,
							begin: 100,
							change: -100,
							duration: 50
						});
					}
					else 
						if (!MH.dom.isChild(toEl, liEl) && !MH.dom.isChild(fromEl, liEl) || !toEl) {
							return;
						}
				}
			}) (li);
			favUL.appendChild(li);
			if (favStatus <= 100) {
				var t = '#pr_' + appId;
				$(t).width(favStatus);
			}
		}
	} else {
		displayAppNav();
	}
}

/**下载参数方法
 * @param appId
 * @param spro
 * @param param3 文字
 * @param param4 状态   
 */
function setDownloadStatus(appId, spro, param3, param4) {
	if (param4 == 0) {
		//开始下载
		var t = '#pr_' + appId;
		var status = '#status_' + appId;
        $(t).width(spro);
        var divTextID = "#pro_" + appId;
        if (spro < 100) {
            $(divTextID).empty()
            $(divTextID).append(param3);
			$(status).show();
        }
        if (100 <= spro < 200) {
            $(divTextID).empty()
            $(divTextID).append(param3);
			$(status).show();
        }
        if (spro == 200){
            $(divTextID).empty();
			setTimeout(function() {
		        var shadow = "#shadow_" + appId;
		        $(shadow).hide();
				$(status).hide();
				renderFav();
	    	}, 100);
        }	
	} else {
		var usb = "#usb_" + appId;
		var t = '#usbPr_' + appId;
		$(usb).show();
		var divTextID = "#pro_" + appId;
		
		if (spro < 100) {
			$(divTextID).empty();
            $(divTextID).append(param3);
			$(usb).show();
			$(t).width(spro);
        }
        if (100 <= spro < 200) {
            $(divTextID).empty();
            $(divTextID).append(param3);
			$(usb).show();
			$(status).show();
        }
        if (spro == 200) {
            $(divTextID).empty();
			setTimeout(function() {
        		$(usb).hide();
				renderFav();
    		}, 100);
        }
	}
}

/** 当fav区为空时，显示引导标志
 */
function displayAppNav(){
	var content_length = 196;
	document.getElementById('Favcontent').style.width = content_length + "px";
	document.getElementById('Favcontainer').style.width = content_length + "px";
	document.getElementById("Favcontainer").style.left = (MH.control.screenWidth() - parseInt(document.getElementById('Favcontainer').style.width)) / 2 + "px";
	var favUL = document.getElementById("favUL");
	var li = document.createElement("li");
	var strHTML = '<div class="favitem" id="favitem" onclick="javascript:appDisplay()"><div class="favNav" id="favNav"></div></div>';
	li.innerHTML = strHTML;
	favUL.appendChild(li);
	document.getElementById("favNav").style.backgroundImage = "url(images/cross.gif)";
	document.getElementById("favitem").style.cursor = "pointer";
}

function appDisplay(){
    changePic(1);
    document.getElementById("app_box").style.display = "";
    MH.control.appViewResize();
}

function clone(myObj){
    if (typeof(myObj) != 'object') 
        return myObj;
    if (myObj == null) 
        return myObj;
    var myNewObj = new Object();
    for (var i in myObj) {
        myNewObj[i] = clone(myObj[i]);
    }
    return myNewObj;
}

function MergeRecursive(obj1, obj2){
    var destObj = clone(obj1);
    for (var p in obj2) {
        try {
            if (obj2[p].constructor == Object) {
                destObj[p] = MergeRecursive(destObj[p], obj2[p]);
            }
            else {
                destObj[p] = obj2[p];
            }
        } catch (e) {
            destObj[p] = obj2[p];
        }
    }
    return destObj;
}

function shiftTab(target){
    var ul = document.getElementById("bank_tabs_title");
    var lis = ul.getElementsByTagName("li");
    var lilength = lis.length;
    
    var ori_index = 0;
    var tl = target.length;
    for (var i = 0; i < lilength; i++) {
        lis[i].setAttribute("apptype", apptypes[i]);
        var apptype = lis[i].getAttribute("apptype");
        if (apptype == target.substring(1, tl)) {
            MH.dom.addClass(lis[i], "click");
            if (apptype == "all") {
                currentAppArray = MergeRecursive(appList["banks"], appList["payments"]);
                currentAppArray = MergeRecursive(currentAppArray, appList["securities"]);
                currentAppArray = MergeRecursive(currentAppArray, appList["insurances"]);
                currentAppArray = MergeRecursive(currentAppArray, appList["funds"]);
                currentAppArray = MergeRecursive(currentAppArray, appList["shopping"]);
            }
            else {
                currentAppArray = appList[apptype];
            }
            handle(currentAppArray);
            ori_index = i;
        }
        lis[i].onclick = (function(n){
            return function(){
                if (lis[n].className == "cur") {
                    return false;
                }
                else {
                    MH.dom.removeClass(lis[ori_index], "click");
                    MH.dom.addClass(lis[n], "click");
                    selector.value = "";
                    ori_index = n;
                    selector.onkeyup = function(){
                        return findName(selector.value, apptypes[n]);
                    };
                    if (n == 0) {
                        //添加
                        currentAppArray = appList["banks"];
                        /*0711，历史版本修改
                        currentAppArray = MergeRecursive(appList["banks"], appList["payments"]);
                        currentAppArray = MergeRecursive(currentAppArray, appList["securities"]);
                        currentAppArray = MergeRecursive(currentAppArray, appList["insurances"]);
                        currentAppArray = MergeRecursive(currentAppArray, appList["funds"]);
						currentAppArray = MergeRecursive(currentAppArray, appList["shopping"]);
						*/
                    }
                    else {
                        currentAppArray = appList[lis[n].getAttribute("apptype")];
                    }
                    MH.control.currentAppPage = 0;
                    MH.dom.$("appContainer").scrollLeft = 0;
                    
                    handle(currentAppArray);
                    window.location.hash = "#" + apptypes[n];
                }
            }
        })(i);
    }
}

//取得长度
function getPropertyCount(o){
    var n, count = 0;
    for (n in o) {
        if (o.hasOwnProperty(n)) {
            count++;
        }
    }
    return count;
}

/**改写生成方法
 */
function handle(jsonArray){
    MH.interact.getFav();
    
    //取得app总数
    appLength = getPropertyCount(jsonArray);
    var l = appLength;
	var content_length = appLength * MH.control.appLiWeight;
	document.getElementById('appContent').style.width = content_length + "px";
	MH.control.appPageNum = parseInt((MH.control.screenWidth() - 62) / MH.control.appLiWeight);
	document.getElementById('appContainer').style.width = (MH.control.appPageNum * MH.control.appLiWeight) + "px";
	
	var bordermargin = parseInt(((MH.control.screenWidth() - 62) - MH.control.appPageNum * MH.control.appLiWeight) / 2);
	
	document.getElementById('appContainer').style.margin = "0 " + bordermargin + "px 0 " + bordermargin + "px";
	document.getElementById('appContainer').style.marginLeft = -parseInt((MH.control.appPageNum * MH.control.appLiWeight) / 2) + "px";
	
	if (MH.control.appPageNum == 0) 
	MH.control.appPageNum = 1;
	
	MH.control.currentAppPage = 0;
	document.getElementById('appContent').style.height = "216px";
	
	/*根据页数显示*/
	if (l > (MH.control.appPageNum * 3)) {
	    if (appLength % (MH.control.appPageNum * 3) > 0) {
	        MH.control.totalAppPages = parseInt(l / (MH.control.appPageNum * 3)) + 1;
	    }
	    else {
	        MH.control.totalAppPages = parseInt(l / (MH.control.appPageNum * 3));
	    }
	    content_length = MH.control.totalAppPages * MH.control.appPageNum * MH.control.appLiWeight + 1;
	    
	    document.getElementById('appContent').style.width = content_length + "px";
	    
	    document.getElementById('appLeft').style.visibility = "hidden";
	    document.getElementById('appRight').style.visibility = "visible";
	    document.getElementById('appPage').innerHTML = '<div class="apppagedoton"></div>';
	    
	    for (i = 1; i < MH.control.totalAppPages; i++) {
	        document.getElementById('appPage').innerHTML += '<div class="apppagedotoff"  onclick="appScroll(' + i + ');"></div>';
	    }
	    
	    document.getElementById('appPage').style.width = 18 * MH.control.totalAppPages + "px";
	    document.getElementById('appPage').style.marginLeft = -9 * MH.control.totalAppPages + "px";
	    document.getElementById('appPage').style.display = "";
	} else {
	    document.getElementById('appContainer').style.textAlign = "left";
	    MH.control.totalAppPages = 1;
	    document.getElementById('appLeft').style.visibility = "hidden";
	    document.getElementById('appRight').style.visibility = "hidden";
	    document.getElementById('appPage').style.display = "none";
	}
	
	//原始方法
	var list_1 = document.createElement("ul");
	var list_2 = document.createElement("ul");
	var list_3 = document.createElement("ul");
	
	var setAttrToElem = function(elem, elemIndex) {
	    elem.setAttribute("apptype", jsonArray[elemIndex].apptype);
	    elem.setAttribute("id", jsonArray[elemIndex].id);
	    elem.setAttribute("arrayposition", jsonArray[elemIndex].position);
	    elem.setAttribute("collected", jsonArray[elemIndex].collected);
	};
	showlist_1.innerHTML = "";
	showlist_1.appendChild(list_1);
	showlist_1.appendChild(list_2);
	showlist_1.appendChild(list_3);
	
	//开始循环写入
	var start = 0;
	for (var o in jsonArray) {
	    var li = document.createElement("li");
	    var tid = jsonArray[o].id;
	    li.id = "li_" + tid;
	    var l = MH.favArr.length;
	    if (l > 0) {
	        for (n in MH.favArr) {
	            if (tid == MH.favArr[n]) {
	                li.className = 'hover';
	            }
	        }
	    }
	    var content = "";
	    content += "<span id='1_" + tid + "' class='existFav'></span>" + "<img src='" + jsonArray[o].imageUrl + "'/>";
	    content += "<span id='2_" + tid + "' class='graybg' style='display:none;'></span>";
	    content += "<span id='3_" + tid + "' style='display:none;width:36px;height:36px;top:4px;left:54px;'></span>";
	    content += "<img id='4_" + tid + "' class='bigstarimg' src='images/del.png' style='display:none;width:36px;height:36px;top:4px;left:54px;' />";
	    
	    li.innerHTML = content;
	    li.onclick = (function(that, id) {
	        return function() {
	            if (that.className != "hover") {
	                addFavAction(that, id);
	                //增加了替换图片的操作
	                $("#3_"+id).removeClass().addClass("bigstar2").show();
	                if (MH.control.IEVersion() > 6) {
	                    $("#4_"+id).attr("src", "images/del.png").show();
	                }	                
	            } else {
	                delFavAction(that, id);
	                //增加了替换图片的操作
	                $("#3_"+id).removeClass().addClass("bigstar1").show();
	                if (MH.control.IEVersion() > 6) {
	                    $("#4_"+id).attr("src", "images/add.png").show();
	                }
	            }
	        }
	    })(li, tid);
	    
	    li.onmouseover = (function(that, id){
	        return function(){
	            var a = "#2_" + id;
	            var b = "#3_" + id;
	            var c = "#4_" + id;
	            $(a).show();
	            if (that.className == "hover") {
	                $(b).removeClass().addClass("bigstar2").show();
	                if (MH.control.IEVersion() > 6) {
	                    $(c).attr("src", "images/del.png").show();
	                }
				} else {
					$(b).removeClass().addClass("bigstar1").show();
	                if (MH.control.IEVersion() > 6) {
	                    $(c).attr("src", "images/add.png").show();
	                }
	            }
	        }
	    })(li, tid);

	    li.onmouseout = (function(that, id){
	        return function(){
	            var a = "#2_" + id;
	            var b = "#3_" + id;
	            var c = "#4_" + id;
	            if (that.className != "hover") {
	                $(a).hide();
	                $(b).hide();
	                if (MH.control.IEVersion() > 6) {
	                    $(c).hide();
	                }
	            } else {
	                $(a).hide();
	                $(b).hide();
	                if (MH.control.IEVersion() > 6) {
	                    $(c).hide();
	                }
	            }
	        }
	    })(li, tid);

	    setAttrToElem(li, o);
	    if ((parseInt((start) / MH.control.appPageNum) + 3) % 3 == 0 && 0 <= (start) % MH.control.appPageNum <= MH.control.appPageNum) {
	        list_1.appendChild(li);
	    }
	    if ((parseInt((start) / MH.control.appPageNum) + 3) % 3 == 1 && 0 <= (start) % MH.control.appPageNum <= MH.control.appPageNum) {
	        list_2.appendChild(li);
	    }
	    if ((parseInt((start) / MH.control.appPageNum) + 3) % 3 == 2 && 0 <= (start) % MH.control.appPageNum <= MH.control.appPageNum) {
	        list_3.appendChild(li);
	    }
	    start++;
	}
}

function ShowSlowly(appId) {
	renderFav();
	favZoomIn(appId);
}

function addFavAction(oNode, appId) {
    var cls = oNode.className;
    if (cls != "hover") {
        oNode.className = "hover";
        oNode.getElementsByTagName('span')[0].className = "existFav";
        MH.interact.saveFav(appId);
    	setTimeout("ShowSlowly('"+ appId +"');", 100);
    }
}

function delFavAction(o, appId) {
	MH.interact.deleteFav(appId);
	MH.interact.getFav();
	favZoomOut(appId);
	document.getElementById(appId).className = "";
}

function searchIndex(name, type){
    var resultArray = [];
    var targetArray = [];
    var tempArray = [];
    if (type == "all") {
        for (i in appList) {
            targetArray = appList[i].concat(targetArray);
        }
    }
    else {
        targetArray = appList[type];
    }
    var _stringLength = name.length;
    for (var i in targetArray) {
        var indexArray = targetArray[i].index.split(",");
        var indexLength = indexArray.length;
        for (j = 0; j < indexLength; j++) {
            if (name === indexArray[j].slice(0, _stringLength)) {
                resultArray.push(targetArray[i]);
                break;
            }
        }
    }
    return resultArray;
}

/** 模块名称：财金资讯
 * 模块功能：获得股指信息
 * 显示模式：固定显示
 * 显示数量：九条
 * 刷新频率：六十秒
 */ 
function renderFinance() {
	try {
		wwwhost = window.external.GetHostName("web");
		apphost = wwwhost.replace("www", "app");
	} catch (e) {
		apphost = "";
	}
	var content = "";
	//要求jQuery支持跨域访问
	jQuery.support.cors = true;

	$.ajax({
		url: apphost + 'fininfo/getinfo.php?debug=1',
		type: 'GET',
		dataType: 'xml',
		cache: false,
		timeout: 3000,
		error: function(xml, textStatus, errorThrown) {
			//加入事件
			content = "&nbsp;&nbsp;数据读取错误，请手动<a href='javascript:renderFinance()'>刷新</a>"
			$("#dFinance").html(content);
		},
		success: function(xml) {
			var flag = 0;
			var tdclass;
			$(xml).find("fininfo").each(function(i){
				if($(this).children("name").text()!="原油"){
					if (flag++ % 2 == 1) {
						tdclass = "tdrow1";
					}
					else {
						tdclass = "tdrow";
					}
					content += '<ul class=' + tdclass + '>';
					content += '<li class="lTDRowFirst">&nbsp;' + changeFinanceName($(this).children("name").text()) + '</li>';
					content += '<li>' + $(this).children("point").text() + '</li>';
					if ($(this).children("uad").text() > 0) {
						content += '<li><img src="images/shang.gif" width="10" height="10" alt="" />&nbsp;' + $(this).children("uad").text() + '</li>';
					}
					else {
						content += '<li><img src="images/xia.gif" width="10" height="10" alt="" />&nbsp;' + Math.abs($(this).children("uad").text()) + '</li>';
					}
					content += '</ul>';	
				}
			});
			$("#dFinance").html(content);
		},
		complete:function() {
		   setTimeout("renderFinance()", 60000); //定时器
		}
	});
}

function changeFinanceName(strName){
	var str="";
	switch (strName) {
		case "沪指":
			str = "上证综指";
			break;
		case "深指":
			str = "深证成指";
			break;
		case "恒数":
			str = "恒生指数";
			break;
		case "今日银价":
			str = "银价（美元/盎司）";
			break;
		case "今日金价":
			str = "金价（美元/盎司）";
			break;
		case "外汇":
			str = "人民币/美元中间价";
			break;
		default:
			str = strName;
	}
	return str;
}

/** 模块名称：理财资讯抢先道
 * 模块功能：获得理财产品信息
 * 显示模式：随机显示
 * 显示数量：十条
 * 刷新频率：十秒
 */
var allData = new Array();
var currentData = new Array();
    
function renderAd(){
	try {
		wwwhost = window.external.GetHostName("web");
	} catch (e) {
		wwwhost = "";
	}
	//要求jQuery支持跨域访问
	jQuery.support.cors = true;

	var content = "";
	var count = 0;
	var styleTab = "";
	var allPage = 0;
	var curPage = 0;
	var pageNumber = 3;
	$.ajax({
		url: wwwhost + 'banksite/fincontent.xml',
		type: 'GET',
		dataType: 'xml',
		cache:false,
		timeout: 10000,
		error: function(xml){
			//加入事件
			content = "数据读取错误，请手动<a href='javascript:renderAd()'>刷新</a>"
			$("#finantechad_ul").html(content);
		},
		success: function(xml){
			$(xml).find("finprod").each(function(i){
				var tempData = [];
				tempData.push($(this).children("id").text());
				tempData.push(trimStr($(this).children("bank").text()));
				tempData.push($(this).children("desc").text());
				tempData.push($(this).children("startdate").text());
				tempData.push($(this).children("enddate").text());
				tempData.push($(this).children("interest").text());
				tempData.push($(this).children("duration").text());
				tempData.push(xorDecoding($(this).children("url").text()));
				tempData.push($(this).children("currency").text());
				tempData.push($(this).children("descInfo").text());
				allData.push(tempData);
			});
			renderAdData();
		},
		complete: function() {
		}
	});
}

function renderAdData() {
	var content = "";
	for (var i=0; i<allData.length; i++) {
		content += '<li id=xmlData_' + allData[i][0] + '><img src="images/dian.gif" alt="" width="4" height="4" style="padding-right:8px;"/>';
		var url = allData[i][7];
		var test = "http://www.icbc.com.cn/icbc/";
		if (url.replace(/\s*$/, "") == test ) {
			content += '<a onclick="javascript:if(confirm(\'查看该理财产品详情需要登录网银\')) window.open(\''+url+'\')">';	
		} else {
			content += '<a onclick="javascript:window.open(\''+url+'\')">';	
		}
		content += allData[i][1] + allData[i][2].replace(/\(推广\)/, "<font color='#ED96A7'>$&</font>") + '，';
		content += '年化收益率<font color="red">'+allData[i][5]+'%</font>，';
		content += '理财期限'+allData[i][6]+'天，';
		content += '认购截止日'+allData[i][4];
		content += '</a></li>';
	}
	$("#finantechad_ul").html(content);
	createDefaultBank();
	getUserChoice();
	getMySelectData();
}

/*
 0,显示+;
 1,显示-;                                        
 */
function changePic(status){
    var contentStr = "";
    var disPic = "images/aplus.png";
    if (status == 1) {
        disPic = "images/aplus_.png";
    }
    contentStr = '<img src="' + disPic + '" style="padding-top:2px;"/>';
    
    MH.dom.$('aplusspan').innerHTML = "";
    MH.dom.$('aplusspan').innerHTML = contentStr;
}

/**执行jquery的sortable
 */
var prevPagesOrder = "";
var curFavArray = "";

function sortableFav(){
    $("#favUL").sortable({
        revert: true,
        scroll: true,
        //cancel: '.downloading',
        axis: 'x',
        start: function(event, ui){
            var textId = "#pro_" + $(ui.item).attr("id").substring(3, $(ui.item).attr("id").length);
            $(textId).hide(300);
        },
        stop: function(event, ui){
            var textId = "#pro_" + $(ui.item).attr("id").substring(3, $(ui.item).attr("id").length);
            $(textId).show(300);
        },
        
        update: function(event, ui){
            var items = $('#favUL').sortable('option', 'items');
			var cancel = $('.selector').sortable('option', 'cancel');
		    var xx = $("#favUL").sortable("serialize");
            var curFavArray = $("#favUL").sortable("toArray");
            
            var l = curFavArray.length;
            var end = 0;
            var start = 0;
            
            for (var i = 0; i < l; i++) {
                if ($(ui.item).attr("id") == curFavArray[i]) {
                    end = i + 1;
                    break;
                }
            }
            for (var i = 0; i < l; i++) {
                if ($(ui.item).attr("id").substring(3, $(ui.item).attr("id").length) == MH.favArr[i]) {
                    start = i + 1;
                    break;
                }
            }
            try {
                window.external.ChangeOrder($(ui.item).attr("id").substring(3, $(ui.item).attr("id").length), end, start);
            } catch (e) {
            }
        }
    });
}

//C++调用方法
function favAction(appId){
	var liId = "#li_" + appId;
	if ($(liId).className != "hover") {
	    $(liId).className = "hover";
	    $("#1_" + appId).removeClass().addClass("existFav");
	    MH.interact.saveFav(appId);
		renderFav();
	    favZoomIn(appId);
	    handle(currentAppArray);
	}
}

function changeCss(div,status){
	$('#' + div).removeClass();
	if (status == "over") {
		$('#' + div).addClass("dt1");
	}
	if (status == "down") {
		$('#' + div).addClass("dt2");
	}
	if (status == "release") {
		$('#' + div).addClass("dt");
	}
	if (status == "out") {
		$('#' + div).addClass("dt");
	}
}

function setAlarm(){
	MH.control.checkAlarm();
}

function createXml(str){ 
	if (document.all) { 
		var xmlDom=new ActiveXObject("Microsoft.XMLDOM") 
		xmlDom.loadXML(str) 
		return xmlDom 
	} else {
		return new DOMParser().parseFromString(str, "text/xml")
	}
}

/** base64解码
 */
var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

function decode64(input) {
  var output = "";
  var chr1, chr2, chr3 = "";
  var enc1, enc2, enc3, enc4 = "";
  var i = 0;
      
      if(input.length%4!=0)
      {
                return "";
      }
  var base64test = /[^A-Za-z0-9\+\/\=]/g;
      if (base64test.exec(input))
      {
                return "";
      }

  do {
     enc1 = keyStr.indexOf(input.charAt(i++));
     enc2 = keyStr.indexOf(input.charAt(i++));
     enc3 = keyStr.indexOf(input.charAt(i++));
     enc4 = keyStr.indexOf(input.charAt(i++));

     chr1 = (enc1 << 2) | (enc2 >> 4);
     chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
     chr3 = ((enc3 & 3) << 6) | enc4;
             
             output = output + String.fromCharCode(chr1);

     if (enc3 != 64) {
                    output+=String.fromCharCode(chr2);
     }
     if (enc4 != 64) {
                    output+=String.fromCharCode(chr3);
     }

     chr1 = chr2 = chr3 = "";
     enc1 = enc2 = enc3 = enc4 = "";

  } while (i < input.length);
  return output;
}

function xorDecoding(_str) {
   return decode64(_str);
}

function debug(string){
	try{
		window.external.WriteLog(string+"\n");
	}catch(e){
		
	}
}

//移除空格
function trimStr(str) { 
	var re = /\s*(\S[^\0]*\S)\s*/; 
	re.exec(str); 
	return RegExp.$1; 
}

/* 
 * 以下为理财产品的相关代码，性能可能会有问题
 */

function getUserChoice(){
	try{
		result = JSON.parse(window.external.QuerySQL("SELECT interestchoice AS c1, durationchoice AS c2, currencychoice AS c3, bankchoice AS c4 FROM tbProductChoice"));
	} catch(e){
		result = [];
	}	
	for(var a = 1; a < defaultInterest.length;a++){
		defaultInterest[a].splice(3,1,0);
	}
	if(result[0].c1!=""){
		var c1array =result[0].c1.split("|");
		for(var i=0;i<c1array.length;i++){
			defaultInterest[c1array[i]].splice(3,1,1);
		}	
	}
	for(var a = 1; a < defaultDuration.length;a++){
		defaultDuration[a].splice(3,1,0);
	}
	if(result[0].c2!=""){
		var c2array =result[0].c2.split("|");
		for(var i=0;i<c2array.length;i++){
			defaultDuration[c2array[i]].splice(3,1,1); 
		}	
	}
	for(var a = 1; a < defaultCurrency.length;a++){
		defaultCurrency[a].splice(2,1,0);
	}
	if(result[0].c3!=""){
		var c3array =result[0].c3.split("|");
		for(var i=0;i<c3array.length;i++){
			defaultCurrency[c3array[i]].splice(2,1,1); 
		}
	}
	for(var a = 1; a < defaultBank.length;a++){
		defaultBank[a].splice(2,1,0);
	}
	if(result[0].c4!=""){
		var c4array =result[0].c4.split("|");
		for(var i=0;i<c4array.length;i++){
			defaultBank[c4array[i]].splice(2,1,1); 
		}
	}
}

var defaultInterest=[
	["预期收益率",0,0,0],
	["3%以下",0,3,0],
	["3%到5%",3,5,0],
	["5%到10%",5,10,0],
	["10%以上",10,100,0]
];

/*
 * param1 名称；
 * param2，3 区间
 * param4 是否被选择 0 未选择,1已选择
 */
var defaultDuration=[
	["理财期限",0,0,0],
	["1月内",1,30,0],
	["1-3个月",30,90,0],
	["3-6个月",90,180,0],
	["6-12个月",180,365,0],
	["1-2年",365,730,0],
	["2年以上",730,10000,0]
];

/*
 * param1 名称；
 * param2，3 区间
 * param4 是否被选择 0 未选择,1已选择
 */
var defaultCurrency=[
	["币种","test",0],
	["人民币","人民币",0],
	["其他币种","其他币种",0]
];

/*
 * param1 名称；
 * param2 区间
 * param3 是否被选择 0 未选择,1已选择
 */
var defaultBank= [["银行","",0]];

function createDefaultBank() {
	try {
		result = JSON.parse(window.external.QuerySQL("SELECT name AS bankName, id FROM sysBank WHERE classId=0", "SysDB"));
	} catch (e) {
		result = [];
	}
	$.each(result, function(i,n) {
		var temp=new Array();
		if(n.bankName=="光大银行") temp.push("中国光大银行"); 
		else if(n.bankName=="民生银行") temp.push("中国民生银行");
		else temp.push(n.bankName);
		temp.push(n.id);
	  	temp.push(0);
	  	defaultBank.push(temp);
	});
}

function getMySelectData() {
	//将四个集合分开处理
	arrayLength = allData.length;
	//获取条件数组
	var interestCondition = new Array();
	for(var i=1;i<defaultInterest.length;i++){
		if(defaultInterest[i][3]==1){
			//选择了这个条件
			var tempLength=interestCondition.length; 
			if(interestCondition[tempLength-1]==defaultInterest[i][1]){
				//删除最后一个
				interestCondition.pop();
				interestCondition.push(defaultInterest[i][2]);	
			} else {
				interestCondition.push(defaultInterest[i][1]);
				interestCondition.push(defaultInterest[i][2]);
			}
		}
	}
	var durationCondition = new Array();
	for(var i=1;i<defaultDuration.length;i++){
		if(defaultDuration[i][3]==1){
			//选择了这个条件
			var tempLength=durationCondition.length; 
			if(durationCondition[tempLength-1]==defaultDuration[i][1]){
				//删除最后一个
				durationCondition.pop();
				durationCondition.push(defaultDuration[i][2]);	
			} else {
				durationCondition.push(defaultDuration[i][1]);
				durationCondition.push(defaultDuration[i][2]);
			}
		}
	}
	var currencyCondition = new Array();
	for(var i=1;i<defaultCurrency.length;i++){
		if(defaultCurrency[i][2]==1){
			//选择了这个条件
			currencyCondition.push(defaultCurrency[i][1]);
		}
	}
	var bankCondition = new Array();
	for(var i=1;i<defaultBank.length;i++){
		if(defaultBank[i][2]==1){
			//选择了这个条件
			bankCondition.push(defaultBank[i][0]);
		}
	}

	//生成年化收益率数组
	arrayInterest = new Array();
	for(var i=0;i<allData.length;i++){
		for(var j=0;j<interestCondition.length;){
			if(interestCondition[j]<=allData[i][5]&&allData[i][5]<interestCondition[j+1]){
				//将ID存入，终止循环
				arrayInterest.push(allData[i][0]);
				break;
			} else {
				j=j+2;
			}
		}	
	}
	
	//生成投资期限数组
	arrayDuration = new Array();
	for(var i=0;i<allData.length;i++){
		for(var j=0;j<durationCondition.length;){
			if(durationCondition[j]<=allData[i][6]&&allData[i][6]<durationCondition[j+1]){
				//将ID存入，终止循环
				arrayDuration.push(allData[i][0]);
				break;
			} else {
				j=j+2;
			}
		}	
	}
	
	//生成币种数组
	arrayCurrency = new Array();
	currencyTempLength=currencyCondition.length;
	isRMB=false;
	if(currencyTempLength==2){
		for(var i=0;i<allData.length;i++){
			arrayCurrency.push(allData[i][0]);
		}
	} else if(currencyTempLength==1){
		if(currencyCondition[0]==defaultCurrency[1][0]) isRMB = true;
		for(var i=0;i<allData.length;i++){
			if(isRMB){
				if(allData[i][8] == defaultCurrency[1][0]) arrayCurrency.push(allData[i][0]);
			} else {
				if(allData[i][8] != defaultCurrency[1][0]) arrayCurrency.push(allData[i][0]);
			}
		}
	}
	
	//生成银行数组
	arrayBank = new Array();
	for (var i=0;i<allData.length;i++) {
		for(var j=0;j<bankCondition.length;j++){
			if(bankCondition[j]==allData[i][1] ){
				//将ID存入，终止循环
				arrayBank.push(allData[i][0]);
				break;
			}
		}	
	}
	if(interestCondition.length == 0 || currencyCondition.length == 0 || durationCondition.length == 0 || bankCondition.length == 0 ){
		//有条件为不选择
		var newData = new Array();
		renderNewData(newData);
	} else {
		var nowConditionArray = new Array();
		var newData = new Array();
		if(interestCondition.length>0){
			nowConditionArray.push(arrayInterest);
			//合并数组
			newData = arrayInterest.sort(sortNumber);
		} 
		if(durationCondition.length>0){
			nowConditionArray.push(arrayDuration);
			if(newData.length>0){
				//合并数组
				newData= getNewData(newData,arrayDuration.sort(sortNumber));
			}
		}
		if(currencyCondition.length>0){
			nowConditionArray.push(arrayCurrency);
			if(newData.length>0){
				//合并数组
				newData= getNewData(newData,arrayCurrency.sort(sortNumber));
			}
		}
		if(bankCondition.length>0){
			nowConditionArray.push(arrayBank);
			if(newData.length>0){
				//合并数组
				newData= getNewData(newData,arrayBank.sort(sortNumber));
			}
		}
		renderNewData(newData);	
	}
	
	if ((interestCondition[0] == 0) && (interestCondition[1] == 100) && (durationCondition[0] == 1) && (durationCondition[1] == 10000) && (currencyCondition.length == defaultCurrency.length - 1) && (bankCondition.length == defaultBank.length - 1)) {
		//未做筛选
		$("#sMoreInfo img").attr("src", "images/filter.png");
		$("span#iFilter").replaceWith('<img src="images/filter.png" id="iFilter" width="65" height="27" border="0" />');
    	fixPNG(document.getElementById("iFilter"));
	} else {
		//已做筛选
		$("#sMoreInfo img").attr("src", "images/filtered.png");
		$("span#iFilter").replaceWith('<img src="images/filtered.png" id="iFilter" width="65" height="27" border="0" />');
    	fixPNG(document.getElementById("iFilter"));
	}
}

function renderNewData(a){
	for(var i=0;i<allData.length;i++){
		var isShow = false;
		for(var j=0; j<a.length;j++){
			if(allData[i][0]==a[j]){
				isShow = true;
				break;	
			}
		}
		if(isShow){
			//此部分处理显示的样式
			$("#xmlData_"+allData[i][0]).show(); 
		} else {
			$("#xmlData_"+allData[i][0]).hide();
		}
	}
}

function getNewData(a,b){
	var c = new Array();
	var i = 0;
	var j = 0;
	
	for(i=0;i<a.length;i++){
		for(j=0;j<b.length;j++){
			if(a[i]==b[j]){
				c.push(a[i]);
				break;
			}
		}
	}
	return c;
}

function sortNumber(a, b){
	return a - b;
}

function TabActivated() {
	reloadStart = "-1";
	try {
		reloadStart = window.external.GetParameter("ReloadStart");
		window.external.SetParameter("ReloadStart", "-1");
	} catch (e) {
	} 
	if (reloadStart != "-1") {
	   window.location.reload();
	}

	var ConditionChange = -1;
	ConditionChange = window.external.GetParameter("ConditionChange");
	window.external.SetParameter("ConditionChange", "-1");
	if ((ConditionChange != undefined) && (ConditionChange != "-1")) {
		getUserChoice();
		getMySelectData();
	}
}

/** 获取饼图数据
 * @param startDate 开始日期
 * @param endDate 结束日期
 * @param during 按周还是按月
 * @param curStyle   
 */
function getXML(startDate, endDate, during, curStyle){
	var xmlStr = "";
	try {
		xmlStr = window.external.GetXMLData(startDate, endDate, during, curStyle);
	} catch (e) {
		xmlStr="";
		xmlStr += '<chart>';
			xmlStr += '<set seriesName="保险费" value="25" />';
		  	xmlStr += '<set seriesName="待报销" value="75" />';
		xmlStr += '</chart>';
		xmlStr += '<chart>';
		    xmlStr += '<set seriesName="其它收入" value="100" />';
		xmlStr += '</chart>';
		xmlStr += '<chart>';
		if (during != "month") {
		    xmlStr += '<set seriesName="支出" value="67" />';
		    xmlStr += '<set seriesName="收入" value="33" />';
		} else {
		    xmlStr += '<set seriesName="支出" value="20" />';
		    xmlStr += '<set seriesName="收入" value="80" />';
		}
		xmlStr += '</chart>';
		xmlStr += '<chart>';
		    xmlStr += '<set seriesName="保险费" value="1000.00" />';
		    xmlStr += '<set seriesName="待报销" value="3000.00" />';
		xmlStr += '</chart>';
		xmlStr += '<chart>';
		    xmlStr += '<set seriesName="其它收入" value="2000.00" />';
		xmlStr += '</chart>';
		xmlStr += '<chart>';
		    xmlStr += '<set seriesName="支出" value="4000.00" />';
		    xmlStr += '<set seriesName="收入" value="2000.00" />';
		xmlStr += '</chart>';
	}
	return xmlStr;
}

/** 从xml字符串得到xml对象
 * @param {} data 传入的xml字符串
 * @return {} xml 得到的xml对象
 */
function getXMLInstance(data) {
    var xml;
    if($.browser.msie){
        xml = new ActiveXObject("Microsoft.XMLDOM");
        xml.async = false;
        xml.loadXML(data);
    }else{
        xml = new DOMParser().parseFromString(data, "text/xml");
    }
    return xml;
}

//登录前首页左下角显示
function beforeLogin(){
$("#beforelogin").show();
$("#afterlogin").hide();
}


//登录后用sql语句计算提示频道的资产
function afterLogin(){
	var now=new Date();
	var year=now.getYear();
	var month=now.getMonth()+1;
	if(month < 10){
		month = "0" + month;
	};
	var startdate = year + "-" + month + "-01";
	var enddate = year + "-" + month + "-31";
	var getValue="0.00"; //总收入
	var outValue="0.00";   // 总支出
	var assetsValue="0.00";  // 总资产
	var debtValue="0.00";     // 总负债
	var result1 = "";
	var result2 = "";
	var result3 = "";
	var result4 = "";
	try{
		var rateResult = [];
		rateResult = JSON.parse(window.external.QuerySQL("SELECT ExchangeRate as ExchangeRate FROM datExchangeRate ORDER BY sysCurrency_id1 ASC","DataDB"));
	}
	catch(e){
	}
	rateResult[0].ExchangeRate = Number(rateResult[0].ExchangeRate);
	rateResult[1].ExchangeRate = Number(rateResult[1].ExchangeRate);
	rateResult[2].ExchangeRate = Number(rateResult[2].ExchangeRate);
	rateResult[3].ExchangeRate = Number(rateResult[3].ExchangeRate);
	rateResult[4].ExchangeRate = Number(rateResult[4].ExchangeRate);
	rateResult[5].ExchangeRate = Number(rateResult[5].ExchangeRate);
	rateResult[6].ExchangeRate = Number(rateResult[6].ExchangeRate);
	rateResult[7].ExchangeRate = Number(rateResult[7].ExchangeRate);
	rateResult[8].ExchangeRate = Number(rateResult[8].ExchangeRate);
	rateResult[9].ExchangeRate = Number(rateResult[9].ExchangeRate);
	try{
		result1 = window.external.QuerySQL("SELECT round(SUM((case d.tbcurrency_id  when 1 then t.amount/100*'" + rateResult[0].ExchangeRate + "'when 2 then t.amount/100*'" + rateResult[1].ExchangeRate + "'when 3 then t.amount/100* '" + rateResult[2].ExchangeRate + "'when 4 then t.amount/100* '" + rateResult[3].ExchangeRate + "'when 5 then t.amount/100* '" + rateResult[4].ExchangeRate + "' when 6 then t.amount/100*'" + rateResult[5].ExchangeRate + "'when 7 then t.amount/100* '" + rateResult[6].ExchangeRate + "'when 8 then t.amount/100*'" + rateResult[7].ExchangeRate + "'when 9 then t.amount/100*'" + rateResult[8].ExchangeRate + "'when 10 then t.amount/100*'" + rateResult[9].ExchangeRate + "'end ) ), 2) AS SumAmount FROM tbtransaction AS t, tbcategory2 AS c2, tbcategory1 AS c1, tbsubAccount  d WHERE t.mark=0 and t.tbcategory2_id not in (10059,10060,10067) and t.tbcategory2_id=c2.id AND c2.tbcategory1_id=c1.id and c1.type = 1  and t.TransDate >='" + startdate +  "' and t.TransDate <='" + enddate + "' and t.tbsubaccount_id= d.id");
		if(result1 != "[}]"){
			result1 = JSON.parse(window.external.QuerySQL("SELECT round(SUM((case d.tbcurrency_id  when 1 then t.amount/100*'" + rateResult[0].ExchangeRate + "'when 2 then t.amount/100*'" + rateResult[1].ExchangeRate + "'when 3 then t.amount/100* '" + rateResult[2].ExchangeRate + "'when 4 then t.amount/100* '" + rateResult[3].ExchangeRate + "'when 5 then t.amount/100* '" + rateResult[4].ExchangeRate + "' when 6 then t.amount/100*'" + rateResult[5].ExchangeRate + "'when 7 then t.amount/100* '" + rateResult[6].ExchangeRate + "'when 8 then t.amount/100*'" + rateResult[7].ExchangeRate + "'when 9 then t.amount/100*'" + rateResult[8].ExchangeRate + "'when 10 then t.amount/100*'" + rateResult[9].ExchangeRate + "'end ) ), 2) AS SumAmount FROM tbtransaction AS t, tbcategory2 AS c2, tbcategory1 AS c1, tbsubAccount  d WHERE t.mark=0 and t.tbcategory2_id not in (10059,10060,10067) and t.tbcategory2_id=c2.id AND c2.tbcategory1_id=c1.id and c1.type = 1  and t.TransDate >='" + startdate +  "' and t.TransDate <='" + enddate + "' and t.tbsubaccount_id= d.id"));
			getValue = formatnumber(Math.round((result1[0].SumAmount)*100)/100,2);
			getValue = String(getValue);
		}
		
		result2 = window.external.QuerySQL("SELECT round(SUM((case d.tbcurrency_id  when 1 then t.amount/100*'" + rateResult[0].ExchangeRate + "'when 2 then t.amount/100*'" + rateResult[1].ExchangeRate + "'when 3 then t.amount/100*'" + rateResult[2].ExchangeRate + "'when 4 then t.amount/100* '" + rateResult[3].ExchangeRate + "'when 5 then t.amount/100* '" + rateResult[4].ExchangeRate + "'when 6 then t.amount/100* '" + rateResult[5].ExchangeRate + "'when 7 then t.amount/100*'" + rateResult[6].ExchangeRate + "'when 8 then t.amount/100*'" + rateResult[7].ExchangeRate + "'when 9 then t.amount/100* '" + rateResult[8].ExchangeRate + "'when 10 then t.amount/100* '" + rateResult[9].ExchangeRate + "'end ) ), 2) AS SumAmount FROM tbtransaction AS t, tbcategory2 AS c2, tbcategory1 AS c1, tbsubAccount  d WHERE t.mark=0 and t.tbcategory2_id not in (10059,10060,10067) and t.tbcategory2_id=c2.id AND c2.tbcategory1_id=c1.id and c1.type = 0  and t.TransDate >='" + startdate +  "' and t.TransDate <='" + enddate + "' and t.tbsubaccount_id= d.id");
		if(result2 != "[}]"){
			result2 = JSON.parse(window.external.QuerySQL("SELECT round(SUM((case d.tbcurrency_id  when 1 then t.amount/100*'" + rateResult[0].ExchangeRate + "'when 2 then t.amount/100*'" + rateResult[1].ExchangeRate + "'when 3 then t.amount/100*'" + rateResult[2].ExchangeRate + "'when 4 then t.amount/100* '" + rateResult[3].ExchangeRate + "'when 5 then t.amount/100* '" + rateResult[4].ExchangeRate + "'when 6 then t.amount/100* '" + rateResult[5].ExchangeRate + "'when 7 then t.amount/100*'" + rateResult[6].ExchangeRate + "'when 8 then t.amount/100*'" + rateResult[7].ExchangeRate + "'when 9 then t.amount/100* '" + rateResult[8].ExchangeRate + "'when 10 then t.amount/100* '" + rateResult[9].ExchangeRate + "'end ) ), 2) AS SumAmount FROM tbtransaction AS t, tbcategory2 AS c2, tbcategory1 AS c1, tbsubAccount  d WHERE t.mark=0 and t.tbcategory2_id not in (10059,10060,10067) and t.tbcategory2_id=c2.id AND c2.tbcategory1_id=c1.id and c1.type = 0  and t.TransDate >='" + startdate +  "' and t.TransDate <='" + enddate + "' and t.tbsubaccount_id= d.id"));
			outValue = formatnumber(Math.round((result2[0].SumAmount)*100)/100,2);
			outValue = String(outValue);
		} 

        result3 = window.external.QuerySQL("select round(SUM((case a.tbcurrency_id  when 1 then a.Balance/100*'" + rateResult[0].ExchangeRate + "'when 2 then a.Balance/100*'" + rateResult[1].ExchangeRate + "' when 3 then a.Balance/100* '" + rateResult[2].ExchangeRate + "'when 4 then a.Balance/100* '" + rateResult[3].ExchangeRate + "'when 5 then a.Balance/100*'" + rateResult[4].ExchangeRate + "'when 6 then a.Balance/100*'" + rateResult[5].ExchangeRate + "'when 7 then a.Balance/100* '" + rateResult[6].ExchangeRate + "'when 8 then a.Balance/100* '" + rateResult[7].ExchangeRate + "'when 9 then a.Balance/100*'" + rateResult[8].ExchangeRate + "'when 10 then a.Balance/100*'" + rateResult[9].ExchangeRate + "'end )), 2) as SumAmount from tbsubAccount as a where a.mark = 0 and a.Balance > 0");
		if(result3 != "[}]"){
			result3 =JSON.parse(window.external.QuerySQL("select round(SUM((case a.tbcurrency_id  when 1 then a.Balance/100*'" + rateResult[0].ExchangeRate + "'when 2 then a.Balance/100*'" + rateResult[1].ExchangeRate + "' when 3 then a.Balance/100* '" + rateResult[2].ExchangeRate + "'when 4 then a.Balance/100* '" + rateResult[3].ExchangeRate + "'when 5 then a.Balance/100*'" + rateResult[4].ExchangeRate + "'when 6 then a.Balance/100*'" + rateResult[5].ExchangeRate + "'when 7 then a.Balance/100* '" + rateResult[6].ExchangeRate + "'when 8 then a.Balance/100* '" + rateResult[7].ExchangeRate + "'when 9 then a.Balance/100*'" + rateResult[8].ExchangeRate + "'when 10 then a.Balance/100*'" + rateResult[9].ExchangeRate + "'end )), 2) as SumAmount from tbsubAccount as a where a.mark = 0 and a.Balance > 0"));
			assetsValue = formatnumber(Math.round((result3[0].SumAmount)*100)/100,2);
			assetsValue = String(assetsValue);
		} 

        result4 =window.external.QuerySQL("select round(SUM((case a.tbcurrency_id  when 1 then a.Balance/100* '" + rateResult[0].ExchangeRate + "'when 2 then a.Balance/100* '" + rateResult[1].ExchangeRate + "'when 3 then a.Balance/100* '" + rateResult[2].ExchangeRate + "'when 4 then a.Balance/100* '" + rateResult[3].ExchangeRate + "'when 5 then a.Balance/100* '" + rateResult[4].ExchangeRate + "'when 6 then a.Balance/100* '" + rateResult[5].ExchangeRate + "'when 7 then a.Balance/100* '" + rateResult[6].ExchangeRate + "'when 8 then a.Balance/100* '" + rateResult[7].ExchangeRate + "'when 9 then a.Balance/100* '" + rateResult[8].ExchangeRate + "'when 10 then a.Balance/100* '" + rateResult[9].ExchangeRate + "'end )), 2) as SumAmount from tbsubAccount as a where a.mark = 0 and a.Balance < 0");
        if(result4 != "[}]"){
			result4 =JSON.parse(window.external.QuerySQL("select round(SUM((case a.tbcurrency_id  when 1 then a.Balance/100* '" + rateResult[0].ExchangeRate + "'when 2 then a.Balance/100* '" + rateResult[1].ExchangeRate + "'when 3 then a.Balance/100* '" + rateResult[2].ExchangeRate + "'when 4 then a.Balance/100* '" + rateResult[3].ExchangeRate + "'when 5 then a.Balance/100* '" + rateResult[4].ExchangeRate + "'when 6 then a.Balance/100* '" + rateResult[5].ExchangeRate + "'when 7 then a.Balance/100* '" + rateResult[6].ExchangeRate + "'when 8 then a.Balance/100* '" + rateResult[7].ExchangeRate + "'when 9 then a.Balance/100* '" + rateResult[8].ExchangeRate + "'when 10 then a.Balance/100* '" + rateResult[9].ExchangeRate + "'end )), 2) as SumAmount from tbsubAccount as a where a.mark = 0 and a.Balance < 0"));
			debtValue = formatnumber(Math.round((0 - result4[0].SumAmount)*100)/100,2);
			debtValue = String(debtValue); 
		}
	}catch(e){
	}
	$("#number3").html(getValue);
	$("#number4").html(outValue);
	$("#number2").html(debtValue);
	$("#number1").html(assetsValue);
	$("#beforelogin").hide();
	$("#afterlogin").show();
}