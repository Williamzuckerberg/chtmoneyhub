/* 当前窗口大小 */
var curClientHeight = 0;
var curClientWidth = 0;

var allData = new Array();
var currentData = new Array();

/*
 * param1 名称；
 * param2，3 区间
 * param4 是否被选择 0 未选择,1已选择
 */
var defaultInterest=[
	["预期收益率",0,0,0],
	["3%以下",0,3,0],
	["3%到5%",3,5,0],
	["5%到10%",5,10,0],
	["10%以上",10,100,0]
];

/*
 * param1 名称；
 * param2，3 区间
 * param4 是否被选择 0 未选择,1已选择
 */
var defaultDuration=[
	["理财期限",0,0,0],
	["1月内",1,30,0],
	["1-3个月",30,90,0],
	["3-6个月",90,180,0],
	["6-12个月",180,365,0],
	["1-2年",365,730,0],
	["2年以上",730,10000,0]
];

/*
 * param1 名称；
 * param2，3 区间
 * param4 是否被选择 0 未选择,1已选择
 */
var defaultCurrency=[
	["币种","test",0],
	["人民币","人民币",0],
	["其他币种","其他币种",0]
];

/*
 * param1 名称；
 * param2 区间
 * param3 是否被选择 0 未选择,1已选择
 */
var defaultBank= [["银行","",0]];
var conditionSelect = [];

var prevData = new Array();

var sortConditionIndex = 7;

function createDefaultBank(){
	try {
		result = JSON.parse(window.external.QuerySQL("SELECT name AS bankName, id FROM sysBank WHERE classId=0", "SysDB"));
	} catch(e) {
		result = [{
				"bankName": "中国银行",
				"id": 1
			}, {
				"bankName": "中国工商银行",
				"id": 2
			}]
	}
	$.each(result, function(i,n) {
		var temp=new Array();
		if (n.bankName == "光大银行") temp.push("中国光大银行");
		else if(n.bankName == "民生银行") temp.push("中国民生银行");
		else temp.push(n.bankName);
		temp.push(n.id);
	  	temp.push(0);
	  	defaultBank.push(temp);
	});
}

/** 启动时执行
 */
$(function() {
	getXmlData();
	//生成默认的系统银行数据
	createDefaultBank();
	getUserChoice();
	renderLeftSelectArea();
	curClientHeight = 0;
	curClientWidth = 0;
	//调整屏幕大小
	initSize();
	if(allData.length>0) prevData = allData;
	//IE7下会莫名地出现启动时不显示卷滚条的情况，以下语句纯粹是为对付IE7
	if ($("#interest2").hasClass('sCheckBox')) {
		$("#interest2").removeClass('sCheckBox').addClass('sCheckBoxSelected');
		$("#interest2").removeClass('sCheckBoxSelected').addClass('sCheckBox');
	} else {
		$("#interest2").removeClass('sCheckBoxSelected').addClass('sCheckBox');
		$("#interest2").removeClass('sCheckBox').addClass('sCheckBoxSelected');
	}
});

function TabActivated() {
	reloadProduct = "-1";
	try {
		reloadProduct = window.external.GetParameter("ReloadProduct");
		window.external.SetParameter("ReloadProduct", "-1");
	} catch (e) {
	} 
	if (reloadProduct != "-1") {
	   window.location.reload();
	}
}

function addClick(){
	$(".trDetail").click(function () {
		$(".trDetail").next("tr").hide();
		if ($(this).hasClass("tSelected")) {
			$(this).next("tr").hide();
			$(this).removeClass("tSelected");
		} else {
			$(this).next("tr").show();
			$(".trDetail").removeClass("tSelected");
			$(this).addClass("tSelected");
		}
	});
}

/** 屏幕大小改变时执行
 */
function initSize() {
	try {
		screenSize = window.external.GetScreenSize().split("x");
		resWidth = screenSize[0];
		resHeight = screenSize[1] - 30;
	} catch (e) {
		resWidth = 1324;
		resHeight = 468;
	}
	$(".dLeft").width(210);
	$(".dRight").width(resWidth - 220);
	$("#dLeftContent").height(resHeight - $("#dLeftHeader").height() - 11);
	$("#dRightRecords").width($(".dRight").width() - 10);

	//调整列表表格宽度
	$(".dRRBCenter").each(function (index) {
		$(this).width($(this).parent().parent().width() - 18);
	});

	//右下角交易列表区高度
	RRHeight = resHeight;
	$("#dRightRecords").height(RRHeight);
	$("#dRightRecords #dRRDetail").height(RRHeight - 40);
}

function getXmlData() {
	try {
		wwwhost = window.external.GetHostName("web");
	} catch (e) {
		wwwhost = "";
	}
	//要求jQuery支持跨域访问
	jQuery.support.cors = true;

	$.ajax({
		url: wwwhost + 'banksite/fincontent.xml',
		type: 'GET',
		dataType: 'xml',
		data: '',
		cache: false,
		timeout: 10000,
		error: function(MLHttpRequest, textStatus, errorThrown) {
				/*var tempData = [];
				tempData.push("");
				tempData.push("");
				tempData.push("abcdefgabcdefga bcdefgabcdefgab cdefgabcdef gabcdefg abcdefgabc defgabcdefga bcdefgabcdefgabcd efgabcdefgabcdefga bcdefgabcdefgabcdefg");
				tempData.push("");
				tempData.push("");
				tempData.push("");
				tempData.push("");
				tempData.push("");
				tempData.push("");
				tempData.push("");
				tempData.push("");
				tempData.push("");
				tempData.push("");
				allData.push(tempData);*/
		},
		success: function(xml) {
			$(xml).find("finprod").each(function(i) {
				var tempData = [];
				tempData.push($(this).children("id").text());
				tempData.push(trimStr($(this).children("bank").text()));
				tempData.push($(this).children("desc").text());
				tempData.push($(this).children("startdate").text());
				tempData.push($(this).children("enddate").text());
				tempData.push($(this).children("interest").text());
				tempData.push($(this).children("duration").text());
				tempData.push(xorDecoding($(this).children("url").text()));
				tempData.push($(this).children("currency").text());
				tempData.push($(this).children("descInfo").text());
				tempData.push(getGB2312Spell($(this).children("bank").text()));
				tempData.push(getGB2312Spell($(this).children("desc").text()));
				tempData.push(getGB2312Spell($(this).children("currency").text()));
				allData.push(tempData);
			});
		},
		complete:function() {
			//完成时回调
			var temp = allData.length;
			if (temp > 0) renderFinanceTable(allData);
			getMySelectData();
			bindSort();
		}
	});
}

function clickCheckbox(arrayName, index) {
	try {
		switch (arrayName) {
			//用toggleClass实现有点问题，后有时间再调试
			case "defaultInterest":
				//第一个条件
				if($("#interest"+index).hasClass("sCheckBoxSelected")){
					$("#interest"+index).removeClass('sCheckBoxSelected').addClass('sCheckBox');
					defaultInterest[index].splice(3,1,0);
				} else {
					$("#interest"+index).removeClass('sCheckBox').addClass('sCheckBoxSelected');
					defaultInterest[index].splice(3,1,1);
				}
				break;

			case "defaultDuration":
				if($("#duration"+index).hasClass("sCheckBoxSelected")){
					$("#duration"+index).removeClass('sCheckBoxSelected').addClass('sCheckBox');
					defaultDuration[index].splice(3,1,0);
				} else {
					$("#duration"+index).removeClass('sCheckBox').addClass('sCheckBoxSelected');
					defaultDuration[index].splice(3,1,1);
				}
				break;

			case "defaultCurrency":
				if($("#currency"+index).hasClass("sCheckBoxSelected")){
					$("#currency"+index).removeClass('sCheckBoxSelected').addClass('sCheckBox');
					defaultCurrency[index].splice(2,1,0);
				} else {
					$("#currency"+index).removeClass('sCheckBox').addClass('sCheckBoxSelected');
					defaultCurrency[index].splice(2,1,1);
				}
			break;

			case "defaultBank":
				if($("#bank"+index).hasClass("sCheckBoxSelected")){
					$("#bank"+index).removeClass('sCheckBoxSelected').addClass('sCheckBox');
					defaultBank[index].splice(2,1,0);
				} else {
					$("#bank"+index).removeClass('sCheckBox').addClass('sCheckBoxSelected');
					defaultBank[index].splice(2,1,1);
				}
				break;
			
			default:
				break;
		}	
	} catch(e) {
	}
	getMySelectData();
}

function renderLeftSelectArea(){
	var myHtml="";
	var myLength=-1;
	//生成第一部分
	myLength = defaultInterest.length;
	myHtml+='<div id="defaultInterest" class="dBlock">';
	for(var i=0; i<myLength; i++){
		if(i==0){
			myHtml+='<div class="dBlockHeader">';
			myHtml+='<span>'+defaultInterest[i][0]+'</span>';
			myHtml+='</div>';	
		} else {
			if(i==1) myHtml+='<div class="dBlockContent">';
			myHtml+='<div class="dBItem">';
			if(defaultInterest[i][3]==0) myHtml+='<span id="interest'+i+'" class="sCheckBox" onclick="clickCheckbox(\'defaultInterest\','+i+');"></span>';
			else myHtml+='<span id="interest'+i+'" class="sCheckBoxSelected" onclick="clickCheckbox(\'defaultInterest\','+i+');"></span>';
			myHtml+='<span class="sDBItem">'+defaultInterest[i][0]+'</span>';
			myHtml+='</div>';
			if(i==(myLength-1)) myHtml+='</div>';
		}
	}
	myHtml+='</div>';
	$('#selectTree').html(myHtml);
	myHtml="";
	myLength=-1;
	//开始生成第二部分
	myLength = defaultDuration.length;
	myHtml+='<div id="defaultDuration" class="dBlock">';
	for(var i=0; i<myLength; i++){
		if(i==0){
			myHtml+='<div class="dBlockHeader">';
			myHtml+='<span>'+defaultDuration[i][0]+'</span>';
			myHtml+='</div>';	
		} else {
			if(i==1) myHtml+='<div class="dBlockContent">';
			myHtml+='<div class="dBItem">';
			if(defaultDuration[i][3]==0) myHtml+='<span id="duration'+i+'" class="sCheckBox" onclick="clickCheckbox(\'defaultDuration\','+i+');"></span>';
			else myHtml+='<span id="duration'+i+'" class="sCheckBoxSelected" onclick="clickCheckbox(\'defaultDuration\','+i+');"></span>';
			myHtml+='<span class="sDBItem">'+defaultDuration[i][0]+'</span>';
			myHtml+='</div>';
			if(i==(myLength-1)) myHtml+='</div>';
		}
	}
	myHtml+='</div>';
	$('#selectTree').append(myHtml);
	myHtml="";
	myLength=-1;
	//开始生成第三部分
	myLength = defaultCurrency.length;
	myHtml+='<div id="defaultCurrency" class="dBlock">';
	for(var i=0; i<myLength; i++){
		if(i==0){
			myHtml+='<div class="dBlockHeader">';
			myHtml+='<span>'+defaultCurrency[i][0]+'</span>';
			myHtml+='</div>';	
		} else {
			if(i==1) myHtml+='<div class="dBlockContent">';
			myHtml+='<div class="dBItem">';
			if(defaultCurrency[i][2]==0) myHtml+='<span id="currency'+i+'" class="sCheckBox" onclick="clickCheckbox(\'defaultCurrency\','+i+');");"></span>';
			else myHtml+='<span id="currency'+i+'" class="sCheckBoxSelected" onclick="clickCheckbox(\'defaultCurrency\','+i+');");"></span>';
			myHtml+='<span class="sDBItem">'+defaultCurrency[i][0]+'</span>';
			myHtml+='</div>';
			if(i==(myLength-1)) myHtml+='</div>';
		}
	}
	myHtml+='</div>';
	$('#selectTree').append(myHtml);
	//开始生成第四部分
	myHtml = "";
	myLength = -1;
	myLength = defaultBank.length;
	myHtml += '<div id="defaultBank" class="dBlock">';
	for (var i=0; i<myLength; i++) {
		if (i == 0) {
			myHtml+='<div class="dBlockHeader">';
			myHtml+='<span>'+defaultBank[i][0]+'</span><span style="margin-right:20px;float:right;cursor:hand;" onclick="allSelect(\'show\')">全部选择</span><span style="margin-right:10px;float:right;cursor:hand;"  onclick="allSelect(\'hide\')">全部清除</span>';
			myHtml+='</div>';	
		} else {
			if(i==1) myHtml+='<div class="dBlockContent">';
			myHtml+='<div class="dBItem">';
			if(defaultBank[i][2]==0) myHtml+='<span id="bank'+i+'" class="sCheckBox" onclick="clickCheckbox(\'defaultBank\','+i+');"></span>';
			else myHtml+='<span id="bank'+i+'" class="sCheckBoxSelected" onclick="clickCheckbox(\'defaultBank\','+i+');"></span>';
			myHtml+='<span class="sDBItem">'+defaultBank[i][0]+'</span>';
			myHtml+='</div>';
			if(i==(myLength-1)) myHtml+='</div>';
		}
	}
	myHtml+='</div>';
	$('#selectTree').append(myHtml);
	myHtml="";
	myLength=-1;
}

/*
 * myData 数据
 * indexPosition 位置排序
 * type 0 asc， 1 desc
 */
function mySort(myData,indexPosition,type){
	switch (indexPosition) {
		case "1":
			myData.sort(function(x,y){
				//名称，中文
				if( type==1 ){
					if(x[11]>=y[11]) return 1;
					if(x[11]< y[11]) return -1;
				} 
				else{
					if(x[11]<y[11]) return 1;
					if(x[11]>=y[11]) return -1;
				}
			});
			break;
		case "2":
			myData.sort(function(x,y){
				//银行，中文
				if( type==1 ){
					if(x[10]>=y[10]) return 1;
					if(x[10]<y[10]) return -1;
				} 
				else{
					if(x[10]<y[10]) return 1;
					if(x[10]>=y[10]) return -1;
				}
			});	
			break;
		case "3":
			myData.sort(function(x,y){
				//截止日期
				if( type==1 ){
					if(x[indexPosition]>=y[indexPosition]) return 1;
					if(x[indexPosition]<y[indexPosition]) return -1;
				} 
				else{
					if(x[indexPosition]<y[indexPosition]) return 1;
					if(x[indexPosition]>=y[indexPosition]) return -1;
				}
			});	
			break;
		case "4":
			myData.sort(function(x,y){
				//截止日期
				if( type==1 ){
					if(x[indexPosition]>=y[indexPosition]) return 1;
					if(x[indexPosition]<y[indexPosition]) return -1;
				} 
				else{
					if(x[indexPosition]<y[indexPosition]) return 1;
					if(x[indexPosition]>=y[indexPosition]) return -1;
				}
			});	
			break;
		case "5":
			myData.sort(function(x,y){
				//截止日期
				if( type==1 ){
					if(Number(x[6])>=Number(y[6])) return 1;
					if(Number(x[6])<Number(y[6])) return -1;
				} 
				else{
					if(Number(x[6])<Number(y[6])) return 1;
					if(Number(x[6])>=Number(y[6])) return -1;
				}
			});	
			break;
		case "6":
			myData.sort(function(x,y){
				//币种
				if( type==1 ){
					if(x[12]>=y[12]) return 1;
					if(x[12]<y[12]) return -1;
				} 
				else{
					if(x[12]<y[12]) return 1;
					if(x[12]>=y[12]) return -1;
				}
			});	
			break;
		case "7":
			myData.sort(function(x,y){
				//截止日期
				if( type==1 ){
					if(x[5]>=y[5]) return 1;
					if(x[5]<y[5]) return -1;
				} 
				else{
					if(x[5]<y[5]) return 1;
					if(x[5]>=y[5]) return -1;
				}
			});	
			break;
	}
	allData = myData;
	renderFinanceTable(allData);
	//增加上条件
	getMySelectData();
}
		
/** 调整表格各列宽度
 */
function adjustTableWidth() {
	if ((jQuery.browser.version == "6.0") && ($("#dRightTableTrans").height() < $("#dRightTableTrans").parents(".customScrollBox").height())) {
		$(".dRTTable td:nth-child(1)").width($(".dRTTable").width() - 600);
		$(".dRTTable td:nth-child(2)").width(120);
		$(".dRTTable td:nth-child(3)").width(120);
		$(".dRTTable td:nth-child(4)").width(120);
		$(".dRTTable td:nth-child(5)").width(60);
		$(".dRTTable td:nth-child(6)").width(60);
		$(".dRightTable td:nth-child(1)").width($(".dRTTable").width() - 600 - 16);
		$(".dRightTable td:nth-child(2)").width(121);
		$(".dRightTable td:nth-child(3)").width(121);
		$(".dRightTable td:nth-child(4)").width(121);
		$(".dRightTable td:nth-child(5)").width(61);
		$(".dRightTable td:nth-child(6)").width(61);
	} else {
		$(".dRTTable td:nth-child(1)").width($(".dRTTable").width() - 600);
		$(".dRTTable td:nth-child(2)").width(120);
		$(".dRTTable td:nth-child(3)").width(120);
		$(".dRTTable td:nth-child(4)").width(120);
		$(".dRTTable td:nth-child(5)").width(60);
		$(".dRTTable td:nth-child(6)").width(60);
		$(".dRightTable td:nth-child(1)").width($(".dRTTable").width() - 600 - 16);
		$(".dRightTable td:nth-child(2)").width(120);
		$(".dRightTable td:nth-child(3)").width(120);
		$(".dRightTable td:nth-child(4)").width(120);
		$(".dRightTable td:nth-child(5)").width(60);
		$(".dRightTable td:nth-child(6)").width(60);
	}
}

/** 执行渲染数据
 * @param myData 为要渲染的数据
 */
function renderFinanceTable(myData){
	$("#dRightTableTrans").empty();
	var rows = myData.length;
	var classes = "tDetail2";
	if (rows > 0) {
		for (var i=0; i<rows; i++) {
			htmlDesc = "";
			if (classes == "tDetail1") {
				classes = "tDetail2";
			} else {
				classes = "tDetail1";
			}
			htmlDesc += '<tr id="'+allData[i][0]+'" interest="'+allData[i][5]+'" currency="'+allData[i][8]+'" duration="'+allData[i][6]+'" bank="'+allData[i][1]+'" class="trDetail '+ classes +'">';
			htmlDesc += '<td class="tDName"><span id="span_' + allData[i][0] + '" value="' + allData[i][7] + '">' + allData[i][2].replace(/\(推广\)/, "<font color='#ED96A7'>$&</font>") + '</span></td>';
			htmlDesc += '<td>' + allData[i][1] + '</td>';
			htmlDesc += '<td>' + allData[i][3] + '</td>';
			htmlDesc += '<td>' + allData[i][4] + '</td>';
			htmlDesc += '<td>' + allData[i][6] + '天</td>';
			
			htmlDesc += '<td>' + allData[i][8] + '</td>';
			htmlDesc += '<td class="tdLast">' + allData[i][5] + '%</td>';
			htmlDesc += '</tr>';
			
			htmlDesc += '<tr id="'+allData[i][0]+'_child" style="display:none;">';
			htmlDesc += '<td class="tdDetail" colspan="7">';
			
			htmlDesc += '<span class="sMIContent">';
			if(allData[i][9]!=""&&allData[i][9].length>0){
				var temp= allData[i][9].split(" ");
				for(var j=0;j<temp.length;j++){
					htmlDesc += temp[j]+"&nbsp;&nbsp;&nbsp;&nbsp;"
				}	
			}
			htmlDesc += '&nbsp;&nbsp;&nbsp;&nbsp;<a class="aDetail" onclick="javascript:window.external.SendVisitRecord(\''+allData[i][7]+'\');window.open(\''+allData[i][7]+'\')";>查看详情>></a>'; 
			htmlDesc += '</span>';
			
			htmlDesc += '</td>';
			htmlDesc += '</tr>';
			if (i == 0) {
				$("#dRightTableTrans").html(htmlDesc);
			} else {
				$("#dRightTableTrans").append(htmlDesc);
			}
		}
		adjustTableWidth();
	}
	//添加绑定的响应事件
	addClick();
}

var currentData = new Array();

function getMySelectData() {
	saveUserChoice();
	try {
		window.external.SetParameter("ConditionChange", "1");
	} catch (e) {
	}
	//将四个集合分开处理
	arrayLength = allData.length;
	//获取条件数组
	interestCondition = new Array();
	for(var i=1;i<defaultInterest.length;i++){
		if(defaultInterest[i][3]==1){
			//选择了这个条件
			var tempLength=interestCondition.length; 
			if(interestCondition[tempLength-1]==defaultInterest[i][1]){
				//删除最后一个
				interestCondition.pop();
				interestCondition.push(defaultInterest[i][2]);	
			} else {
				interestCondition.push(defaultInterest[i][1]);
				interestCondition.push(defaultInterest[i][2]);
			}
		}
	}
	
	durationCondition = new Array();
	for(var i=1;i<defaultDuration.length;i++){
		if(defaultDuration[i][3]==1){
			//选择了这个条件
			var tempLength=durationCondition.length; 
			if(durationCondition[tempLength-1]==defaultDuration[i][1]){
				//删除最后一个
				durationCondition.pop();
				durationCondition.push(defaultDuration[i][2]);	
			} else {
				durationCondition.push(defaultDuration[i][1]);
				durationCondition.push(defaultDuration[i][2]);
			}
		}
	}
	
	currencyCondition = new Array();
	for(var i=1;i<defaultCurrency.length;i++){
		if(defaultCurrency[i][2]==1){
			//选择了这个条件
			currencyCondition.push(defaultCurrency[i][1]);
		}
	}
	
	bankCondition = new Array();
	for(var i=1;i<defaultBank.length;i++){
		if(defaultBank[i][2]==1){
			//选择了这个条件
			bankCondition.push(defaultBank[i][0]);
		}
	}
	
	//生成年化收益率数组
	arrayInterest = new Array();
	for(var i=0;i<allData.length;i++){
		for(var j=0;j<interestCondition.length;){
			if(interestCondition[j]<=allData[i][5]&&allData[i][5]<interestCondition[j+1]){
				//将ID存入，终止循环
				arrayInterest.push(allData[i][0]);
				break;
			} else {
				j=j+2;
			}
		}	
	}
	
	//生成投资期限数组
	arrayDuration = new Array();
	for(var i=0;i<allData.length;i++){
		for(var j=0;j<durationCondition.length;){
			if(durationCondition[j]<=allData[i][6]&&allData[i][6]<durationCondition[j+1]){
				//将ID存入，终止循环
				arrayDuration.push(allData[i][0]);
				break;
			} else {
				j=j+2;
			}
		}	
	}
	
	//生成币种数组
	arrayCurrency = new Array();
	currencyTempLength=currencyCondition.length;
	isRMB=false;
	if(currencyTempLength==2){
		for(var i=0;i<allData.length;i++){
			arrayCurrency.push(allData[i][0]);
		}
	} else if(currencyTempLength==1){
		if(currencyCondition[0]==defaultCurrency[1][0]) isRMB = true;
		for(var i=0;i<allData.length;i++){
			if(isRMB){
				if(allData[i][8] == defaultCurrency[1][0]) arrayCurrency.push(allData[i][0]);
			} else {
				if(allData[i][8] != defaultCurrency[1][0]) arrayCurrency.push(allData[i][0]);
			}
		}
	}
	
	//生成银行数组
	arrayBank = new Array();
	for (var i=0;i<allData.length;i++) {
		for(var j=0;j<bankCondition.length;j++){
			if(bankCondition[j]==allData[i][1] ){
				//将ID存入，终止循环
				arrayBank.push(allData[i][0]);
				break;
			}
		}	
	}
	if(interestCondition.length == 0 || currencyCondition.length == 0 || durationCondition.length == 0 || bankCondition.length == 0 ){
		//有条件为不选择
		var newData = new Array();
		renderNewData(newData);
	} else {
		var nowConditionArray = new Array();
		var newData = new Array();
		if(interestCondition.length>0){
			nowConditionArray.push(arrayInterest);
			//合并数组
			newData = arrayInterest.sort(sortNumber);
		} 
		if(durationCondition.length>0){
			nowConditionArray.push(arrayDuration);
			if(newData.length>0){
				//合并数组
				newData= getNewData(newData,arrayDuration.sort(sortNumber));
			}
		}
		if(currencyCondition.length>0){
			nowConditionArray.push(arrayCurrency);
			if(newData.length>0){
				//合并数组
				newData= getNewData(newData,arrayCurrency.sort(sortNumber));
			}
		}
		if(bankCondition.length>0){
			nowConditionArray.push(arrayBank);
			if(newData.length>0){
				//合并数组
				newData= getNewData(newData,arrayBank.sort(sortNumber));
			}
		}
		renderNewData(newData);	
	}
}

function getNewData(a,b){
	try{
		var c = new Array();
		var i = 0;
		var j = 0;
		
		for(i=0;i<a.length;i++){
			for(j=0;j<b.length;j++){
				if(a[i]==b[j]){
					c.push(a[i]);
					break;
				}
			}
		}
	}catch(e){
	}
	return c;
}

function sortNumber(a, b){
	return a - b
}

/** 显示新数据
 * @param a 需要显示的行
 */
function renderNewData(a){
	var k=0;
	for (var i=0;i<allData.length;i++) {
		var isShow = false;
		for(var j=0; j<a.length;j++){
			if(allData[i][0]==a[j]){
				isShow = true;
				break;	
			}
		}
		if (isShow) {
			//此部分处理显示的样式
			if(k%2==0){
				if($("#"+allData[i][0]).hasClass("tDetail2")) $("#"+allData[i][0]).removeClass("tDetail2").addClass('tDetail1');
			} else {
				if($("#"+allData[i][0]).hasClass("tDetail1")) $("#"+allData[i][0]).removeClass("tDetail1").addClass('tDetail2');
			}
			$("#"+allData[i][0]).show(); 
			if ($("#"+allData[i][0]).hasClass("tSelected")) {
				$("#"+allData[i][0]).next("tr").hide();
				$("#"+allData[i][0]).removeClass("tSelected");
			}
			k++;	
		} else {
			$("#"+allData[i][0]).hide();
			$("#"+allData[i][0]).next("tr").hide();
		}
	}
	if (jQuery.browser.version == "6.0") {
		adjustTableWidth();
	}
}

/** base64解码
 */
var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

function decode64(input) {
  var output = "";
  var chr1, chr2, chr3 = "";
  var enc1, enc2, enc3, enc4 = "";
  var i = 0;
      
      if(input.length%4!=0)
      {
                return "";
      }
  var base64test = /[^A-Za-z0-9\+\/\=]/g;
      if (base64test.exec(input))
      {
                return "";
      }

  do {
     enc1 = keyStr.indexOf(input.charAt(i++));
     enc2 = keyStr.indexOf(input.charAt(i++));
     enc3 = keyStr.indexOf(input.charAt(i++));
     enc4 = keyStr.indexOf(input.charAt(i++));

     chr1 = (enc1 << 2) | (enc2 >> 4);
     chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
     chr3 = ((enc3 & 3) << 6) | enc4;
             
             output = output + String.fromCharCode(chr1);

     if (enc3 != 64) {
                    output+=String.fromCharCode(chr2);
     }
     if (enc4 != 64) {
                    output+=String.fromCharCode(chr3);
     }

     chr1 = chr2 = chr3 = "";
     enc1 = enc2 = enc3 = enc4 = "";

  } while (i < input.length);
  return output;
}

function xorDecoding(_str) {
   return decode64(_str);
}

function allSelect(status){
	if(status=="hide"){
		for( var i=1;i<defaultBank.length;i++){
		if($("#bank"+i).hasClass("sCheckBoxSelected")){
				$("#bank"+i).removeClass('sCheckBoxSelected').addClass('sCheckBox');
				defaultBank[i].splice(2,1,0);
			}
		}	
	} else {
		for( var i=1;i<defaultBank.length;i++){
			if($("#bank"+i).hasClass("sCheckBox")){
				$("#bank"+i).removeClass('sCheckBox').addClass('sCheckBoxSelected');
				defaultBank[i].splice(2,1,1);	
			}
		}	
	}
	getMySelectData();
}	

function bindSort(){
	$("td[id^='tdSort']").each(function(i) {
	  	$(this).click(function(){
	  		sortHandle($(this).attr("id").substring(6,7),0);
		});
	});
}

function sortHandle(indexPosition,type){
	//数据处理
	var indexPositionId = "sortCon"+indexPosition;
	
	if(sortConditionIndex == indexPosition){
		//没变换条件
		//切换条件id状态
		$("#tdSort"+indexPosition).unbind().click(function(){
		  	if($("#"+indexPositionId).hasClass('tree1')){
		  		sortHandle(indexPosition,0);
		  	} else {
		  		sortHandle(indexPosition,1);
		  	}
		});
		if($("#"+indexPositionId).hasClass('tree1')){
			$("#"+indexPositionId).removeClass('tree1').addClass('tree2');
		} 
		else{
			$("#"+indexPositionId).removeClass('tree2').addClass('tree1');
		} 
	} else {
		//显示箭头
		//移除重置事件
		try{
			$("td[id^='tdSort']").each(function(i){
				$(this).unbind().click(function(){
				  	if($("#sortCon"+$(this).attr("id").substring(6,7)).hasClass('tree2')){
				  		$("#sortCon"+$(this).attr("id").substring(6,7)).removeClass('tree2').addClass('tree1');
				  	}
				  	sortHandle($(this).attr("id").substring(6,7),0);
				});
			});
			$("#sortCon"+sortConditionIndex).hide();
			sortConditionIndex = indexPosition;
		} catch(e){
			debug(e.message);
		}
	}
	$("#"+indexPositionId).show();
	if($("#"+indexPositionId).hasClass('tree1')) mySort(allData,indexPosition,0);
	else mySort(allData,indexPosition,1);
	
}

//移除空格
function trimStr(str) { 
 var re = /\s*(\S[^\0]*\S)\s*/; 
 re.exec(str); 
 return RegExp.$1; 
}

/** 保存用户选择
 */
function saveUserChoice(){
	var interestChoice ="";
	for(var i=1;i<defaultInterest.length;i++){
		if( defaultInterest[i][3] == 1 ) {
			if(interestChoice.length == 0 ) interestChoice+=i;	
			else interestChoice+="|"+i;
		}
	}
	var durationChoice = "";
	for(var i=1;i<defaultDuration.length;i++){
		if( defaultDuration[i][3] == 1 ){
			if(durationChoice.length == 0 ) durationChoice+=i;	
			else durationChoice+="|"+i;
		} 
	}
	var currencyChoice = "";
	for(var i=1;i<defaultCurrency.length;i++){
		if( defaultCurrency[i][2] == 1 ){
			if(currencyChoice.length == 0 ) currencyChoice+=i;	
			else currencyChoice+="|"+i;
		}
	}
	var bankChoice = "";
	for(var i=1;i<defaultBank.length;i++){
		if( defaultBank[i][2] == 1 ) {
			if(bankChoice.length == 0 ) bankChoice+=i;	
			else bankChoice+="|"+i;
		}
	}
	try{
		window.external.ExecuteSQL("UPDATE tbProductChoice SET interestchoice='" + interestChoice + "', durationchoice='" + durationChoice + "', currencychoice='" + currencyChoice + "', bankchoice='" + bankChoice + "'");
	} catch(e){
	}
}

/** 获取用户选择
 */
function getUserChoice() {
	try {
		result = JSON.parse(window.external.QuerySQL("SELECT interestchoice AS c1, durationchoice AS c2, currencychoice AS c3, bankchoice AS c4 FROM tbProductChoice"));
	} catch(e) {
	}
	if (result[0].c1 != "") {
		var c1array =result[0].c1.split("|");
		for(var i=0;i<c1array.length;i++){
			defaultInterest[c1array[i]].splice(3,1,1);
		}	
	}
	if(result[0].c2!=""){
		var c2array =result[0].c2.split("|");
		for(var i=0;i<c2array.length;i++){
			defaultDuration[c2array[i]].splice(3,1,1); 
		}	
	}
	if(result[0].c3!=""){
		var c3array =result[0].c3.split("|");
		for(var i=0;i<c3array.length;i++){
			defaultCurrency[c3array[i]].splice(2,1,1); 
		}
	}
	if(result[0].c4!=""){
		var c4array =result[0].c4.split("|");
		for(var i=0;i<c4array.length;i++){
			defaultBank[c4array[i]].splice(2,1,1); 
		}
	}
}
